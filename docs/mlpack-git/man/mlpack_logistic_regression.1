.\" Text automatically generated by txt2man
.TH mlpack_logistic_regression  "1" "" ""
.SH NAME
\fBmlpack_logistic_regression \fP- l2-regularized logistic regression and prediction
.SH SYNOPSIS
.nf
.fam C
 \fBmlpack_logistic_regression\fP [\fB-h\fP] [\fB-v\fP]  
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION


An implementation of L2-regularized logistic regression using either the
L-BFGS optimizer or SGD (stochastic gradient descent). This solves the
regression problem
.PP
.nf
.fam C
  y = (1 / 1 + e^-(X * b))

.fam T
.fi
where y takes values 0 or 1.
.PP
This program allows loading a logistic regression model (via the
\(cq\fB--input_model_file\fP (\fB-m\fP)' parameter) or training a logistic regression model
given training data (specified with the '\fB--training_file\fP (\fB-t\fP)' parameter), or
both those things at once. In addition, this program allows classification on
a test dataset (specified with the '\fB--test_file\fP (\fB-T\fP)' parameter) and the
classification results may be saved with the '\fB--output_file\fP (\fB-o\fP)' output
parameter. The trained logistic regression model may be saved using the
\(cq\fB--output_model_file\fP (\fB-M\fP)' output parameter.
.PP
The training data, if specified, may have class labels as its last dimension. 
Alternately, the '\fB--labels_file\fP (\fB-l\fP)' parameter may be used to specify a
separate matrix of labels.
.PP
When a model is being trained, there are many options. L2 regularization (to
prevent overfitting) can be specified with the '\fB--lambda\fP (\fB-L\fP)' option, and the
optimizer used to train the model can be specified with the '\fB--optimizer\fP (\fB-O\fP)'
parameter. Available options are 'sgd' (stochastic gradient descent), 'lbfgs'
(the L-BFGS optimizer), and 'minibatch-sgd' (minibatch stochastic gradient
descent). There are also various parameters for the optimizer; the
\(cq\fB--max_iterations\fP (\fB-n\fP)' parameter specifies the maximum number of allowed
iterations, and the '\fB--tolerance\fP (\fB-e\fP)' parameter specifies the tolerance for 
convergence. For the SGD and mini-batch SGD optimizers, the '\fB--step_size\fP
(\fB-s\fP)' parameter controls the step size taken at each iteration by the
optimizer. The batch size for mini-batch SGD is controlled with the
\(cq\fB--batch_size\fP (\fB-b\fP)' parameter. If the objective function for your data is
oscillating between Inf and 0, the step size is probably too large. There are
more parameters for the optimizers, but the C++ interface must be used to
access these.
.PP
For SGD, an iteration refers to a single point, and for mini-batch SGD, an
iteration refers to a single batch. So to take a single pass over the dataset
with SGD, '\fB--max_iterations\fP (\fB-n\fP)' should be set to the number of points in the
dataset.
.PP
Optionally, the model can be used to predict the responses for another matrix
of data points, if '\fB--test_file\fP (\fB-T\fP)' is specified. The '\fB--test_file\fP (\fB-T\fP)'
parameter can be specified without the '\fB--training_file\fP (\fB-t\fP)' parameter, so
long as an existing logistic regression model is given with the
\(cq\fB--input_model_file\fP (\fB-m\fP)' parameter. The output predictions from the logistic
regression model may be saved with the '\fB--output_file\fP (\fB-o\fP)' parameter.
.PP
This implementation of logistic regression does not support the general
multi-class case but instead only the two-class case. Any labels must be
either 0 or 1. For more classes, see the softmax_regression program.
.PP
As an example, to train a logistic regression model on the data ''data.csv''
with labels ''labels.csv'' with L2 regularization of 0.1, saving the model to
\(cq'lr_model.bin'', the following command may be used:
.PP
$ logistic_regression \fB--training_file\fP data.csv \fB--labels_file\fP labels.csv
\fB--lambda\fP 0.1 \fB--output_model_file\fP lr_model.bin
.PP
Then, to use that model to predict classes for the dataset ''test.csv'',
storing the output predictions in ''predictions.csv'', the following command
may be used: 
.PP
$ logistic_regression \fB--input_model_file\fP lr_model.bin \fB--test_file\fP test.csv
\fB--output_file\fP predictions.csv
.SH OPTIONAL INPUT OPTIONS 

.TP
.B
\fB--batch_size\fP (\fB-b\fP) [int]
Batch size for mini-batch SGD. Default value
.RS
.IP 50. 4

\fB--decision_boundary\fP (\fB-d\fP) [double] 
Decision boundary for prediction; if the
logistic function for a point is less than the
boundary, the class is taken to be 0; otherwise,
the class is 1. Default value 0.5.
.RE
.TP
.B
\fB--help\fP (\fB-h\fP) [bool]
Default help info.
.TP
.B
\fB--info\fP [string]
Get help on a specific module or option. 
Default value ''.
\fB--input_model_file\fP (\fB-m\fP) [string] 
Existing model (parameters). Default value ''.
.TP
.B
\fB--labels_file\fP (\fB-l\fP) [string]
A matrix containing labels (0 or 1) for the
points in the training set (y). Default value
\(cq'.
.TP
.B
\fB--lambda\fP (\fB-L\fP) [double]
L2-regularization parameter for training. 
Default value 0.
.TP
.B
\fB--max_iterations\fP (\fB-n\fP) [int]
Maximum iterations for optimizer (0 indicates no
limit). Default value 10000.
.TP
.B
\fB--optimizer\fP (\fB-O\fP) [string]
Optimizer to use for training ('lbfgs' or
\(cqsgd'). Default value 'lbfgs'.
.TP
.B
\fB--step_size\fP (\fB-s\fP) [double]
Step size for SGD and mini-batch SGD optimizers.
Default value 0.01.
.TP
.B
\fB--test_file\fP (\fB-T\fP) [string]
Matrix containing test dataset. Default value
\(cq'.
.TP
.B
\fB--tolerance\fP (\fB-e\fP) [double]
Convergence tolerance for optimizer. Default
value 1e-10.
\fB--training_file\fP (\fB-t\fP) [string] 
A matrix containing the training set (the matrix
of predictors, X). Default value ''.
.TP
.B
\fB--verbose\fP (\fB-v\fP) [bool]
Display informational messages and the full list
of parameters and timers at the end of
execution.
.TP
.B
\fB--version\fP (\fB-V\fP) [bool]
Display the version of mlpack.
.SH OPTIONAL OUTPUT OPTIONS 

.TP
.B
\fB--output_file\fP (\fB-o\fP) [string]
If \fB--test_file\fP is specified, this matrix is
where the predictions for the test set will be
saved. Default value ''.
\fB--output_model_file\fP (\fB-M\fP) [string] 
Output for trained logistic regression model. 
Default value ''.
\fB--output_probabilities_file\fP (\fB-p\fP) [string] 
If \fB--test_file\fP is specified, this matrix is
where the class probabilities for the test set
will be saved. Default value ''.
.SH ADDITIONAL INFORMATION
.SH ADDITIONAL INFORMATION


For further information, including relevant papers, citations, and theory,
For further information, including relevant papers, citations, and theory,
consult the documentation found at http://www.mlpack.org or included with your
consult the documentation found at http://www.mlpack.org or included with your
DISTRIBUTION OF MLPACK.
DISTRIBUTION OF MLPACK.
