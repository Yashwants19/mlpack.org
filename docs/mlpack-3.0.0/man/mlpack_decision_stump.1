.\" Text automatically generated by txt2man
.TH mlpack_decision_stump  "1" "" ""
.SH NAME
\fBmlpack_decision_stump \fP- decision stump
.SH SYNOPSIS
.nf
.fam C
 \fBmlpack_decision_stump\fP [\fB-h\fP] [\fB-v\fP]  
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION


This program implements a decision stump, which is a single-level decision
tree. The decision stump will split on one dimension of the input data, and
will split into multiple buckets. The dimension and bins are selected by
maximizing the information gain of the split. Optionally, the minimum number
of training points in each bin can be specified with the '\fB--bucket_size\fP (\fB-b\fP)'
parameter.
.PP
The decision stump is parameterized by a splitting dimension and a vector of
values that denote the splitting values of each bin.
.PP
This program enables several applications: a decision tree may be trained or
loaded, and then that decision tree may be used to classify a given set of
test points. The decision tree may also be saved to a file for later usage.
.PP
To train a decision stump, training data should be passed with the
\(cq\fB--training_file\fP (\fB-t\fP)' parameter, and their corresponding labels should be
passed with the '\fB--labels_file\fP (\fB-l\fP)' option. Optionally, if '\fB--labels_file\fP
(\fB-l\fP)' is not specified, the labels are assumed to be the last dimension of the
training dataset. The '\fB--bucket_size\fP (\fB-b\fP)' parameter controls the minimum
number of training points in each decision stump bucket.
.PP
For classifying a test set, a decision stump may be loaded with the
\(cq\fB--input_model_file\fP (\fB-m\fP)' parameter (useful for the situation where a stump
has already been trained), and a test set may be specified with the
\(cq\fB--test_file\fP (\fB-T\fP)' parameter. The predicted labels can be saved with the
\(cq\fB--predictions_file\fP (\fB-p\fP)' output parameter.
.PP
Because decision stumps are trained in batch, retraining does not make sense
and thus it is not possible to pass both '\fB--training_file\fP (\fB-t\fP)' and
\(cq\fB--input_model_file\fP (\fB-m\fP)'; instead, simply build a new decision stump with the
training data.
.PP
After training, a decision stump can be saved with the '\fB--output_model_file\fP
(\fB-M\fP)' output parameter. That stump may later be re-used in subsequent calls
to this program (or others).
.SH OPTIONAL INPUT OPTIONS 

.TP
.B
\fB--bucket_size\fP (\fB-b\fP) [int]
The minimum number of training points in each
decision stump bucket. Default value 6.
.TP
.B
\fB--help\fP (\fB-h\fP) [bool]
Default help info.
.TP
.B
\fB--info\fP [string]
Get help on a specific module or option. 
Default value ''.
\fB--input_model_file\fP (\fB-m\fP) [unknown] 
Decision stump model to load. Default value
\(cq'.
.TP
.B
\fB--labels_file\fP (\fB-l\fP) [string]
Labels for the training set. If not specified,
the labels are assumed to be the last row of the
training data. Default value ''.
.TP
.B
\fB--test_file\fP (\fB-T\fP) [string]
A dataset to calculate predictions for. Default
value ''.
\fB--training_file\fP (\fB-t\fP) [string] 
The dataset to train on. Default value ''.
.TP
.B
\fB--verbose\fP (\fB-v\fP) [bool]
Display informational messages and the full list
of parameters and timers at the end of
execution.
.TP
.B
\fB--version\fP (\fB-V\fP) [bool]
Display the version of mlpack.
.SH OPTIONAL OUTPUT OPTIONS 

\fB--output_model_file\fP (\fB-M\fP) [unknown] 
Output decision stump model to save. Default
value ''.
\fB--predictions_file\fP (\fB-p\fP) [string] 
The output matrix that will hold the predicted
labels for the test set. Default value ''.
.SH ADDITIONAL INFORMATION
.SH ADDITIONAL INFORMATION


For further information, including relevant papers, citations, and theory,
For further information, including relevant papers, citations, and theory,
consult the documentation found at http://www.mlpack.org or included with your
consult the documentation found at http://www.mlpack.org or included with your
DISTRIBUTION OF MLPACK.
DISTRIBUTION OF MLPACK.
