.\" Text automatically generated by txt2man
.TH mlpack_hoeffding_tree 1 "10 May 2018" "mlpack-git-e21aabc1c" "User Commands"
.SH NAME
\fBmlpack_hoeffding_tree \fP- hoeffding trees
.SH SYNOPSIS
.nf
.fam C
 \fBmlpack_hoeffding_tree\fP [\fB-b\fP \fIbool\fP] [\fB-B\fP \fIint\fP] [\fB-c\fP \fIdouble\fP] [\fB-m\fP \fIunknown\fP] [\fB-l\fP \fIstring\fP] [\fB-n\fP \fIint\fP] [\fB-I\fP \fIint\fP] [\fB-N\fP \fIstring\fP] [\fB-o\fP \fIint\fP] [\fB-s\fP \fIint\fP] [\fB-T\fP \fIstring\fP] [\fB-L\fP \fIstring\fP] [\fB-t\fP \fIstring\fP] [\fB-V\fP \fIbool\fP] [\fB-M\fP \fIunknown\fP] [\fB-p\fP \fIstring\fP] [\fB-P\fP \fIstring\fP] [\fB-h\fP \fB-v\fP] 
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION


This program implements Hoeffding trees, a form of streaming decision tree
suited best for large (or streaming) datasets. This program supports both
categorical and numeric data. Given an input dataset, this program is able to
train the tree with numerous training options, and save the model to a file. 
The program is also able to use a trained model or a model from file in order
to predict classes for a given test set.
.PP
The training file and associated labels are specified with the
\(cq\fB--training_file\fP (\fB-t\fP)' and '\fB--labels_file\fP (\fB-l\fP)' parameters, respectively.
Optionally, if '\fB--labels_file\fP (\fB-l\fP)' is not specified, the labels are assumed
to be the last dimension of the training dataset.
.PP
The training may be performed in batch mode (like a typical decision tree
algorithm) by specifying the '\fB--batch_mode\fP (\fB-b\fP)' option, but this may not be
the best option for large datasets.
.PP
When a model is trained, it may be saved via the '\fB--output_model_file\fP (\fB-M\fP)'
output parameter. A model may be loaded from file for further training or
testing with the '\fB--input_model_file\fP (\fB-m\fP)' parameter.
.PP
Test data may be specified with the '\fB--test_file\fP (\fB-T\fP)' parameter, and if
performance statistics are desired for that test set, labels may be specified
with the '\fB--test_labels_file\fP (\fB-L\fP)' parameter. Predictions for each test point
may be saved with the '\fB--predictions_file\fP (\fB-p\fP)' output parameter, and class
probabilities for each prediction may be saved with the '\fB--probabilities_file\fP
(\fB-P\fP)' output parameter.
.PP
For example, to train a Hoeffding tree with confidence 0.99 with data
\(cqdataset.csv', saving the trained tree to 'tree.bin', the following command
may be used:
.PP
$ hoeffding_tree \fB--training_file\fP dataset.arff \fB--confidence\fP 0.99
\fB--output_model_file\fP tree.bin
.PP
Then, this tree may be used to make predictions on the test set
\(cqtest_set.csv', saving the predictions into 'predictions.csv' and the class
probabilities into 'class_probs.csv' with the following command: 
.PP
$ hoeffding_tree \fB--input_model_file\fP tree.bin \fB--test_file\fP test_set.arff
\fB--predictions_file\fP predictions.csv \fB--probabilities_file\fP class_probs.csv
.RE
.PP

.SH OPTIONAL INPUT OPTIONS 

.TP
.B
\fB--batch_mode\fP (\fB-b\fP) [\fIbool\fP]
If true, samples will be considered in batch instead of as a stream. This generally results in better trees but at the cost of memory usage and runtime. 
.TP
.B
\fB--bins\fP (\fB-B\fP) [\fIint\fP]
If the 'domingos' split strategy is used, this specifies the number of bins for each numeric split. Default value 10. 
.TP
.B
\fB--confidence\fP (\fB-c\fP) [\fIdouble\fP]
Confidence before splitting (between 0 and 1).  Default value 0.95. 
.TP
.B
\fB--help\fP (\fB-h\fP) [\fIbool\fP]
Default help info. 
.TP
.B
\fB--info\fP [\fIstring\fP]
Get help on a specific module or option.  Default value ''. 
.TP
.B
\fB--info_gain\fP (\fB-i\fP) [\fIbool\fP]
If set, information gain is used instead of Gini impurity for calculating Hoeffding bounds. 
.TP
.B
\fB--input_model_file\fP (\fB-m\fP) [\fIunknown\fP]
Input trained Hoeffding tree model. Default value ''. 
.TP
.B
\fB--labels_file\fP (\fB-l\fP) [\fIstring\fP]
Labels for training dataset. Default value ''. 
.TP
.B
\fB--max_samples\fP (\fB-n\fP) [\fIint\fP]
Maximum number of samples before splitting.  Default value 5000. 
.TP
.B
\fB--min_samples\fP (\fB-I\fP) [\fIint\fP]
Minimum number of samples before splitting.  Default value 100. 
.TP
.B
\fB--numeric_split_strategy\fP (\fB-N\fP) [\fIstring\fP]
The splitting strategy to use for numeric features: 'domingos' or 'binary'. Default value 'binary'. 
.TP
.B
\fB--observations_before_binning\fP (\fB-o\fP) [\fIint\fP]
If the 'domingos' split strategy is used, this specifies the number of samples observed before binning is performed. Default value 100. 
.TP
.B
\fB--passes\fP (\fB-s\fP) [\fIint\fP]
Number of passes to take over the dataset.  Default value 1. 
.TP
.B
\fB--test_file\fP (\fB-T\fP) [\fIstring\fP]
Testing dataset (may be categorical). Default value ''. 
.TP
.B
\fB--test_labels_file\fP (\fB-L\fP) [\fIstring\fP]
Labels of test data. Default value ''. 
.TP
.B
\fB--training_file\fP (\fB-t\fP) [\fIstring\fP]
Training dataset (may be categorical). Default value ''. 
.TP
.B
\fB--verbose\fP (\fB-v\fP) [\fIbool\fP]
Display informational messages and the full list of parameters and timers at the end of execution. 
.TP
.B
\fB--version\fP (\fB-V\fP) [\fIbool\fP]
Display the version of mlpack.  
.SH OPTIONAL OUTPUT OPTIONS 

.TP
.B
\fB--output_model_file\fP (\fB-M\fP) [\fIunknown\fP]
Output for trained Hoeffding tree model.  Default value ''. 
.TP
.B
\fB--predictions_file\fP (\fB-p\fP) [\fIstring\fP]
Matrix to output label predictions for test data into. Default value ''. 
.TP
.B
\fB--probabilities_file\fP (\fB-P\fP) [\fIstring\fP]
In addition to predicting labels, provide rediction probabilities in this matrix. Default value ''.
.SH ADDITIONAL INFORMATION

For further information, including relevant papers, citations, and theory,
consult the documentation found at http://www.mlpack.org or included with your
distribution of mlpack.
