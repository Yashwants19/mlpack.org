.\" Text automatically generated by txt2man
.TH mlpack_cf 1 "10 May 2018" "mlpack-git-e21aabc1c" "User Commands"
.SH NAME
\fBmlpack_cf \fP- collaborative filtering
.SH SYNOPSIS
.nf
.fam C
 \fBmlpack_cf\fP [\fB-a\fP \fIstring\fP] [\fB-A\fP \fIbool\fP] [\fB-m\fP \fIunknown\fP] [\fB-I\fP \fIbool\fP] [\fB-N\fP \fIint\fP] [\fB-r\fP \fIdouble\fP] [\fB-n\fP \fIint\fP] [\fB-q\fP \fIstring\fP] [\fB-R\fP \fIint\fP] [\fB-c\fP \fIint\fP] [\fB-s\fP \fIint\fP] [\fB-T\fP \fIstring\fP] [\fB-t\fP \fIstring\fP] [\fB-V\fP \fIbool\fP] [\fB-o\fP \fIstring\fP] [\fB-M\fP \fIunknown\fP] [\fB-h\fP \fB-v\fP] 
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION


This program performs collaborative filtering (CF) on the given dataset. Given
a list of user, item and preferences (the '\fB--training_file\fP (\fB-t\fP)' parameter),
the program will perform a matrix decomposition and then can perform a series
of actions related to collaborative filtering. Alternately, the program can
load an existing saved CF model with the '\fB--input_model_file\fP (\fB-m\fP)' parameter
and then use that model to provide recommendations or predict values.
.PP
The input matrix should be a 3-dimensional matrix of ratings, where the first
dimension is the user, the second dimension is the item, and the third
dimension is that user's rating of that item. Both the users and items should
be numeric indices, not names. The indices are assumed to start from 0.
.PP
A set of query users for which recommendations can be generated may be
specified with the '\fB--query_file\fP (\fB-q\fP)' parameter; alternately, recommendations
may be generated for every user in the dataset by specifying the
\(cq\fB--all_user_recommendations\fP (\fB-A\fP)' parameter. In addition, the number of
recommendations per user to generate can be specified with the
\(cq\fB--recommendations\fP (\fB-c\fP)' parameter, and the number of similar users (the size
of the neighborhood) to be considered when generating recommendations can be
specified with the '\fB--neighborhood\fP (\fB-n\fP)' parameter.
.PP
For performing the matrix decomposition, the following optimization algorithms
can be specified via the '\fB--algorithm\fP (\fB-a\fP)' parameter: 
.RS
.IP \(bu 3
\(cqRegSVD' -- Regularized SVD using a SGD optimizer
.IP \(bu 3
\(cqNMF' -- Non-negative matrix factorization with alternating least squares
update rules
.IP \(bu 3
\(cqBatchSVD' -- SVD batch learning
.IP \(bu 3
\(cqSVDIncompleteIncremental' -- SVD incomplete incremental learning
.IP \(bu 3
\(cqSVDCompleteIncremental' -- SVD complete incremental learning
.RE
.PP
A trained model may be saved to with the '\fB--output_model_file\fP (\fB-M\fP)' output
parameter.
.PP
To train a CF model on a dataset 'training_set.csv' using NMF for
decomposition and saving the trained model to 'model.bin', one could call: 
.PP
$ cf \fB--training_file\fP training_set.csv \fB--algorithm\fP NMF \fB--output_model_file\fP
model.bin
.PP
Then, to use this model to generate recommendations for the list of users in
the query set 'users.csv', storing 5 recommendations in 'recommendations.csv',
one could call 
.PP
$ cf \fB--input_model_file\fP model.bin \fB--query_file\fP users.csv \fB--recommendations\fP 5
\fB--output_file\fP recommendations.csv
.RE
.PP

.SH OPTIONAL INPUT OPTIONS 

.TP
.B
\fB--algorithm\fP (\fB-a\fP) [\fIstring\fP]
Algorithm used for matrix factorization.  Default value 'NMF'. 
.TP
.B
\fB--all_user_recommendations\fP (\fB-A\fP) [\fIbool\fP]
Generate recommendations for all users. 
.TP
.B
\fB--help\fP (\fB-h\fP) [\fIbool\fP]
Default help info. 
.TP
.B
\fB--info\fP [\fIstring\fP]
Get help on a specific module or option.  Default value ''. 
.TP
.B
\fB--input_model_file\fP (\fB-m\fP) [\fIunknown\fP]
Trained CF model to load. Default value ''. 
.TP
.B
\fB--iteration_only_termination\fP (\fB-I\fP) [\fIbool\fP]
Terminate only when the maximum number of iterations is reached. 
.TP
.B
\fB--max_iterations\fP (\fB-N\fP) [\fIint\fP]
Maximum number of iterations. If set to zero, there is no limit on the number of iterations.  Default value 1000. 
.TP
.B
\fB--min_residue\fP (\fB-r\fP) [\fIdouble\fP]
Residue required to terminate the factorization (lower values generally mean better fits).  Default value 1e-05. 
.TP
.B
\fB--neighborhood\fP (\fB-n\fP) [\fIint\fP]
Size of the neighborhood of similar users to consider for each query user. Default value 5. 
.TP
.B
\fB--query_file\fP (\fB-q\fP) [\fIstring\fP]
List of query users for which recommendations should be generated. Default value ''. 
.TP
.B
\fB--rank\fP (\fB-R\fP) [\fIint\fP]
Rank of decomposed matrices (if 0, a heuristic is used to estimate the rank). Default value 0. 
\fB--recommendations\fP (\fB-c\fP) [\fIint\fP] Number of recommendations to generate for each query user. Default value 5. 
.TP
.B
\fB--seed\fP (\fB-s\fP) [\fIint\fP]
Set the random seed (0 uses \fBstd::time\fP(NULL)).  Default value 0. 
.TP
.B
\fB--test_file\fP (\fB-T\fP) [\fIstring\fP]
Test set to calculate RMSE on. Default value ''. 
.TP
.B
\fB--training_file\fP (\fB-t\fP) [\fIstring\fP]
Input dataset to perform CF on. Default value ''. 
.TP
.B
\fB--verbose\fP (\fB-v\fP) [\fIbool\fP]
Display informational messages and the full list of parameters and timers at the end of execution. 
.TP
.B
\fB--version\fP (\fB-V\fP) [\fIbool\fP]
Display the version of mlpack.  
.SH OPTIONAL OUTPUT OPTIONS 

.TP
.B
\fB--output_file\fP (\fB-o\fP) [\fIstring\fP]
Matrix that will store output recommendations.  Default value ''. 
.TP
.B
\fB--output_model_file\fP (\fB-M\fP) [\fIunknown\fP]
Output for trained CF model. Default value ''.
.SH ADDITIONAL INFORMATION

For further information, including relevant papers, citations, and theory,
consult the documentation found at http://www.mlpack.org or included with your
distribution of mlpack.
