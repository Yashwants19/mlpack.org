.\" Text automatically generated by txt2man
.TH mlpack_kernel_pca 1 "10 May 2018" "mlpack-git-e21aabc1c" "User Commands"
.SH NAME
\fBmlpack_kernel_pca \fP- kernel principal components analysis
.SH SYNOPSIS
.nf
.fam C
 \fBmlpack_kernel_pca\fP \fB-i\fP \fIstring\fP \fB-k\fP \fIstring\fP [\fB-b\fP \fIdouble\fP] [\fB-c\fP \fIbool\fP] [\fB-D\fP \fIdouble\fP] [\fB-S\fP \fIdouble\fP] [\fB-d\fP \fIint\fP] [\fB-n\fP \fIbool\fP] [\fB-O\fP \fIdouble\fP] [\fB-s\fP \fIstring\fP] [\fB-V\fP \fIbool\fP] [\fB-o\fP \fIstring\fP] [\fB-h\fP \fB-v\fP] 
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION


This program performs Kernel Principal Components Analysis (KPCA) on the
specified dataset with the specified kernel. This will transform the data
onto the kernel principal components, and optionally reduce the dimensionality
by ignoring the kernel principal components with the smallest eigenvalues.
.PP
For the case where a linear kernel is used, this reduces to regular PCA.
.PP
For example, the following command will perform KPCA on the dataset
\(cqinput.csv' using the Gaussian kernel, and saving the transformed data to
\(cqtransformed.csv': 
.PP
$ kernel_pca \fB--input_file\fP input.csv \fB--kernel\fP gaussian \fB--output_file\fP
transformed.csv
.PP
The kernels that are supported are listed below:
.RS
.IP \(bu 3
\(cqlinear': the standard linear dot product (same as normal PCA):
\fBK\fP(x, y) = x^T y
.IP \(bu 3
\(cqgaussian': a Gaussian kernel; requires bandwidth:
\fBK\fP(x, y) = \fBexp\fP(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))
.IP \(bu 3
\(cqpolynomial': polynomial kernel; requires offset and degree:
\fBK\fP(x, y) = (x^T y + offset) ^ degree
.IP \(bu 3
\(cqhyptan': hyperbolic tangent kernel; requires scale and offset:
\fBK\fP(x, y) = \fBtanh\fP(scale * (x^T y) + offset)
.IP \(bu 3
\(cqlaplacian': Laplacian kernel; requires bandwidth:
\fBK\fP(x, y) = \fBexp\fP(-(|| x - y ||) / bandwidth)
.IP \(bu 3
\(cqepanechnikov': Epanechnikov kernel; requires bandwidth:
\fBK\fP(x, y) = \fBmax\fP(0, 1 - || x - y ||^2 / bandwidth^2)
.IP \(bu 3
\(cqcosine': cosine distance:
\fBK\fP(x, y) = 1 - (x^T y) / (|| x || * || y ||)
.RE
.PP
The parameters for each of the kernels should be specified with the options
\(cq\fB--bandwidth\fP (\fB-b\fP)', '\fB--kernel_scale\fP (\fB-S\fP)', '\fB--offset\fP (\fB-O\fP)', or '\fB--degree\fP (\fB-D\fP)'
(or a combination of those parameters).
.PP
Optionally, the Nyström method ("Using the Nystroem method to speed up kernel
machines", 2001) can be used to calculate the kernel matrix by specifying the
\(cq\fB--nystroem_method\fP (\fB-n\fP)' parameter. This approach works by using a subset of
the data as basis to reconstruct the kernel matrix; to specify the sampling
scheme, the '\fB--sampling\fP (\fB-s\fP)' parameter is used. The sampling scheme for the
Nyström method can be chosen from the following list: 'kmeans', 'random',
\(cqordered'.
.RE
.PP

.SH REQUIRED INPUT OPTIONS 

.TP
.B
\fB--input_file\fP (\fB-i\fP) [\fIstring\fP]
Input dataset to perform KPCA on. 
.TP
.B
\fB--kernel\fP (\fB-k\fP) [\fIstring\fP]
The kernel to use; see the above documentation for the list of usable kernels.  
.SH OPTIONAL INPUT OPTIONS 

.TP
.B
\fB--bandwidth\fP (\fB-b\fP) [\fIdouble\fP]
Bandwidth, for 'gaussian' and 'laplacian' kernels. Default value 1. 
.TP
.B
\fB--center\fP (\fB-c\fP) [\fIbool\fP]
If set, the transformed data will be centered about the origin. 
.TP
.B
\fB--degree\fP (\fB-D\fP) [\fIdouble\fP]
Degree of polynomial, for 'polynomial' kernel.  Default value 1. 
.TP
.B
\fB--help\fP (\fB-h\fP) [\fIbool\fP]
Default help info. 
.TP
.B
\fB--info\fP [\fIstring\fP]
Get help on a specific module or option.  Default value ''. 
\fB--kernel_scale\fP (\fB-S\fP) [\fIdouble\fP] Scale, for 'hyptan' kernel. Default value 1. 
.TP
.B
\fB--new_dimensionality\fP (\fB-d\fP) [\fIint\fP]
If not 0, reduce the dimensionality of the output dataset by ignoring the dimensions with the smallest eigenvalues. Default value 0. 
.TP
.B
\fB--nystroem_method\fP (\fB-n\fP) [\fIbool\fP]
If set, the nystroem method will be used. 
.TP
.B
\fB--offset\fP (\fB-O\fP) [\fIdouble\fP]
Offset, for 'hyptan' and 'polynomial' kernels.  Default value 0. 
.TP
.B
\fB--sampling\fP (\fB-s\fP) [\fIstring\fP]
Sampling scheme to use for the nystroem method: 'kmeans', 'random', 'ordered' Default value 'kmeans'. 
.TP
.B
\fB--verbose\fP (\fB-v\fP) [\fIbool\fP]
Display informational messages and the full list of parameters and timers at the end of execution. 
.TP
.B
\fB--version\fP (\fB-V\fP) [\fIbool\fP]
Display the version of mlpack.  
.SH OPTIONAL OUTPUT OPTIONS 

.TP
.B
\fB--output_file\fP (\fB-o\fP) [\fIstring\fP]
Matrix to save modified dataset to. Default value ''.
.SH ADDITIONAL INFORMATION

For further information, including relevant papers, citations, and theory,
consult the documentation found at http://www.mlpack.org or included with your
distribution of mlpack.
