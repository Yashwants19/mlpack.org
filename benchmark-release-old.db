-- MySQL dump 10.13  Distrib 5.6.30, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: benchmark_release
-- ------------------------------------------------------
-- Server version	5.6.30-1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `bootstrap`
--

DROP TABLE IF EXISTS `bootstrap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `bootstrap` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `build_id` int(11) NOT NULL,
  `libary_id` int(11) NOT NULL,
  `metric` text NOT NULL,
  `dataset_id` int(11) NOT NULL,
  `method_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `build_id` (`build_id`),
  KEY `libary_id` (`libary_id`),
  KEY `dataset_id` (`dataset_id`),
  KEY `method_id` (`method_id`),
  CONSTRAINT `bootstrap_ibfk_1` FOREIGN KEY (`build_id`) REFERENCES `builds` (`id`) ON DELETE CASCADE,
  CONSTRAINT `bootstrap_ibfk_2` FOREIGN KEY (`libary_id`) REFERENCES `libraries` (`id`) ON DELETE CASCADE,
  CONSTRAINT `bootstrap_ibfk_3` FOREIGN KEY (`dataset_id`) REFERENCES `datasets` (`id`) ON DELETE CASCADE,
  CONSTRAINT `bootstrap_ibfk_4` FOREIGN KEY (`method_id`) REFERENCES `methods` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `bootstrap`
--

LOCK TABLES `bootstrap` WRITE;
/*!40000 ALTER TABLE `bootstrap` DISABLE KEYS */;
/*!40000 ALTER TABLE `bootstrap` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `builds`
--

DROP TABLE IF EXISTS `builds`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `builds` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `build` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `libary_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `libary_id` (`libary_id`),
  CONSTRAINT `builds_ibfk_1` FOREIGN KEY (`libary_id`) REFERENCES `libraries` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `builds`
--

LOCK TABLES `builds` WRITE;
/*!40000 ALTER TABLE `builds` DISABLE KEYS */;
INSERT INTO `builds` VALUES (1,'2016-10-01 22:06:36',1),(2,'2016-10-01 22:08:29',2),(3,'2016-10-01 22:13:35',1),(4,'2016-10-01 22:19:49',3),(5,'2016-10-01 22:31:32',4),(6,'2016-10-01 22:41:35',5),(7,'2016-10-02 09:44:41',1),(8,'2016-10-02 09:46:12',3),(9,'2016-10-02 09:58:52',5),(10,'2016-10-02 10:02:20',4),(11,'2016-10-02 13:34:32',4),(12,'2016-10-02 16:32:17',4),(13,'2016-10-02 19:32:41',4),(14,'2016-10-02 23:15:20',4),(15,'2016-10-04 20:15:54',3),(16,'2016-10-04 20:16:53',1),(17,'2016-10-04 20:29:01',5),(18,'2016-10-04 22:50:38',6),(19,'2016-10-05 17:06:21',2),(20,'2016-10-05 23:49:35',7),(21,'2016-10-06 21:17:07',2),(22,'2016-10-06 22:26:00',2),(23,'2016-10-06 22:40:23',5),(24,'2016-10-06 22:52:15',6),(25,'2016-10-07 11:39:54',2),(26,'2016-10-07 11:54:19',5),(27,'2016-10-07 12:04:27',6),(28,'2016-10-07 19:23:00',2),(29,'2016-10-07 19:40:44',5),(30,'2016-10-07 19:47:27',6),(31,'2016-12-11 20:30:24',8),(32,'2017-02-22 19:05:36',6),(33,'2017-02-22 20:49:25',6),(34,'2017-02-24 18:10:31',1),(35,'2017-02-24 18:45:00',2),(36,'2017-02-27 12:45:33',7);
/*!40000 ALTER TABLE `builds` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `datasets`
--

DROP TABLE IF EXISTS `datasets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `datasets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` text NOT NULL,
  `size` int(11) NOT NULL,
  `attributes` int(11) NOT NULL,
  `instances` int(11) NOT NULL,
  `type` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `datasets`
--

LOCK TABLES `datasets` WRITE;
/*!40000 ALTER TABLE `datasets` DISABLE KEYS */;
INSERT INTO `datasets` VALUES (1,'iris',0,5,150,'real'),(2,'oilspill',0,50,625,'real'),(3,'scene',4,295,1605,'real'),(4,'webpage',13,301,23187,'real'),(5,'isolet',20,618,5198,'real'),(6,'mammography',0,7,7455,'real'),(7,'reuters',170,17388,5116,'real'),(8,'diabetes',0,10,442,'real'),(9,'cosExp',1,800,200,'real'),(10,'arcene',3,10000,100,'real'),(11,'madelon',4,500,2000,'real'),(12,'mnist',122,784,70000,'real'),(13,'wine',0,13,178,'real'),(14,'cloud',0,10,2048,'real'),(15,'corel-histogram',21,32,68040,'real'),(16,'tinyImages100k',323,384,100000,'real'),(17,'covtype',72,55,581012,'real'),(18,'ticdata2000',1,86,5822,'real'),(19,'TomsHardware',8,97,28179,'real'),(20,'1000000-10-randu',76,10,1000000,'real'),(21,'abalone19',0,11,2785,'real'),(22,'sickEuthyroid',0,43,2109,'real'),(23,'abalone7',0,11,2785,'real'),(24,'satellite',0,37,4290,'real'),(25,'ecoli',0,8,224,'real'),(26,'cities',0,9,329,'real'),(27,'artificial',0,1000,10,'real'),(28,'ionosphere',0,35,351,'real'),(29,'bank8FM',1,10,8193,'real'),(30,'faces',1,20,10304,'real'),(31,'shuttle',1,10,43500,'real'),(32,'dexter',2,304,2001,'real'),(33,'Twitter',163,78,583250,'real'),(34,'yearpredictionmsd',469,90,515345,'real'),(35,'circle',0,2,150,'real'),(36,'stock',0,10,950,'real'),(37,'abalone',0,8,4177,'real'),(38,'waveform',1,41,5000,'real'),(39,'pendigits',10,4649,256,'real'),(40,'USCensus1990',1,68,4000,'real'),(41,'piano',1,224,257,'real'),(42,'optdigits',1,65,5620,'real'),(43,'transfusion',0,5,518,'real'),(44,'vehicle',0,19,846,'real');
/*!40000 ALTER TABLE `datasets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `libraries`
--

DROP TABLE IF EXISTS `libraries`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `libraries` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `libraries`
--

LOCK TABLES `libraries` WRITE;
/*!40000 ALTER TABLE `libraries` DISABLE KEYS */;
INSERT INTO `libraries` VALUES (1,'mlpy'),(2,'scikit'),(3,'hlearn'),(4,'flann'),(5,'ann'),(6,'shogun'),(7,'weka'),(8,'mlpack');
/*!40000 ALTER TABLE `libraries` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `memory`
--

DROP TABLE IF EXISTS `memory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `memory` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `build_id` int(11) NOT NULL,
  `libary_id` int(11) NOT NULL,
  `method_id` int(11) NOT NULL,
  `dataset_id` int(11) NOT NULL,
  `memory_info` text NOT NULL,
  PRIMARY KEY (`id`),
  KEY `build_id` (`build_id`),
  KEY `libary_id` (`libary_id`),
  KEY `dataset_id` (`dataset_id`),
  KEY `method_id` (`method_id`),
  CONSTRAINT `memory_ibfk_1` FOREIGN KEY (`build_id`) REFERENCES `builds` (`id`) ON DELETE CASCADE,
  CONSTRAINT `memory_ibfk_2` FOREIGN KEY (`libary_id`) REFERENCES `libraries` (`id`) ON DELETE CASCADE,
  CONSTRAINT `memory_ibfk_3` FOREIGN KEY (`dataset_id`) REFERENCES `datasets` (`id`) ON DELETE CASCADE,
  CONSTRAINT `memory_ibfk_4` FOREIGN KEY (`method_id`) REFERENCES `methods` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `memory`
--

LOCK TABLES `memory` WRITE;
/*!40000 ALTER TABLE `memory` DISABLE KEYS */;
/*!40000 ALTER TABLE `memory` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `method_info`
--

DROP TABLE IF EXISTS `method_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `method_info` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `method_id` int(11) NOT NULL,
  `info` text NOT NULL,
  PRIMARY KEY (`id`),
  KEY `method_id` (`method_id`),
  CONSTRAINT `method_info_ibfk_1` FOREIGN KEY (`method_id`) REFERENCES `methods` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `method_info`
--

LOCK TABLES `method_info` WRITE;
/*!40000 ALTER TABLE `method_info` DISABLE KEYS */;
INSERT INTO `method_info` VALUES (1,91,'Hidden Markov Model (HMM) Sequence Generator\n\n  This utility takes an already-trained HMM (--model_file) and generates a\n  random observation sequence and hidden state sequence based on its parameters,\n  saving them to the specified files (--output_file and --state_file)\n\n'),(2,79,'Principal Components Analysis\n\n  This program performs principal components analysis on the given dataset using\n  the exact, randomized or QUIC SVD method. It will transform the data onto its\n  principal components, optionally performing dimensionality reduction by\n  ignoring the principal components with the smallest eigenvalues.\n\n'),(3,57,'Hidden Markov Model (HMM) Sequence Log-Likelihood\n\n  This utility takes an already-trained HMM (--model_file) and evaluates the\n  log-likelihood of a given sequence of observations (--input_file).  The\n  computed log-likelihood is given directly to stdout.\n\n'),(4,48,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(5,51,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(6,47,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(7,46,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(8,49,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(9,50,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(10,52,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(11,53,'K-Means Clustering\n\n  This program performs K-Means clustering on the given dataset, storing the\n  learned cluster assignments either as a column of labels in the file\n  containing the input dataset or in a separate file.  Empty clusters are not\n  allowed by default; when a cluster becomes empty, the point furthest from the\n  centroid of the cluster with maximum variance is taken to fill that cluster.\n  \n  Optionally, the Bradley and Fayyad approach (\"Refining initial points for\n  k-means clustering\", 1998) can be used to select initial points by specifying\n  the --refined_start (-r) option.  This approach works by taking random samples\n  of the dataset; to specify the number of samples, the --samples parameter is\n  used, and to specify the percentage of the dataset to be used in each sample,\n  the --percentage parameter is used (it should be a value between 0.0 and 1.0).\n  \n  There are several options available for the algorithm used for each Lloyd\n  iteration, specified with the --algorithm (-a) option.  The standard O(kN)\n  approach can be used (\'naive\').  Other options include the Pelleg-Moore\n  tree-based algorithm (\'pelleg-moore\'), Elkan\'s triangle-inequality based\n  algorithm (\'elkan\'), Hamerly\'s modification to Elkan\'s algorithm (\'hamerly\'),\n  the dual-tree k-means algorithm (\'dualtree\'), and the dual-tree k-means\n  algorithm using the cover tree (\'dualtree-covertree\').\n  \n  The behavior for when an empty cluster is encountered can be modified with the\n  --allow_empty_clusters (-e) option.  When this option is specified and there\n  is a cluster owning no points at the end of an iteration, that cluster\'s\n  centroid will simply remain in its position from the previous iteration. If\n  the --kill_empty_clusters (-E) option is specified, then when a cluster owns\n  no points at the end of an iteration, the cluster centroid is simply filled\n  with DBL_MAX, killing it and effectively reducing k for the rest of the\n  computation.  Note that the default option when neither empty cluster option\n  is specified can be time-consuming to calculate; therefore, specifying -e or\n  -E will often accelerate runtime.\n  \n  As of October 2014, the --overclustering option has been removed.  If you want\n  this support back, let us know---file a bug at\n  https://github.com/mlpack/mlpack/ or get in touch through another means.\n\n'),(12,61,'Hidden Markov Model (HMM) Viterbi State Prediction\n\n  This utility takes an already-trained HMM (--model_file) and evaluates the\n  most probably hidden state sequence of a given sequence of observations\n  (--input_file), using the Viterbi algorithm.  The computed state sequence is\n  saved to the specified output file (--output_file).\n\n'),(13,77,'Fast Euclidean Minimum Spanning Tree\n\n  This program can compute the Euclidean minimum spanning tree of a set of input\n  points using the dual-tree Boruvka algorithm.\n  \n  The output is saved in a three-column matrix, where each row indicates an\n  edge.  The first column corresponds to the lesser index of the edge; the\n  second column corresponds to the greater index of the edge; and the third\n  column corresponds to the distance between the two points.\n\n'),(14,78,'Fast Euclidean Minimum Spanning Tree\n\n  This program can compute the Euclidean minimum spanning tree of a set of input\n  points using the dual-tree Boruvka algorithm.\n  \n  The output is saved in a three-column matrix, where each row indicates an\n  edge.  The first column corresponds to the lesser index of the edge; the\n  second column corresponds to the greater index of the edge; and the third\n  column corresponds to the distance between the two points.\n\n'),(15,17,'Non-negative Matrix Factorization\n\n  This program performs non-negative matrix factorization on the given dataset,\n  storing the resulting decomposed matrices in the specified files.  For an\n  input dataset V, NMF decomposes V into two matrices W and H such that \n  \n  V = W * H\n  \n  where all elements in W and H are non-negative.  If V is of size (n x m), then\n  W will be of size (n x r) and H will be of size (r x m), where r is the rank\n  of the factorization (specified by --rank).\n  \n  Optionally, the desired update rules for each NMF iteration can be chosen from\n  the following list:\n  \n   - multdist: multiplicative distance-based update rules (Lee and Seung 1999)\n   - multdiv: multiplicative divergence-based update rules (Lee and Seung 1999)\n   - als: alternating least squares update rules (Paatero and Tapper 1994)\n  \n  The maximum number of iterations is specified with --max_iterations, and the\n  minimum residue required for algorithm termination is specified with\n  --min_residue.\n\n'),(16,18,'Non-negative Matrix Factorization\n\n  This program performs non-negative matrix factorization on the given dataset,\n  storing the resulting decomposed matrices in the specified files.  For an\n  input dataset V, NMF decomposes V into two matrices W and H such that \n  \n  V = W * H\n  \n  where all elements in W and H are non-negative.  If V is of size (n x m), then\n  W will be of size (n x r) and H will be of size (r x m), where r is the rank\n  of the factorization (specified by --rank).\n  \n  Optionally, the desired update rules for each NMF iteration can be chosen from\n  the following list:\n  \n   - multdist: multiplicative distance-based update rules (Lee and Seung 1999)\n   - multdiv: multiplicative divergence-based update rules (Lee and Seung 1999)\n   - als: alternating least squares update rules (Paatero and Tapper 1994)\n  \n  The maximum number of iterations is specified with --max_iterations, and the\n  minimum residue required for algorithm termination is specified with\n  --min_residue.\n\n'),(17,19,'Non-negative Matrix Factorization\n\n  This program performs non-negative matrix factorization on the given dataset,\n  storing the resulting decomposed matrices in the specified files.  For an\n  input dataset V, NMF decomposes V into two matrices W and H such that \n  \n  V = W * H\n  \n  where all elements in W and H are non-negative.  If V is of size (n x m), then\n  W will be of size (n x r) and H will be of size (r x m), where r is the rank\n  of the factorization (specified by --rank).\n  \n  Optionally, the desired update rules for each NMF iteration can be chosen from\n  the following list:\n  \n   - multdist: multiplicative distance-based update rules (Lee and Seung 1999)\n   - multdiv: multiplicative divergence-based update rules (Lee and Seung 1999)\n   - als: alternating least squares update rules (Paatero and Tapper 1994)\n  \n  The maximum number of iterations is specified with --max_iterations, and the\n  minimum residue required for algorithm termination is specified with\n  --min_residue.\n\n'),(18,67,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(19,72,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(20,70,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(21,71,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(22,73,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(23,65,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(24,64,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(25,66,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(26,69,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(27,63,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(28,74,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(29,68,'Kernel Principal Components Analysis\n\n  This program performs Kernel Principal Components Analysis (KPCA) on the\n  specified dataset with the specified kernel.  This will transform the data\n  onto the kernel principal components, and optionally reduce the dimensionality\n  by ignoring the kernel principal components with the smallest eigenvalues.\n  \n  For the case where a linear kernel is used, this reduces to regular PCA.\n  \n  For example, the following will perform KPCA on the \'input.csv\' file using the\n  gaussian kernel and store the transformed date in the \'transformed.csv\' file.\n  \n  $ kernel_pca -i input.csv -k gaussian -o transformed.csv\n  \n  The kernels that are supported are listed below:\n  \n   * \'linear\': the standard linear dot product (same as normal PCA):\n      K(x, y) = x^T y\n  \n   * \'gaussian\': a Gaussian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y || ^ 2) / (2 * (bandwidth ^ 2)))\n  \n   * \'polynomial\': polynomial kernel; requires offset and degree:\n      K(x, y) = (x^T y + offset) ^ degree\n  \n   * \'hyptan\': hyperbolic tangent kernel; requires scale and offset:\n      K(x, y) = tanh(scale * (x^T y) + offset)\n  \n   * \'laplacian\': Laplacian kernel; requires bandwidth:\n      K(x, y) = exp(-(|| x - y ||) / bandwidth)\n  \n   * \'epanechnikov\': Epanechnikov kernel; requires bandwidth:\n      K(x, y) = max(0, 1 - || x - y ||^2 / bandwidth^2)\n  \n   * \'cosine\': cosine distance:\n      K(x, y) = 1 - (x^T y) / (|| x || * || y ||)\n  \n  The parameters for each of the kernels should be specified with the options\n  --bandwidth, --kernel_scale, --offset, or --degree (or a combination of those\n  options).\n  \n  Optionally, the nystrÃ¶m method (\"Using the Nystroem method to speed up kernel\n  machines\", 2001) can be used to calculate the kernel matrix by specifying the\n  --nystroem_method (-n) option. This approach works by using a subset of the\n  data as basis to reconstruct the kernel matrix; to specify the sampling\n  scheme, the --sampling parameter is used, the sampling scheme for the nystrÃ¶m\n  method can be chosen from the following list: kmeans, random, ordered.\n\n'),(30,13,'Neighborhood Components Analysis (NCA)\n\n  This program implements Neighborhood Components Analysis, both a linear\n  dimensionality reduction technique and a distance learning technique.  The\n  method seeks to improve k-nearest-neighbor classification on a dataset by\n  scaling the dimensions.  The method is nonparametric, and does not require a\n  value of k.  It works by using stochastic (\"soft\") neighbor assignments and\n  using optimization techniques over the gradient of the accuracy of the\n  neighbor assignments.\n  \n  To work, this algorithm needs labeled data.  It can be given as the last row\n  of the input dataset (--input_file), or alternatively in a separate file\n  (--labels_file).\n  \n  This implementation of NCA uses stochastic gradient descent, mini-batch\n  stochastic gradient descent, or the L_BFGS optimizer.  These optimizers do not\n  guarantee global convergence for a nonconvex objective function (NCA\'s\n  objective function is nonconvex), so the final results could depend on the\n  random seed or other optimizer parameters.\n  \n  Stochastic gradient descent, specified by --optimizer \"sgd\", depends primarily\n  on two parameters: the step size (--step_size) and the maximum number of\n  iterations (--max_iterations).  In addition, a normalized starting point can\n  be used (--normalize), which is necessary if many warnings of the form\n  \'Denominator of p_i is 0!\' are given.  Tuning the step size can be a tedious\n  affair.  In general, the step size is too large if the objective is not mostly\n  uniformly decreasing, or if zero-valued denominator warnings are being issued.\n   The step size is too small if the objective is changing very slowly.  Setting\n  the termination condition can be done easily once a good step size parameter\n  is found; either increase the maximum iterations to a large number and allow\n  SGD to find a minimum, or set the maximum iterations to 0 (allowing infinite\n  iterations) and set the tolerance (--tolerance) to define the maximum allowed\n  difference between objectives for SGD to terminate.  Be careful---setting the\n  tolerance instead of the maximum iterations can take a very long time and may\n  actually never converge due to the properties of the SGD optimizer. Note that\n  a single iteration of SGD refers to a single point, so to take a single pass\n  over the dataset, set --max_iterations equal to the number of points in the\n  dataset.\n  \n  The mini-batch SGD optimizer, specified by --optimizer \"minibatch-sgd\", has\n  the same parameters as SGD, but the batch size may also be specified with the\n  --batch_size (-b) option.  Each iteration of mini-batch SGD refers to a single\n  mini-batch.\n  \n  The L-BFGS optimizer, specified by --optimizer \"lbfgs\", uses a back-tracking\n  line search algorithm to minimize a function.  The following parameters are\n  used by L-BFGS: --num_basis (specifies the number of memory points used by\n  L-BFGS), --max_iterations, --armijo_constant, --wolfe, --tolerance (the\n  optimization is terminated when the gradient norm is below this value),\n  --max_line_search_trials, --min_step and --max_step (which both refer to the\n  line search routine).  For more details on the L-BFGS optimizer, consult\n  either the mlpack L-BFGS documentation (in lbfgs.hpp) or the vast set of\n  published literature on L-BFGS.\n  \n  By default, the SGD optimizer is used.\n\n'),(31,12,'Neighborhood Components Analysis (NCA)\n\n  This program implements Neighborhood Components Analysis, both a linear\n  dimensionality reduction technique and a distance learning technique.  The\n  method seeks to improve k-nearest-neighbor classification on a dataset by\n  scaling the dimensions.  The method is nonparametric, and does not require a\n  value of k.  It works by using stochastic (\"soft\") neighbor assignments and\n  using optimization techniques over the gradient of the accuracy of the\n  neighbor assignments.\n  \n  To work, this algorithm needs labeled data.  It can be given as the last row\n  of the input dataset (--input_file), or alternatively in a separate file\n  (--labels_file).\n  \n  This implementation of NCA uses stochastic gradient descent, mini-batch\n  stochastic gradient descent, or the L_BFGS optimizer.  These optimizers do not\n  guarantee global convergence for a nonconvex objective function (NCA\'s\n  objective function is nonconvex), so the final results could depend on the\n  random seed or other optimizer parameters.\n  \n  Stochastic gradient descent, specified by --optimizer \"sgd\", depends primarily\n  on two parameters: the step size (--step_size) and the maximum number of\n  iterations (--max_iterations).  In addition, a normalized starting point can\n  be used (--normalize), which is necessary if many warnings of the form\n  \'Denominator of p_i is 0!\' are given.  Tuning the step size can be a tedious\n  affair.  In general, the step size is too large if the objective is not mostly\n  uniformly decreasing, or if zero-valued denominator warnings are being issued.\n   The step size is too small if the objective is changing very slowly.  Setting\n  the termination condition can be done easily once a good step size parameter\n  is found; either increase the maximum iterations to a large number and allow\n  SGD to find a minimum, or set the maximum iterations to 0 (allowing infinite\n  iterations) and set the tolerance (--tolerance) to define the maximum allowed\n  difference between objectives for SGD to terminate.  Be careful---setting the\n  tolerance instead of the maximum iterations can take a very long time and may\n  actually never converge due to the properties of the SGD optimizer. Note that\n  a single iteration of SGD refers to a single point, so to take a single pass\n  over the dataset, set --max_iterations equal to the number of points in the\n  dataset.\n  \n  The mini-batch SGD optimizer, specified by --optimizer \"minibatch-sgd\", has\n  the same parameters as SGD, but the batch size may also be specified with the\n  --batch_size (-b) option.  Each iteration of mini-batch SGD refers to a single\n  mini-batch.\n  \n  The L-BFGS optimizer, specified by --optimizer \"lbfgs\", uses a back-tracking\n  line search algorithm to minimize a function.  The following parameters are\n  used by L-BFGS: --num_basis (specifies the number of memory points used by\n  L-BFGS), --max_iterations, --armijo_constant, --wolfe, --tolerance (the\n  optimization is terminated when the gradient norm is below this value),\n  --max_line_search_trials, --min_step and --max_step (which both refer to the\n  line search routine).  For more details on the L-BFGS optimizer, consult\n  either the mlpack L-BFGS documentation (in lbfgs.hpp) or the vast set of\n  published literature on L-BFGS.\n  \n  By default, the SGD optimizer is used.\n\n'),(32,16,'Neighborhood Components Analysis (NCA)\n\n  This program implements Neighborhood Components Analysis, both a linear\n  dimensionality reduction technique and a distance learning technique.  The\n  method seeks to improve k-nearest-neighbor classification on a dataset by\n  scaling the dimensions.  The method is nonparametric, and does not require a\n  value of k.  It works by using stochastic (\"soft\") neighbor assignments and\n  using optimization techniques over the gradient of the accuracy of the\n  neighbor assignments.\n  \n  To work, this algorithm needs labeled data.  It can be given as the last row\n  of the input dataset (--input_file), or alternatively in a separate file\n  (--labels_file).\n  \n  This implementation of NCA uses stochastic gradient descent, mini-batch\n  stochastic gradient descent, or the L_BFGS optimizer.  These optimizers do not\n  guarantee global convergence for a nonconvex objective function (NCA\'s\n  objective function is nonconvex), so the final results could depend on the\n  random seed or other optimizer parameters.\n  \n  Stochastic gradient descent, specified by --optimizer \"sgd\", depends primarily\n  on two parameters: the step size (--step_size) and the maximum number of\n  iterations (--max_iterations).  In addition, a normalized starting point can\n  be used (--normalize), which is necessary if many warnings of the form\n  \'Denominator of p_i is 0!\' are given.  Tuning the step size can be a tedious\n  affair.  In general, the step size is too large if the objective is not mostly\n  uniformly decreasing, or if zero-valued denominator warnings are being issued.\n   The step size is too small if the objective is changing very slowly.  Setting\n  the termination condition can be done easily once a good step size parameter\n  is found; either increase the maximum iterations to a large number and allow\n  SGD to find a minimum, or set the maximum iterations to 0 (allowing infinite\n  iterations) and set the tolerance (--tolerance) to define the maximum allowed\n  difference between objectives for SGD to terminate.  Be careful---setting the\n  tolerance instead of the maximum iterations can take a very long time and may\n  actually never converge due to the properties of the SGD optimizer. Note that\n  a single iteration of SGD refers to a single point, so to take a single pass\n  over the dataset, set --max_iterations equal to the number of points in the\n  dataset.\n  \n  The mini-batch SGD optimizer, specified by --optimizer \"minibatch-sgd\", has\n  the same parameters as SGD, but the batch size may also be specified with the\n  --batch_size (-b) option.  Each iteration of mini-batch SGD refers to a single\n  mini-batch.\n  \n  The L-BFGS optimizer, specified by --optimizer \"lbfgs\", uses a back-tracking\n  line search algorithm to minimize a function.  The following parameters are\n  used by L-BFGS: --num_basis (specifies the number of memory points used by\n  L-BFGS), --max_iterations, --armijo_constant, --wolfe, --tolerance (the\n  optimization is terminated when the gradient norm is below this value),\n  --max_line_search_trials, --min_step and --max_step (which both refer to the\n  line search routine).  For more details on the L-BFGS optimizer, consult\n  either the mlpack L-BFGS documentation (in lbfgs.hpp) or the vast set of\n  published literature on L-BFGS.\n  \n  By default, the SGD optimizer is used.\n\n'),(33,11,'Neighborhood Components Analysis (NCA)\n\n  This program implements Neighborhood Components Analysis, both a linear\n  dimensionality reduction technique and a distance learning technique.  The\n  method seeks to improve k-nearest-neighbor classification on a dataset by\n  scaling the dimensions.  The method is nonparametric, and does not require a\n  value of k.  It works by using stochastic (\"soft\") neighbor assignments and\n  using optimization techniques over the gradient of the accuracy of the\n  neighbor assignments.\n  \n  To work, this algorithm needs labeled data.  It can be given as the last row\n  of the input dataset (--input_file), or alternatively in a separate file\n  (--labels_file).\n  \n  This implementation of NCA uses stochastic gradient descent, mini-batch\n  stochastic gradient descent, or the L_BFGS optimizer.  These optimizers do not\n  guarantee global convergence for a nonconvex objective function (NCA\'s\n  objective function is nonconvex), so the final results could depend on the\n  random seed or other optimizer parameters.\n  \n  Stochastic gradient descent, specified by --optimizer \"sgd\", depends primarily\n  on two parameters: the step size (--step_size) and the maximum number of\n  iterations (--max_iterations).  In addition, a normalized starting point can\n  be used (--normalize), which is necessary if many warnings of the form\n  \'Denominator of p_i is 0!\' are given.  Tuning the step size can be a tedious\n  affair.  In general, the step size is too large if the objective is not mostly\n  uniformly decreasing, or if zero-valued denominator warnings are being issued.\n   The step size is too small if the objective is changing very slowly.  Setting\n  the termination condition can be done easily once a good step size parameter\n  is found; either increase the maximum iterations to a large number and allow\n  SGD to find a minimum, or set the maximum iterations to 0 (allowing infinite\n  iterations) and set the tolerance (--tolerance) to define the maximum allowed\n  difference between objectives for SGD to terminate.  Be careful---setting the\n  tolerance instead of the maximum iterations can take a very long time and may\n  actually never converge due to the properties of the SGD optimizer. Note that\n  a single iteration of SGD refers to a single point, so to take a single pass\n  over the dataset, set --max_iterations equal to the number of points in the\n  dataset.\n  \n  The mini-batch SGD optimizer, specified by --optimizer \"minibatch-sgd\", has\n  the same parameters as SGD, but the batch size may also be specified with the\n  --batch_size (-b) option.  Each iteration of mini-batch SGD refers to a single\n  mini-batch.\n  \n  The L-BFGS optimizer, specified by --optimizer \"lbfgs\", uses a back-tracking\n  line search algorithm to minimize a function.  The following parameters are\n  used by L-BFGS: --num_basis (specifies the number of memory points used by\n  L-BFGS), --max_iterations, --armijo_constant, --wolfe, --tolerance (the\n  optimization is terminated when the gradient norm is below this value),\n  --max_line_search_trials, --min_step and --max_step (which both refer to the\n  line search routine).  For more details on the L-BFGS optimizer, consult\n  either the mlpack L-BFGS documentation (in lbfgs.hpp) or the vast set of\n  published literature on L-BFGS.\n  \n  By default, the SGD optimizer is used.\n\n'),(34,15,'Neighborhood Components Analysis (NCA)\n\n  This program implements Neighborhood Components Analysis, both a linear\n  dimensionality reduction technique and a distance learning technique.  The\n  method seeks to improve k-nearest-neighbor classification on a dataset by\n  scaling the dimensions.  The method is nonparametric, and does not require a\n  value of k.  It works by using stochastic (\"soft\") neighbor assignments and\n  using optimization techniques over the gradient of the accuracy of the\n  neighbor assignments.\n  \n  To work, this algorithm needs labeled data.  It can be given as the last row\n  of the input dataset (--input_file), or alternatively in a separate file\n  (--labels_file).\n  \n  This implementation of NCA uses stochastic gradient descent, mini-batch\n  stochastic gradient descent, or the L_BFGS optimizer.  These optimizers do not\n  guarantee global convergence for a nonconvex objective function (NCA\'s\n  objective function is nonconvex), so the final results could depend on the\n  random seed or other optimizer parameters.\n  \n  Stochastic gradient descent, specified by --optimizer \"sgd\", depends primarily\n  on two parameters: the step size (--step_size) and the maximum number of\n  iterations (--max_iterations).  In addition, a normalized starting point can\n  be used (--normalize), which is necessary if many warnings of the form\n  \'Denominator of p_i is 0!\' are given.  Tuning the step size can be a tedious\n  affair.  In general, the step size is too large if the objective is not mostly\n  uniformly decreasing, or if zero-valued denominator warnings are being issued.\n   The step size is too small if the objective is changing very slowly.  Setting\n  the termination condition can be done easily once a good step size parameter\n  is found; either increase the maximum iterations to a large number and allow\n  SGD to find a minimum, or set the maximum iterations to 0 (allowing infinite\n  iterations) and set the tolerance (--tolerance) to define the maximum allowed\n  difference between objectives for SGD to terminate.  Be careful---setting the\n  tolerance instead of the maximum iterations can take a very long time and may\n  actually never converge due to the properties of the SGD optimizer. Note that\n  a single iteration of SGD refers to a single point, so to take a single pass\n  over the dataset, set --max_iterations equal to the number of points in the\n  dataset.\n  \n  The mini-batch SGD optimizer, specified by --optimizer \"minibatch-sgd\", has\n  the same parameters as SGD, but the batch size may also be specified with the\n  --batch_size (-b) option.  Each iteration of mini-batch SGD refers to a single\n  mini-batch.\n  \n  The L-BFGS optimizer, specified by --optimizer \"lbfgs\", uses a back-tracking\n  line search algorithm to minimize a function.  The following parameters are\n  used by L-BFGS: --num_basis (specifies the number of memory points used by\n  L-BFGS), --max_iterations, --armijo_constant, --wolfe, --tolerance (the\n  optimization is terminated when the gradient norm is below this value),\n  --max_line_search_trials, --min_step and --max_step (which both refer to the\n  line search routine).  For more details on the L-BFGS optimizer, consult\n  either the mlpack L-BFGS documentation (in lbfgs.hpp) or the vast set of\n  published literature on L-BFGS.\n  \n  By default, the SGD optimizer is used.\n\n'),(35,14,'Neighborhood Components Analysis (NCA)\n\n  This program implements Neighborhood Components Analysis, both a linear\n  dimensionality reduction technique and a distance learning technique.  The\n  method seeks to improve k-nearest-neighbor classification on a dataset by\n  scaling the dimensions.  The method is nonparametric, and does not require a\n  value of k.  It works by using stochastic (\"soft\") neighbor assignments and\n  using optimization techniques over the gradient of the accuracy of the\n  neighbor assignments.\n  \n  To work, this algorithm needs labeled data.  It can be given as the last row\n  of the input dataset (--input_file), or alternatively in a separate file\n  (--labels_file).\n  \n  This implementation of NCA uses stochastic gradient descent, mini-batch\n  stochastic gradient descent, or the L_BFGS optimizer.  These optimizers do not\n  guarantee global convergence for a nonconvex objective function (NCA\'s\n  objective function is nonconvex), so the final results could depend on the\n  random seed or other optimizer parameters.\n  \n  Stochastic gradient descent, specified by --optimizer \"sgd\", depends primarily\n  on two parameters: the step size (--step_size) and the maximum number of\n  iterations (--max_iterations).  In addition, a normalized starting point can\n  be used (--normalize), which is necessary if many warnings of the form\n  \'Denominator of p_i is 0!\' are given.  Tuning the step size can be a tedious\n  affair.  In general, the step size is too large if the objective is not mostly\n  uniformly decreasing, or if zero-valued denominator warnings are being issued.\n   The step size is too small if the objective is changing very slowly.  Setting\n  the termination condition can be done easily once a good step size parameter\n  is found; either increase the maximum iterations to a large number and allow\n  SGD to find a minimum, or set the maximum iterations to 0 (allowing infinite\n  iterations) and set the tolerance (--tolerance) to define the maximum allowed\n  difference between objectives for SGD to terminate.  Be careful---setting the\n  tolerance instead of the maximum iterations can take a very long time and may\n  actually never converge due to the properties of the SGD optimizer. Note that\n  a single iteration of SGD refers to a single point, so to take a single pass\n  over the dataset, set --max_iterations equal to the number of points in the\n  dataset.\n  \n  The mini-batch SGD optimizer, specified by --optimizer \"minibatch-sgd\", has\n  the same parameters as SGD, but the batch size may also be specified with the\n  --batch_size (-b) option.  Each iteration of mini-batch SGD refers to a single\n  mini-batch.\n  \n  The L-BFGS optimizer, specified by --optimizer \"lbfgs\", uses a back-tracking\n  line search algorithm to minimize a function.  The following parameters are\n  used by L-BFGS: --num_basis (specifies the number of memory points used by\n  L-BFGS), --max_iterations, --armijo_constant, --wolfe, --tolerance (the\n  optimization is terminated when the gradient norm is below this value),\n  --max_line_search_trials, --min_step and --max_step (which both refer to the\n  line search routine).  For more details on the L-BFGS optimizer, consult\n  either the mlpack L-BFGS documentation (in lbfgs.hpp) or the vast set of\n  published literature on L-BFGS.\n  \n  By default, the SGD optimizer is used.\n\n'),(36,76,'Hidden Markov Model (HMM) Training\n\n  This program allows a Hidden Markov Model to be trained on labeled or\n  unlabeled data.  It support three types of HMMs: discrete HMMs, Gaussian HMMs,\n  or GMM HMMs.\n  \n  Either one input sequence can be specified (with --input_file), or, a file\n  containing files in which input sequences can be found (when --input_file and\n  --batch are used together).  In addition, labels can be provided in the file\n  specified by --labels_file, and if --batch is used, the file given to\n  --labels_file should contain a list of files of labels corresponding to the\n  sequences in the file given to --input_file.\n  \n  The HMM is trained with the Baum-Welch algorithm if no labels are provided. \n  The tolerance of the Baum-Welch algorithm can be set with the --tolerance\n  option.  In general it is a good idea to use random initialization in this\n  case, which can be specified with the --random_initialization (-r) option.\n  \n  Optionally, a pre-created HMM model can be used as a guess for the transition\n  matrix and emission probabilities; this is specifiable with --model_file.\n\n'),(37,75,'Hidden Markov Model (HMM) Training\n\n  This program allows a Hidden Markov Model to be trained on labeled or\n  unlabeled data.  It support three types of HMMs: discrete HMMs, Gaussian HMMs,\n  or GMM HMMs.\n  \n  Either one input sequence can be specified (with --input_file), or, a file\n  containing files in which input sequences can be found (when --input_file and\n  --batch are used together).  In addition, labels can be provided in the file\n  specified by --labels_file, and if --batch is used, the file given to\n  --labels_file should contain a list of files of labels corresponding to the\n  sequences in the file given to --input_file.\n  \n  The HMM is trained with the Baum-Welch algorithm if no labels are provided. \n  The tolerance of the Baum-Welch algorithm can be set with the --tolerance\n  option.  In general it is a good idea to use random initialization in this\n  case, which can be specified with the --random_initialization (-r) option.\n  \n  Optionally, a pre-created HMM model can be used as a guess for the transition\n  matrix and emission probabilities; this is specifiable with --model_file.\n\n');
/*!40000 ALTER TABLE `method_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `methods`
--

DROP TABLE IF EXISTS `methods`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `methods` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` text NOT NULL,
  `parameters` text NOT NULL,
  `alias` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=105 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `methods`
--

LOCK TABLES `methods` WRITE;
/*!40000 ALTER TABLE `methods` DISABLE KEYS */;
INSERT INTO `methods` VALUES (1,'ADABOOST','','None'),(2,'FastMKS','-k 10 -K polynomial -d 10','None'),(3,'FastMKS','-k 10 -S -K linear','None'),(4,'FastMKS','-k 1 -K linear','None'),(5,'FastMKS','-k 10 -K gaussian','None'),(6,'FastMKS','-k 10 -K linear','None'),(7,'FastMKS','-k 10 -K cosine','None'),(8,'FastMKS','-k 10 -K triangular','None'),(9,'FastMKS','-k 10 -K hyptan','None'),(10,'FastMKS','-k 10 -K epanechnikov','None'),(11,'NCA','-n 2000 -O lbfgs -s 42 -B 5','None'),(12,'NCA','-n 2000 -O lbfgs -s 42 -w 0.5','None'),(13,'NCA','-n 2000 -O sgd -s 42','None'),(14,'NCA','-n 2000 -O lbfgs -s 42 -w 0.5 -B 5','None'),(15,'NCA','-n 2000 -N -s 42','None'),(16,'NCA','-n 2000 -O lbfgs -s 42','None'),(17,'NMF','-r 6 -s 42 -u multdist','None'),(18,'NMF','-r 6 -s 42 -u multdiv','None'),(19,'NMF','-r 6 -s 42 -u als','None'),(20,'NMF','-r 6 -u alspgrad','None'),(21,'LocalCoordinateCoding','-k 12 -s 42 -N','None'),(22,'LocalCoordinateCoding','-k 12 -s 42','None'),(23,'LDA','','None'),(24,'PERCEPTRON','-n 10000','None'),(25,'LSH','-k 3 -s 42','None'),(26,'SVR','-c 1.0 -e 1.0 -g 0.1','None'),(27,'LARS','-l 0.01','None'),(28,'LARS','--lambda1 0.01 --lambda2 0.005 --use_cholesky','None'),(29,'LinearRegression','','None'),(30,'Golub','','None'),(31,'RANDOMFOREST','','None'),(32,'ALLKNN','-k 3 -s 42 --tree_type=cover -S','None'),(33,'ALLKNN','-k 3 -s 42 --tree_type=cover','None'),(34,'ALLKNN','-k 3 -s 42 -e 0.05','None'),(35,'ALLKNN','-k 4','None'),(36,'ALLKRANN','-k 3 -T 10 -X','None'),(37,'ALLKRANN','-k 3 -T 10','None'),(38,'ALLKRANN','-k 3 -T 10 -N','None'),(39,'ALLKRANN','-k 3 -T 10 -s','None'),(40,'ALLKRANN','-k 3 -T 10 -L','None'),(41,'DecisionStump','','None'),(42,'SparseCoding','-k 12 -s 42 -n 100','None'),(43,'SparseCoding','-k 12 -s 42 -N','None'),(44,'SparseCoding','-k 12 -s 42','None'),(45,'DTC','','None'),(46,'KMEANS','-c 7','None'),(47,'KMEANS','-c 75','None'),(48,'KMEANS','-c 26','None'),(49,'KMEANS','-c 2','None'),(50,'KMEANS','-c 6','None'),(51,'KMEANS','-c 10','None'),(52,'KMEANS','-c 5','None'),(53,'KMEANS','-c 3','None'),(54,'RANGESEARCH','-M 0.02 -s','None'),(55,'RANGESEARCH','-M 0.02','None'),(56,'RANGESEARCH','-M 0.02 -N','None'),(57,'HMMLOGLIK','','None'),(58,'LinearRidgeRegression','-t 1.0','None'),(59,'LinearRidgeRegression','-t 5.0','None'),(60,'LinearRidgeRegression','-t 50.0','None'),(61,'HMMVITERBI','','None'),(62,'QDA','','None'),(63,'KPCA','-k hyptan','None'),(64,'KPCA','-k cosine --nystroem_method -s random','None'),(65,'KPCA','-k polynomial --nystroem_method -s random','None'),(66,'KPCA','-k gaussian --nystroem_method -s random','None'),(67,'KPCA','-k cosine --nystroem_method -s kmeans','None'),(68,'KPCA','-k gaussian','None'),(69,'KPCA','-k polynomial --nystroem_method -s kmeans','None'),(70,'KPCA','-k polynomial','None'),(71,'KPCA','-k cosine','None'),(72,'KPCA','-k gaussian --nystroem_method -s kmeans','None'),(73,'KPCA','-k laplacian','None'),(74,'KPCA','-k linear','None'),(75,'HMMTRAIN','-t gaussian -n 20 -s 42','None'),(76,'HMMTRAIN','-t discrete -n 20 -s 42','None'),(77,'EMST','','None'),(78,'EMST','-n','None'),(79,'PCA','','None'),(80,'PCA','-d 2 -s','None'),(81,'PCA','-d 2','None'),(82,'SVM','','None'),(83,'DET','','None'),(84,'DET','-f 20','None'),(85,'ALLKNN','-k 3 -s 42 -e 0.0','None'),(86,'ALLKFN','-k 3 -N','None'),(87,'ALLKFN','-k 3 -s','None'),(88,'ALLKFN','-k 3','None'),(89,'ALLKNN','-k 3 -s 42','None'),(90,'ALLKNN','-k 3 -s 42 -e 0.15','None'),(91,'HMMGENERATE','-l 10000','None'),(92,'GMM','-s 42','None'),(93,'GMM','-P -s 42','None'),(94,'LASSO','-l 0.01','None'),(95,'NBC','','None'),(96,'NBC','-I','None'),(97,'ElasticNet','','None'),(98,'KNC','','None'),(99,'ALLKNN','-k 3 -s 42 -N','None'),(100,'ALLKNN','-k 3 -s 42 -e 0.25','None'),(101,'ALLKNN','-k 3 -s 42 -e 0.10','None'),(102,'ALLKNN','-k 3','None'),(103,'ALLKNN','-k 3 -s 42 -S','None'),(104,'ALLKNN','-k 3 -s 42 -e 0.20','None');
/*!40000 ALTER TABLE `methods` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `metrics`
--

DROP TABLE IF EXISTS `metrics`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `metrics` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `build_id` int(11) NOT NULL,
  `libary_id` int(11) NOT NULL,
  `metric` text NOT NULL,
  `dataset_id` int(11) NOT NULL,
  `method_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `build_id` (`build_id`),
  KEY `libary_id` (`libary_id`),
  KEY `dataset_id` (`dataset_id`),
  KEY `method_id` (`method_id`),
  CONSTRAINT `metrics_ibfk_1` FOREIGN KEY (`build_id`) REFERENCES `builds` (`id`) ON DELETE CASCADE,
  CONSTRAINT `metrics_ibfk_2` FOREIGN KEY (`libary_id`) REFERENCES `libraries` (`id`) ON DELETE CASCADE,
  CONSTRAINT `metrics_ibfk_3` FOREIGN KEY (`dataset_id`) REFERENCES `datasets` (`id`) ON DELETE CASCADE,
  CONSTRAINT `metrics_ibfk_4` FOREIGN KEY (`method_id`) REFERENCES `methods` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=4200 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `metrics`
--

LOCK TABLES `metrics` WRITE;
/*!40000 ALTER TABLE `metrics` DISABLE KEYS */;
INSERT INTO `metrics` VALUES (1,1,1,'{}',1,23),(2,1,1,'{\"Runtime\": \"failure\"}',2,23),(3,1,1,'{}',3,23),(4,1,1,'{\"Runtime\": \"failure\"}',4,23),(5,1,1,'{}',5,23),(6,1,1,'{}',6,23),(7,2,2,'{\"ACC\": 0.88, \"LFT\": 2.1999999999999997, \"Precision\": 0.8933706816059757, \"MSE\": 0.12, \"Recall\": 0.88, \"MCC\": 0.82838215464777, \"Runtime\": 0.23272975285847983}',1,24),(8,2,2,'{\"ACC\": 0.6946541830262761, \"LFT\": 0.8368034946108033, \"Precision\": 0.546951263932396, \"MSE\": 0.16666666666666666, \"Recall\": 0.6946541830262761, \"MCC\": 0.19119895316461966, \"Runtime\": 0.7990622520446777}',2,24),(9,3,1,'{\"Runtime\": 0.003451267878214518}',8,27),(10,3,1,'{\"Runtime\": 1.3438721497853596}',9,27),(11,3,1,'{\"Runtime\": 0.8245947360992432}',10,27),(12,3,1,'{\"Runtime\": 88.31008315086365}',11,27),(13,3,1,'{\"Runtime\": 0.0007129510243733724}',8,29),(14,3,1,'{\"Runtime\": 0.13404432932535806}',9,29),(15,4,3,'{\"Runtime\": 0.008376333333333333, \"ComputingNeighbors\": 0.001325, \"TreeBuilding\": 0.006528}',13,35),(16,4,3,'{\"Runtime\": 0.16368066666666667, \"ComputingNeighbors\": 0.03459266666666667, \"TreeBuilding\": 0.125788}',14,35),(17,4,3,'{\"Runtime\": 0.6643723333333333, \"ComputingNeighbors\": 0.19184566666666666, \"TreeBuilding\": 0.4660006666666667}',13,35),(18,4,3,'{\"Runtime\": 13.270063, \"ComputingNeighbors\": 12.132474333333334, \"TreeBuilding\": 0.7669103333333332}',5,35),(19,3,1,'{\"Runtime\": 69.4700075785319}',12,29),(20,4,3,'{\"Runtime\": 91.40588833333334, \"ComputingNeighbors\": 85.505522, \"TreeBuilding\": 5.7902103333333335}',15,35),(21,3,1,'{\"Runtime\": 25.44202176729838}',16,29),(22,3,1,'{\"Runtime\": 0.08350014686584473}',18,29),(23,3,1,'{\"Runtime\": 0.5460958480834961}',19,29),(24,3,1,'{\"Runtime\": \"failure\"}',11,29),(25,3,1,'{\"Runtime\": \"failure\"}',10,29),(26,3,1,'{\"Runtime\": \"failure\"}',1,30),(27,3,1,'{\"ACC\": 0.5, \"Precision\": 0.982371794871795, \"Recall\": 0.5, \"MSE\": 0.035256410256410256, \"MCC\": 0}',2,30),(28,3,1,'{\"ACC\": 0.6985281996938656, \"Precision\": 0.5590185165739088, \"Recall\": 0.6985281996938655, \"MSE\": 0.30423940149625933, \"MCC\": 0.21648870496190487}',3,30),(29,3,1,'{\"ACC\": 0.8593749260683614, \"Precision\": 0.5577487642226022, \"Recall\": 0.8593749260683614, \"MSE\": 0.20339860260502027, \"MCC\": 0.2881212097228311}',4,30),(30,3,1,'{\"ACC\": 0.7957179119302507, \"Precision\": 0.6059821820691386, \"Recall\": 0.7957179119302505, \"MSE\": 0.25740669488264717, \"MCC\": 0.3540668274961511}',5,30),(31,3,1,'{\"ACC\": 0.8644921552436001, \"Precision\": 0.6109733979301267, \"Recall\": 0.8644921552436003, \"MSE\": 0.07430257510729614, \"MCC\": 0.4022384018775811}',6,30),(32,5,4,'{\"ComputingNeighbors\": 0.000177, \"TreeBuilding\": 6.7e-05, \"Runtime\": 0.000244}',13,85),(33,5,4,'{\"ComputingNeighbors\": 0.004560333333333334, \"TreeBuilding\": 0.0006786666666666667, \"Runtime\": 0.005239000000000001}',14,85),(34,5,4,'{\"ComputingNeighbors\": 0.015688666666666667, \"TreeBuilding\": 0.0023876666666666664, \"Runtime\": 0.018076333333333333}',13,85),(35,5,4,'{\"ComputingNeighbors\": 11.913283999999999, \"TreeBuilding\": 0.12651166666666666, \"Runtime\": 12.039795666666668}',5,85),(36,5,4,'{\"ComputingNeighbors\": 3.792965, \"TreeBuilding\": 0.22908900000000001, \"Runtime\": 4.022054}',15,85),(37,5,4,'{\"ComputingNeighbors\": 2.7652563333333333, \"TreeBuilding\": 0.6786113333333335, \"Runtime\": 3.4438676666666663}',17,85),(38,4,3,'{\"Runtime\": 150.98219833333334, \"ComputingNeighbors\": 106.186217, \"TreeBuilding\": 43.238346}',17,35),(39,6,5,'{\"TreeBuilding\": 2.4333333333333333e-05, \"Runtime\": 0.00021866666666666668, \"ComputingNeighbors\": 0.00019433333333333333}',13,90),(40,6,5,'{\"TreeBuilding\": 0.0005513333333333334, \"Runtime\": 0.005938666666666668, \"ComputingNeighbors\": 0.005387333333333333}',14,90),(41,6,5,'{\"TreeBuilding\": 0.0019213333333333333, \"Runtime\": 0.022813333333333335, \"ComputingNeighbors\": 0.020891999999999997}',13,90),(42,3,1,'{\"ACC\": 0.5, \"Precision\": 0.9892494136043783, \"Recall\": 0.5, \"MSE\": 0.021501172791243157, \"MCC\": 0}',7,30),(43,3,1,'{\"ACC\": 0.6828034682080926, \"Precision\": 0.504405247991085, \"Recall\": 0.6828034682080926, \"MSE\": 0.38362068965517243, \"MCC\": 0.05675542656300192}',21,30),(44,3,1,'{\"ACC\": 0.5, \"Precision\": 0.9525616698292221, \"Recall\": 0.5, \"MSE\": 0.094876660341556, \"MCC\": 0}',22,30),(45,3,1,'{\"ACC\": 0.7384607876348562, \"Precision\": 0.5927981552981553, \"Recall\": 0.7384607876348562, \"MSE\": 0.30387931034482757, \"MCC\": 0.29751451193822337}',23,30),(46,3,1,'{\"ACC\": 0.7229729729729729, \"Precision\": 0.5826001955034213, \"Recall\": 0.7229729729729731, \"MSE\": 0.4358974358974359, \"MCC\": 0.27142299946428006}',24,30),(47,3,1,'{\"ACC\": 0.8429553264604812, \"Precision\": 0.6774537695590327, \"Recall\": 0.8429553264604811, \"MSE\": 0.22321428571428573, \"MCC\": 0.49339118545333194}',25,30),(48,6,5,'{\"TreeBuilding\": 0.13480633333333333, \"Runtime\": 16.86759933333333, \"ComputingNeighbors\": 16.732793}',5,90),(49,3,1,'{\"ACC\": 0.98, \"Precision\": 0.980125383486728, \"Recall\": 0.98, \"MCC\": 0.9700708921921396, \"Runtime\": 0.0008245309193929037, \"MSE\": 0.02}',1,23),(50,3,1,'{\"Runtime\": \"failure\"}',2,23),(51,3,1,'{\"ACC\": 0.5952431414105734, \"Precision\": 0.6296272555366815, \"Recall\": 0.5952431414105734, \"MCC\": 0.22222607434542593, \"Runtime\": 0.14793658256530762, \"MSE\": 0.08977556109725686}',3,23),(52,3,1,'{\"Runtime\": \"failure\"}',4,23),(53,6,5,'{\"TreeBuilding\": 0.172925, \"Runtime\": 5.610196333333334, \"ComputingNeighbors\": 5.4372713333333325}',15,90),(54,5,4,'{\"ComputingNeighbors\": 186.23056699999998, \"TreeBuilding\": 1.8429863333333334, \"Runtime\": 188.07355333333336}',20,85),(55,3,1,'{\"ACC\": 0.9085099459981961, \"Precision\": 0.9085099459981962, \"Recall\": 0.9085099459981962, \"MCC\": 0.8170198919963921, \"Runtime\": 2.0589985847473145, \"MSE\": 0.028472489419007308}',5,23),(56,3,1,'{\"ACC\": 0.735774407116056, \"Precision\": 0.7432618261826183, \"Recall\": 0.735774407116056, \"MCC\": 0.47897771489778473, \"Runtime\": 0.0025512377421061196, \"MSE\": 0.025482832618025753}',6,23),(57,6,5,'{\"TreeBuilding\": 0.6540376666666666, \"Runtime\": 4.399532333333333, \"ComputingNeighbors\": 3.745494666666666}',17,90),(58,6,5,'{\"TreeBuilding\": 2.1131766666666665, \"Runtime\": 400.8856773333334, \"ComputingNeighbors\": 398.7725006666667}',20,90),(59,7,1,'{\"Runtime\": 0.012428840001424154}',1,79),(60,7,1,'{\"Runtime\": 0.0009919007619222004}',13,79),(61,7,1,'{\"Runtime\": 0.0009552637736002604}',26,79),(62,7,1,'{\"Runtime\": 0.0011400381724039714}',8,79),(63,7,1,'{\"Runtime\": \"failure\"}',27,79),(64,7,1,'{\"Runtime\": 0.004161675771077474}',28,79),(65,7,1,'{\"Runtime\": \"failure\"}',29,79),(66,7,1,'{\"Runtime\": 0.03522777557373047}',30,79),(67,7,1,'{\"Runtime\": 0.0527955691019694}',31,79),(68,7,1,'{\"Runtime\": 1.2284537156422932}',32,79),(69,7,1,'{\"Runtime\": \"failure\"}',10,79),(70,7,1,'{\"Runtime\": 3.553410371144613}',11,79),(71,7,1,'{\"Runtime\": 0.6644006570180258}',15,79),(72,8,3,'{\"TreeBuilding\": 0.006516333333333333, \"ComputingNeighbors\": 0.0012416666666666667, \"Runtime\": 0.008282}',13,102),(73,8,3,'{\"TreeBuilding\": 0.124218, \"ComputingNeighbors\": 0.03463033333333334, \"Runtime\": 0.162153}',14,102),(74,8,3,'{\"TreeBuilding\": 0.47321133333333326, \"ComputingNeighbors\": 0.19203266666666666, \"Runtime\": 0.6717353333333334}',13,102),(75,7,1,'{\"Runtime\": 18.785205523173016}',5,79),(76,8,3,'{\"TreeBuilding\": 0.7757299999999999, \"ComputingNeighbors\": 12.135702333333334, \"Runtime\": 13.282095666666665}',5,102),(77,7,1,'{\"Runtime\": 14.205125649770102}',17,79),(78,7,1,'{\"Runtime\": 1.4794036547342937}',20,79),(79,8,3,'{\"TreeBuilding\": 5.783255999999999, \"ComputingNeighbors\": 85.36178500000001, \"Runtime\": 91.25516433333335}',15,102),(80,9,5,'{\"TreeBuilding\": 2.466666666666667e-05, \"Runtime\": 0.00022066666666666667, \"ComputingNeighbors\": 0.000196}',13,34),(81,9,5,'{\"TreeBuilding\": 0.000554, \"Runtime\": 0.006292, \"ComputingNeighbors\": 0.005738}',14,34),(82,9,5,'{\"TreeBuilding\": 0.0019136666666666668, \"Runtime\": 0.024336, \"ComputingNeighbors\": 0.022422333333333336}',13,34),(83,9,5,'{\"TreeBuilding\": 0.134972, \"Runtime\": 18.412948333333336, \"ComputingNeighbors\": 18.27797633333333}',5,34),(84,9,5,'{\"TreeBuilding\": 0.172065, \"Runtime\": 7.001241333333333, \"ComputingNeighbors\": 6.829176333333334}',15,34),(85,9,5,'{\"TreeBuilding\": 0.6542933333333334, \"Runtime\": 4.684210333333334, \"ComputingNeighbors\": 4.029917}',17,34),(86,8,3,'{\"TreeBuilding\": 43.513813333333324, \"ComputingNeighbors\": 106.14694100000001, \"Runtime\": 151.21762866666666}',17,102),(87,10,4,'{\"ComputingNeighbors\": 0.00017566666666666664, \"TreeBuilding\": 6.533333333333333e-05, \"Runtime\": 0.000241}',13,100),(88,10,4,'{\"ComputingNeighbors\": 0.004286, \"TreeBuilding\": 0.000708, \"Runtime\": 0.004993999999999999}',14,100),(89,10,4,'{\"ComputingNeighbors\": 0.014341, \"TreeBuilding\": 0.0023813333333333334, \"Runtime\": 0.016722333333333336}',13,100),(90,10,4,'{\"ComputingNeighbors\": 10.723711, \"TreeBuilding\": 0.12623733333333334, \"Runtime\": 10.849948333333336}',5,100),(91,10,4,'{\"ComputingNeighbors\": 2.8275396666666666, \"TreeBuilding\": 0.228617, \"Runtime\": 3.056156666666667}',15,100),(92,10,4,'{\"ComputingNeighbors\": 2.5567596666666663, \"TreeBuilding\": 0.6785126666666667, \"Runtime\": 3.235272333333333}',17,100),(93,7,1,'{\"Runtime\": 270.5805072784424}',12,79),(94,7,1,'{\"Runtime\": 27.776927550633747}',33,79),(95,10,4,'{\"ComputingNeighbors\": 130.835919, \"TreeBuilding\": 1.8467696666666666, \"Runtime\": 132.68268866666668}',20,100),(96,7,1,'{\"Runtime\": 102.64451416333516}',16,79),(97,7,1,'{\"Runtime\": 32.27009916305542}',34,79),(98,7,1,'{\"Runtime\": 0.0006566047668457031}',1,81),(99,7,1,'{\"Runtime\": 0.0009891192118326824}',13,81),(100,7,1,'{\"Runtime\": 0.0009380976359049479}',26,81),(101,7,1,'{\"Runtime\": 0.0010960102081298828}',8,81),(102,7,1,'{\"Runtime\": 0.0014979839324951172}',27,81),(103,7,1,'{\"Runtime\": 0.0036704540252685547}',28,81),(104,7,1,'{\"Runtime\": \"failure\"}',29,81),(105,7,1,'{\"Runtime\": 0.030051787694295246}',30,81),(106,7,1,'{\"Runtime\": 0.047181288401285805}',31,81),(107,7,1,'{\"Runtime\": 0.9957815806070963}',32,81),(108,7,1,'{\"Runtime\": 0.4676960309346517}',10,81),(109,7,1,'{\"Runtime\": 2.9156994024912515}',11,81),(110,7,1,'{\"Runtime\": 0.5741381645202637}',15,81),(111,7,1,'{\"Runtime\": 14.909868399302164}',5,81),(112,7,1,'{\"Runtime\": 11.99443499247233}',17,81),(113,7,1,'{\"Runtime\": 1.3512256145477295}',20,81),(114,9,5,'{\"TreeBuilding\": 2.1127263333333333, \"Runtime\": 533.3917026666667, \"ComputingNeighbors\": 531.2789763333334}',20,34),(115,7,1,'{\"Runtime\": 215.10751763979593}',12,81),(116,7,1,'{\"Runtime\": 22.918806791305542}',33,81),(117,7,1,'{\"Runtime\": 83.09509468078613}',16,81),(118,7,1,'{\"Runtime\": 26.591095050175984}',34,81),(119,7,1,'{\"Runtime\": 0.0007333755493164062}',1,80),(120,7,1,'{\"Runtime\": 0.0011769930521647136}',13,80),(121,7,1,'{\"Runtime\": 0.0010766983032226562}',26,80),(122,7,1,'{\"Runtime\": 0.0012865066528320312}',8,80),(123,7,1,'{\"Runtime\": 0.0017775694529215496}',27,80),(124,7,1,'{\"Runtime\": 0.004127343495686849}',28,80),(125,7,1,'{\"Runtime\": \"failure\"}',29,80),(126,7,1,'{\"Runtime\": 0.03036340077718099}',30,80),(127,7,1,'{\"Runtime\": 0.047413269678751625}',31,80),(128,7,1,'{\"Runtime\": 0.9934125741322836}',32,80),(129,7,1,'{\"Runtime\": 0.4877777894337972}',10,80),(130,7,1,'{\"Runtime\": 2.916805903116862}',11,80),(131,7,1,'{\"Runtime\": 0.5752654075622559}',15,80),(132,7,1,'{\"Runtime\": 14.929938077926636}',5,80),(133,7,1,'{\"Runtime\": 11.988784154256185}',17,80),(134,7,1,'{\"Runtime\": 1.351916790008545}',20,80),(135,7,1,'{\"Runtime\": 214.78649099667868}',12,80),(136,7,1,'{\"Runtime\": 22.915788332621258}',33,80),(137,7,1,'{\"Runtime\": 83.13157916069031}',16,80),(138,7,1,'{\"Runtime\": 26.59412495295207}',34,80),(139,7,1,'{\"Runtime\": 0.004644950230916341}',13,89),(140,7,1,'{\"Runtime\": 0.5125201543172201}',14,89),(141,7,1,'{\"Runtime\": 5.9133710861206055}',13,89),(142,7,1,'{\"Runtime\": 61.3607706228892}',5,89),(143,7,1,'{\"Runtime\": \"failure\"}',15,89),(144,11,4,'{\"TreeBuilding\": 6.7e-05, \"ComputingNeighbors\": 0.00017566666666666664, \"Runtime\": 0.00024266666666666664}',13,100),(145,11,4,'{\"TreeBuilding\": 0.0006779999999999999, \"ComputingNeighbors\": 0.0042636666666666665, \"Runtime\": 0.004941666666666666}',14,100),(146,11,4,'{\"TreeBuilding\": 0.002403666666666667, \"ComputingNeighbors\": 0.014368333333333332, \"Runtime\": 0.016772}',13,100),(147,11,4,'{\"TreeBuilding\": 0.12620466666666666, \"ComputingNeighbors\": 10.739715666666667, \"Runtime\": 10.865920333333333}',5,100),(148,11,4,'{\"TreeBuilding\": 0.22959233333333331, \"ComputingNeighbors\": 2.829342, \"Runtime\": 3.058934333333333}',15,100),(149,11,4,'{\"TreeBuilding\": 0.6793679999999999, \"ComputingNeighbors\": 2.560941666666667, \"Runtime\": 3.240309666666667}',17,100),(150,11,4,'{\"TreeBuilding\": 1.8406036666666665, \"ComputingNeighbors\": 130.98547, \"Runtime\": 132.82607366666664}',20,100),(151,12,4,'{\"ComputingNeighbors\": 0.00017766666666666666, \"TreeBuilding\": 6.466666666666666e-05, \"Runtime\": 0.00024233333333333333}',13,85),(152,12,4,'{\"ComputingNeighbors\": 0.004590333333333333, \"TreeBuilding\": 0.0006783333333333333, \"Runtime\": 0.005268666666666667}',14,85),(153,12,4,'{\"ComputingNeighbors\": 0.015630333333333333, \"TreeBuilding\": 0.002381666666666667, \"Runtime\": 0.018012}',13,85),(154,12,4,'{\"ComputingNeighbors\": 11.914738333333332, \"TreeBuilding\": 0.12602966666666668, \"Runtime\": 12.040768}',5,85),(155,12,4,'{\"ComputingNeighbors\": 3.7942110000000002, \"TreeBuilding\": 0.22953500000000002, \"Runtime\": 4.023746}',15,85),(156,12,4,'{\"ComputingNeighbors\": 2.7601560000000003, \"TreeBuilding\": 0.6780023333333333, \"Runtime\": 3.4381583333333334}',17,85),(157,12,4,'{\"ComputingNeighbors\": 186.15844266666667, \"TreeBuilding\": 1.8436750000000002, \"Runtime\": 188.00211766666666}',20,85),(158,13,4,'{\"ComputingNeighbors\": 0.00017533333333333333, \"Runtime\": 0.00024033333333333337, \"TreeBuilding\": 6.5e-05}',13,101),(159,13,4,'{\"ComputingNeighbors\": 0.004426666666666666, \"Runtime\": 0.005117333333333334, \"TreeBuilding\": 0.0006906666666666667}',14,101),(160,13,4,'{\"ComputingNeighbors\": 0.015061, \"Runtime\": 0.017435, \"TreeBuilding\": 0.002374}',13,101),(161,13,4,'{\"ComputingNeighbors\": 11.413904, \"Runtime\": 11.540442666666666, \"TreeBuilding\": 0.12653866666666666}',5,101),(162,13,4,'{\"ComputingNeighbors\": 3.3389116666666667, \"Runtime\": 3.5680480000000006, \"TreeBuilding\": 0.22913633333333336}',15,101),(163,13,4,'{\"ComputingNeighbors\": 2.6679556666666664, \"Runtime\": 3.346651, \"TreeBuilding\": 0.6786953333333333}',17,101),(164,13,4,'{\"ComputingNeighbors\": 160.02113799999998, \"Runtime\": 161.86606666666668, \"TreeBuilding\": 1.8449286666666669}',20,101),(165,13,4,'{\"ComputingNeighbors\": 2269.4317873333334, \"Runtime\": 2271.3149580000004, \"TreeBuilding\": 1.8831706666666668}',12,101),(166,13,4,'{\"ComputingNeighbors\": 656.3595443333334, \"Runtime\": 688.872812, \"TreeBuilding\": 32.51326766666667}',33,101),(167,14,4,'{\"TreeBuilding\": 6.5e-05, \"ComputingNeighbors\": 0.0001913333333333333, \"Runtime\": 0.0002563333333333333}',13,104),(168,14,4,'{\"TreeBuilding\": 0.0006723333333333334, \"ComputingNeighbors\": 0.004260666666666667, \"Runtime\": 0.004933}',14,104),(169,14,4,'{\"TreeBuilding\": 0.0023866666666666667, \"ComputingNeighbors\": 0.014576, \"Runtime\": 0.016962666666666668}',13,104),(170,14,4,'{\"TreeBuilding\": 0.126329, \"ComputingNeighbors\": 10.942136666666665, \"Runtime\": 11.068465666666667}',5,104),(171,14,4,'{\"TreeBuilding\": 0.22872066666666666, \"ComputingNeighbors\": 2.981434333333333, \"Runtime\": 3.2101550000000003}',15,104),(172,14,4,'{\"TreeBuilding\": 0.6781833333333332, \"ComputingNeighbors\": 2.589025, \"Runtime\": 3.267208333333334}',17,104),(173,14,4,'{\"TreeBuilding\": 1.8481016666666668, \"ComputingNeighbors\": 139.36797800000002, \"Runtime\": 141.21607966666667}',20,104),(174,14,4,'{\"TreeBuilding\": 1.8829263333333335, \"ComputingNeighbors\": 2262.020840333333, \"Runtime\": 2263.903766666667}',12,104),(175,14,4,'{\"TreeBuilding\": 32.49215, \"ComputingNeighbors\": 584.9111433333333, \"Runtime\": 617.4032933333333}',33,104),(176,14,4,'{\"TreeBuilding\": 23.967009333333333, \"ComputingNeighbors\": 2845.7148973333333, \"Runtime\": 2869.6819066666667}',16,104),(177,14,4,'{\"TreeBuilding\": 6.633333333333334e-05, \"ComputingNeighbors\": 0.00017566666666666666, \"Runtime\": 0.000242}',13,100),(178,14,4,'{\"TreeBuilding\": 0.0006776666666666667, \"ComputingNeighbors\": 0.004227333333333334, \"Runtime\": 0.0049050000000000005}',14,100),(179,14,4,'{\"TreeBuilding\": 0.002405, \"ComputingNeighbors\": 0.014545666666666667, \"Runtime\": 0.016950666666666666}',13,100),(180,14,4,'{\"TreeBuilding\": 0.126161, \"ComputingNeighbors\": 10.746813000000001, \"Runtime\": 10.872974}',5,100),(181,14,4,'{\"TreeBuilding\": 0.228658, \"ComputingNeighbors\": 2.825521333333333, \"Runtime\": 3.054179333333334}',15,100),(182,14,4,'{\"TreeBuilding\": 0.67849, \"ComputingNeighbors\": 2.5572820000000003, \"Runtime\": 3.2357719999999994}',17,100),(183,14,4,'{\"TreeBuilding\": 1.8522806666666665, \"ComputingNeighbors\": 130.91903266666665, \"Runtime\": 132.77131333333332}',20,100),(184,14,4,'{\"TreeBuilding\": 1.881824, \"ComputingNeighbors\": 2259.8128513333336, \"Runtime\": 2261.6946753333336}',12,100),(185,14,4,'{\"TreeBuilding\": 32.519815, \"ComputingNeighbors\": 554.5898243333335, \"Runtime\": 587.1096393333333}',33,100),(186,14,4,'{\"TreeBuilding\": 23.954992333333337, \"ComputingNeighbors\": 2843.683767666667, \"Runtime\": 2867.63876}',16,100),(187,14,4,'{\"TreeBuilding\": 6.533333333333333e-05, \"ComputingNeighbors\": 0.00020366666666666667, \"Runtime\": 0.000269}',13,101),(188,14,4,'{\"TreeBuilding\": 0.0006766666666666666, \"ComputingNeighbors\": 0.004484333333333333, \"Runtime\": 0.005161}',14,101),(189,14,4,'{\"TreeBuilding\": 0.0023786666666666665, \"ComputingNeighbors\": 0.015118333333333333, \"Runtime\": 0.017497000000000002}',13,101),(190,14,4,'{\"TreeBuilding\": 0.12640833333333332, \"ComputingNeighbors\": 11.436025333333333, \"Runtime\": 11.562433666666665}',5,101),(191,14,4,'{\"TreeBuilding\": 0.22897066666666666, \"ComputingNeighbors\": 3.3341133333333333, \"Runtime\": 3.563084}',15,101),(192,14,4,'{\"TreeBuilding\": 0.679608, \"ComputingNeighbors\": 2.6692250000000004, \"Runtime\": 3.3488330000000004}',17,101),(193,14,4,'{\"TreeBuilding\": 1.842575, \"ComputingNeighbors\": 159.878591, \"Runtime\": 161.721166}',20,101),(194,14,4,'{\"TreeBuilding\": 1.8842843333333334, \"ComputingNeighbors\": 2268.6540076666665, \"Runtime\": 2270.5382919999997}',12,101),(195,14,4,'{\"TreeBuilding\": 32.474421, \"ComputingNeighbors\": 656.4833076666667, \"Runtime\": 688.9577286666666}',33,101),(196,14,4,'{\"TreeBuilding\": 23.94147166666667, \"ComputingNeighbors\": 2851.887321, \"Runtime\": 2875.8287926666667}',16,101),(197,14,4,'{\"TreeBuilding\": 6.7e-05, \"ComputingNeighbors\": 0.00017533333333333333, \"Runtime\": 0.00024233333333333333}',13,90),(198,14,4,'{\"TreeBuilding\": 0.0006826666666666666, \"ComputingNeighbors\": 0.004325, \"Runtime\": 0.005007666666666666}',14,90),(199,14,4,'{\"TreeBuilding\": 0.0023976666666666664, \"ComputingNeighbors\": 0.014830666666666666, \"Runtime\": 0.017228333333333335}',13,90),(200,14,4,'{\"TreeBuilding\": 0.12640266666666666, \"ComputingNeighbors\": 11.214146, \"Runtime\": 11.340548666666665}',5,90),(201,14,4,'{\"TreeBuilding\": 0.228895, \"ComputingNeighbors\": 3.149251, \"Runtime\": 3.3781459999999996}',15,90),(202,14,4,'{\"TreeBuilding\": 0.6783939999999999, \"ComputingNeighbors\": 2.6273156666666666, \"Runtime\": 3.3057096666666665}',17,90),(203,14,4,'{\"TreeBuilding\": 1.8455423333333334, \"ComputingNeighbors\": 148.99111466666668, \"Runtime\": 150.83665699999997}',20,90),(204,14,4,'{\"TreeBuilding\": 1.8822233333333334, \"ComputingNeighbors\": 2266.7909516666664, \"Runtime\": 2268.6731749999994}',12,90),(205,14,4,'{\"TreeBuilding\": 32.455385666666665, \"ComputingNeighbors\": 619.2275913333333, \"Runtime\": 651.682977}',33,90),(206,14,4,'{\"TreeBuilding\": 23.964995333333334, \"ComputingNeighbors\": 2850.9125153333334, \"Runtime\": 2874.8775106666667}',16,90),(207,14,4,'{\"TreeBuilding\": 6.833333333333333e-05, \"ComputingNeighbors\": 0.00017533333333333333, \"Runtime\": 0.00024366666666666666}',13,34),(208,14,4,'{\"TreeBuilding\": 0.0006746666666666667, \"ComputingNeighbors\": 0.0044340000000000004, \"Runtime\": 0.005108666666666667}',14,34),(209,14,4,'{\"TreeBuilding\": 0.0023866666666666667, \"ComputingNeighbors\": 0.015423333333333332, \"Runtime\": 0.017810000000000003}',13,34),(210,14,4,'{\"TreeBuilding\": 0.12649866666666668, \"ComputingNeighbors\": 11.728398666666665, \"Runtime\": 11.854897333333334}',5,34),(211,14,4,'{\"TreeBuilding\": 0.230448, \"ComputingNeighbors\": 3.552298, \"Runtime\": 3.782746}',15,34),(212,14,4,'{\"TreeBuilding\": 0.678785, \"ComputingNeighbors\": 2.712483, \"Runtime\": 3.391268}',17,34),(213,14,4,'{\"TreeBuilding\": 1.8491126666666666, \"ComputingNeighbors\": 172.91731333333334, \"Runtime\": 174.766426}',20,34),(214,14,4,'{\"TreeBuilding\": 1.8845863333333333, \"ComputingNeighbors\": 2273.197207333333, \"Runtime\": 2275.0817936666667}',12,34),(215,14,4,'{\"TreeBuilding\": 32.490126, \"ComputingNeighbors\": 697.7265276666667, \"Runtime\": 730.2166536666667}',33,34),(216,14,4,'{\"TreeBuilding\": 23.947457333333332, \"ComputingNeighbors\": 2857.0229873333333, \"Runtime\": 2880.970444666666}',16,34),(217,14,4,'{\"TreeBuilding\": 6.500000000000001e-05, \"ComputingNeighbors\": 0.0001773333333333333, \"Runtime\": 0.00024233333333333333}',13,85),(218,14,4,'{\"TreeBuilding\": 0.0006753333333333333, \"ComputingNeighbors\": 0.004552333333333333, \"Runtime\": 0.005227666666666668}',14,85),(219,14,4,'{\"TreeBuilding\": 0.002519666666666667, \"ComputingNeighbors\": 0.015689333333333333, \"Runtime\": 0.018209}',13,85),(220,14,4,'{\"TreeBuilding\": 0.12639966666666666, \"ComputingNeighbors\": 12.022098666666666, \"Runtime\": 12.148498333333334}',5,85),(221,14,4,'{\"TreeBuilding\": 0.22944033333333333, \"ComputingNeighbors\": 3.789934666666667, \"Runtime\": 4.019375}',15,85),(222,14,4,'{\"TreeBuilding\": 0.6780266666666668, \"ComputingNeighbors\": 2.7618956666666663, \"Runtime\": 3.439922333333333}',17,85),(223,14,4,'{\"TreeBuilding\": 1.8409483333333334, \"ComputingNeighbors\": 186.53765333333334, \"Runtime\": 188.37860166666667}',20,85),(224,14,4,'{\"TreeBuilding\": 1.8816503333333332, \"ComputingNeighbors\": 2276.8776839999996, \"Runtime\": 2278.7593343333333}',12,85),(225,14,4,'{\"TreeBuilding\": 32.51032933333334, \"ComputingNeighbors\": 745.3422073333335, \"Runtime\": 777.8525366666667}',33,85),(226,14,4,'{\"TreeBuilding\": 23.944497666666667, \"ComputingNeighbors\": 2860.7267093333335, \"Runtime\": 2884.671207000001}',16,85),(227,15,3,'{\"TreeBuilding\": 0.006589, \"ComputingNeighbors\": 0.001257, \"Runtime\": 0.008378666666666666}',13,35),(228,15,3,'{\"TreeBuilding\": 0.12437033333333332, \"ComputingNeighbors\": 0.034506666666666665, \"Runtime\": 0.16217766666666666}',14,35),(229,15,3,'{\"TreeBuilding\": 0.46652033333333337, \"ComputingNeighbors\": 0.19165466666666667, \"Runtime\": 0.6647466666666667}',13,35),(230,16,1,'{\"Runtime\": 0.0045426686604817705}',13,89),(231,16,1,'{\"Runtime\": 0.5106503168741862}',14,89),(232,15,3,'{\"TreeBuilding\": 0.7709946666666667, \"ComputingNeighbors\": 12.101749666666668, \"Runtime\": 13.243242}',5,35),(233,16,1,'{\"Runtime\": 5.8480338255564375}',13,89),(234,16,1,'{\"Runtime\": 61.574853579203285}',5,89),(235,16,1,'{\"Runtime\": \"failure\"}',15,89),(236,15,3,'{\"TreeBuilding\": 5.8853263333333325, \"ComputingNeighbors\": 85.23478733333333, \"Runtime\": 91.23027133333333}',15,35),(237,17,5,'{\"Runtime\": 0.000219, \"TreeBuilding\": 2.4333333333333333e-05, \"ComputingNeighbors\": 0.00019466666666666666}',13,101),(238,17,5,'{\"Runtime\": 0.006187000000000001, \"TreeBuilding\": 0.0005503333333333333, \"ComputingNeighbors\": 0.005636666666666667}',14,101),(239,17,5,'{\"Runtime\": 0.02358266666666667, \"TreeBuilding\": 0.0019236666666666666, \"ComputingNeighbors\": 0.021659}',13,101),(240,17,5,'{\"Runtime\": 17.551676, \"TreeBuilding\": 0.134902, \"ComputingNeighbors\": 17.416774}',5,101),(241,17,5,'{\"Runtime\": 6.336695333333334, \"TreeBuilding\": 0.16907266666666665, \"ComputingNeighbors\": 6.1676226666666665}',15,101),(242,17,5,'{\"Runtime\": 4.519001, \"TreeBuilding\": 0.6531556666666667, \"ComputingNeighbors\": 3.865845333333333}',17,101),(243,15,3,'{\"TreeBuilding\": 43.63249966666667, \"ComputingNeighbors\": 106.123431, \"Runtime\": 151.31274733333336}',17,35),(244,17,5,'{\"Runtime\": 459.864393, \"TreeBuilding\": 2.1043066666666665, \"ComputingNeighbors\": 457.7600863333333}',20,101),(245,18,6,'{}',8,26),(246,18,6,'{}',9,26),(247,16,1,'{\"Runtime\": \">9000\"}',17,89),(248,18,6,'{}',19,26),(249,18,6,'{\"Runtime\": 0.03675723075866699}',35,70),(250,18,6,'{\"Runtime\": 3.4675285816192627}',36,70),(251,18,6,'{\"Runtime\": 282.3972241083781}',37,70),(252,17,5,'{\"Runtime\": 4377.280144333334, \"TreeBuilding\": 44.06111833333333, \"ComputingNeighbors\": 4333.219026}',12,101),(253,15,3,'{\"TreeBuilding\": 85.71975400000001, \"ComputingNeighbors\": -23892.686803999997, \"Runtime\": -23806.338695999995}',20,35),(254,16,1,'{\"Runtime\": \">9000\"}',20,89),(255,16,1,'{\"Runtime\": \"failure\"}',12,89),(256,17,5,'{\"Runtime\": 1105.6688286666665, \"TreeBuilding\": 10.483582666666665, \"ComputingNeighbors\": 1095.185246}',33,101),(257,18,6,'{\"Runtime\": \">9000\"}',29,70),(258,18,6,'{\"Runtime\": 469.1591486930847}',38,70),(259,15,3,'{\"TreeBuilding\": 18.21713133333333, \"ComputingNeighbors\": 1613.86612, \"Runtime\": 1635.23145}',12,35),(260,16,1,'{\"Runtime\": \">9000\"}',33,89),(261,16,1,'{\"Runtime\": \"failure\"}',16,89),(262,16,1,'{\"Runtime\": 0.01795053482055664}',8,29),(263,16,1,'{\"Runtime\": 0.1343997319539388}',9,29),(264,16,1,'{\"Runtime\": 69.49083010355632}',12,29),(265,16,1,'{\"Runtime\": 25.509756485621136}',16,29),(266,16,1,'{\"Runtime\": 0.08447559674580891}',18,29),(267,16,1,'{\"Runtime\": 0.5404777526855469}',19,29),(268,16,1,'{\"Runtime\": \"failure\"}',11,29),(269,16,1,'{\"Runtime\": \"failure\"}',10,29),(270,16,1,'{\"ACC\": 0.3333333333333333, \"MCC\": 0, \"MSE\": 0.6666666666666666, \"Precision\": 0.7777777777777777, \"Recall\": 0.3333333333333333, \"Runtime\": 0.09110506375630696}',1,97),(271,16,1,'{\"Runtime\": \"failure\"}',2,97),(272,16,1,'{}',3,97),(273,16,1,'{}',4,97),(274,16,1,'{}',5,97),(275,16,1,'{}',6,97),(276,16,1,'{\"Runtime\": \"failure\"}',7,97),(277,16,1,'{}',21,97),(278,16,1,'{\"Runtime\": \"failure\"}',22,97),(279,16,1,'{}',23,97),(280,16,1,'{}',24,97),(281,16,1,'{}',25,97),(282,16,1,'{\"Runtime\": 0.01064594586690267}',8,27),(283,16,1,'{\"Runtime\": 1.3465630213419597}',9,27),(284,16,1,'{\"Runtime\": 0.8380421002705892}',10,27),(285,16,1,'{\"Runtime\": 88.45352379480998}',11,27),(286,16,1,'{\"Runtime\": \"failure\"}',1,30),(287,16,1,'{\"ACC\": 0.5, \"Recall\": 0.5, \"MCC\": 0, \"MSE\": 0.035256410256410256, \"Precision\": 0.982371794871795}',2,30),(288,16,1,'{\"ACC\": 0.6985281996938656, \"Recall\": 0.6985281996938655, \"MCC\": 0.21648870496190487, \"MSE\": 0.30423940149625933, \"Precision\": 0.5590185165739088}',3,30),(289,16,1,'{\"ACC\": 0.8593749260683614, \"Recall\": 0.8593749260683614, \"MCC\": 0.2881212097228311, \"MSE\": 0.20339860260502027, \"Precision\": 0.5577487642226022}',4,30),(290,16,1,'{\"ACC\": 0.7957179119302507, \"Recall\": 0.7957179119302505, \"MCC\": 0.3540668274961511, \"MSE\": 0.25740669488264717, \"Precision\": 0.6059821820691386}',5,30),(291,16,1,'{\"ACC\": 0.8644921552436001, \"Recall\": 0.8644921552436003, \"MCC\": 0.4022384018775811, \"MSE\": 0.07430257510729614, \"Precision\": 0.6109733979301267}',6,30),(292,18,6,'{\"Runtime\": \">9000\"}',19,70),(293,18,6,'{\"Runtime\": 5.163124958674113}',10,70),(294,18,6,'{\"Runtime\": 38.01122919718424}',11,70),(295,18,6,'{\"Runtime\": 15.363180557886759}',39,70),(296,16,1,'{\"ACC\": 0.5, \"Recall\": 0.5, \"MCC\": 0, \"MSE\": 0.021501172791243157, \"Precision\": 0.9892494136043783}',7,30),(297,16,1,'{\"ACC\": 0.6828034682080926, \"Recall\": 0.6828034682080926, \"MCC\": 0.05675542656300192, \"MSE\": 0.38362068965517243, \"Precision\": 0.504405247991085}',21,30),(298,16,1,'{\"ACC\": 0.5, \"Recall\": 0.5, \"MCC\": 0, \"MSE\": 0.094876660341556, \"Precision\": 0.9525616698292221}',22,30),(299,16,1,'{\"ACC\": 0.7384607876348562, \"Recall\": 0.7384607876348562, \"MCC\": 0.29751451193822337, \"MSE\": 0.30387931034482757, \"Precision\": 0.5927981552981553}',23,30),(300,16,1,'{\"ACC\": 0.7229729729729729, \"Recall\": 0.7229729729729731, \"MCC\": 0.27142299946428006, \"MSE\": 0.4358974358974359, \"Precision\": 0.5826001955034213}',24,30),(301,16,1,'{\"ACC\": 0.8429553264604812, \"Recall\": 0.8429553264604811, \"MCC\": 0.49339118545333194, \"MSE\": 0.22321428571428573, \"Precision\": 0.6774537695590327}',25,30),(302,16,1,'{\"Runtime\": 0.006450653076171875}',1,79),(303,16,1,'{\"Runtime\": 0.001383384068806966}',13,79),(304,16,1,'{\"Runtime\": 0.0013168652852376301}',26,79),(305,16,1,'{\"Runtime\": 0.0015107790629069011}',8,79),(306,16,1,'{\"Runtime\": \"failure\"}',27,79),(307,16,1,'{\"Runtime\": 0.00464169184366862}',28,79),(308,16,1,'{\"Runtime\": \"failure\"}',29,79),(309,16,1,'{\"Runtime\": 0.03532632191975912}',30,79),(310,16,1,'{\"Runtime\": 0.0538796583811442}',31,79),(311,16,1,'{\"Runtime\": 1.2293976942698162}',32,79),(312,16,1,'{\"Runtime\": \"failure\"}',10,79),(313,16,1,'{\"Runtime\": 3.540579080581665}',11,79),(314,16,1,'{\"Runtime\": 0.6534726619720459}',15,79),(315,16,1,'{\"Runtime\": 18.80338708559672}',5,79),(316,15,3,'{\"TreeBuilding\": 123.40542633333332, \"ComputingNeighbors\": 2877.77782, \"Runtime\": 3003.470627666667}',33,35),(317,16,1,'{\"Runtime\": 14.204278707504272}',17,79),(318,16,1,'{\"Runtime\": 1.4533292452494304}',20,79),(319,16,1,'{\"Runtime\": 267.22608455022174}',12,79),(320,16,1,'{\"Runtime\": 27.449899355570476}',33,79),(321,16,1,'{\"Runtime\": 101.8266150156657}',16,79),(322,15,3,'{\"TreeBuilding\": 98.68305033333333, \"ComputingNeighbors\": 411.75613533333336, \"Runtime\": 512.414699}',16,35),(323,15,3,'{\"TreeBuilding\": 0.006445666666666666, \"ComputingNeighbors\": 0.001224, \"Runtime\": 0.008173}',13,102),(324,15,3,'{\"TreeBuilding\": 0.12417299999999999, \"ComputingNeighbors\": 0.034591000000000004, \"Runtime\": 0.16206633333333334}',14,102),(325,15,3,'{\"TreeBuilding\": 0.4700136666666667, \"ComputingNeighbors\": 0.19222666666666668, \"Runtime\": 0.6687826666666666}',13,102),(326,15,3,'{\"TreeBuilding\": 0.7677146666666665, \"ComputingNeighbors\": 12.141133333333334, \"Runtime\": 13.279247333333332}',5,102),(327,16,1,'{\"Runtime\": 31.67717711130778}',34,79),(328,16,1,'{\"Runtime\": 0.0011130174001057942}',1,80),(329,16,1,'{\"Runtime\": 0.0015269120534261067}',13,80),(330,16,1,'{\"Runtime\": 0.001467307408650716}',26,80),(331,16,1,'{\"Runtime\": 0.0016859372456868489}',8,80),(332,16,1,'{\"Runtime\": 0.002179861068725586}',27,80),(333,16,1,'{\"Runtime\": 0.004588206609090169}',28,80),(334,16,1,'{\"Runtime\": \"failure\"}',29,80),(335,16,1,'{\"Runtime\": 0.030647913614908855}',30,80),(336,16,1,'{\"Runtime\": 0.04893573125203451}',31,80),(337,16,1,'{\"Runtime\": 0.9939470291137695}',32,80),(338,16,1,'{\"Runtime\": 0.4834490617116292}',10,80),(339,16,1,'{\"Runtime\": 2.9042859077453613}',11,80),(340,16,1,'{\"Runtime\": 0.5705288251241049}',15,80),(341,16,1,'{\"Runtime\": 14.944255272547403}',5,80),(342,15,3,'{\"TreeBuilding\": 5.905985333333334, \"ComputingNeighbors\": 85.43081166666667, \"Runtime\": 91.446866}',15,102),(343,16,1,'{\"Runtime\": 12.008693933486938}',17,80),(344,16,1,'{\"Runtime\": 1.3368048667907715}',20,80),(345,15,3,'{\"TreeBuilding\": 43.133484, \"ComputingNeighbors\": 106.13206733333334, \"Runtime\": 150.82285133333332}',17,102),(346,16,1,'{\"Runtime\": 212.26002502441406}',12,80),(347,16,1,'{\"Runtime\": 22.656354824701946}',33,80),(348,16,1,'{\"Runtime\": 82.76136565208435}',16,80),(349,16,1,'{\"Runtime\": 26.07260513305664}',34,80),(350,16,1,'{\"Runtime\": 0.0010637442270914714}',1,81),(351,16,1,'{\"Runtime\": 0.0013718605041503906}',13,81),(352,16,1,'{\"Runtime\": 0.0013221899668375652}',26,81),(353,16,1,'{\"Runtime\": 0.0015363693237304688}',8,81),(354,16,1,'{\"Runtime\": 0.0018677711486816406}',27,81),(355,16,1,'{\"Runtime\": 0.004108349482218425}',28,81),(356,16,1,'{\"Runtime\": \"failure\"}',29,81),(357,16,1,'{\"Runtime\": 0.030641476313273113}',30,81),(358,16,1,'{\"Runtime\": 0.04880189895629883}',31,81),(359,16,1,'{\"Runtime\": 0.9883284568786621}',32,81),(360,16,1,'{\"Runtime\": 0.4645664691925049}',10,81),(361,16,1,'{\"Runtime\": 2.891812801361084}',11,81),(362,16,1,'{\"Runtime\": 0.5696142514546713}',15,81),(363,16,1,'{\"Runtime\": 14.924304882685343}',5,81),(364,16,1,'{\"Runtime\": 12.009613434473673}',17,81),(365,16,1,'{\"Runtime\": 1.3363041083017986}',20,81),(366,16,1,'{\"Runtime\": 211.4510681629181}',12,81),(367,16,1,'{\"Runtime\": 22.64928110440572}',33,81),(368,18,6,'{\"Runtime\": 2009.7046198050182}',5,70),(369,18,6,'{\"Runtime\": \"failure\"}',17,70),(370,18,6,'{\"Runtime\": 0.024725596110026043}',35,63),(371,18,6,'{\"Runtime\": 1.13273286819458}',36,63),(372,16,1,'{\"Runtime\": 82.74173466364543}',16,81),(373,16,1,'{\"Runtime\": 26.066983540852863}',34,81),(374,16,1,'{\"ACC\": 0.9666666666666667, \"MCC\": 0.9500681414622171, \"MSE\": 0.03333333333333333, \"Precision\": 0.9667867146858743, \"Recall\": 0.9666666666666667, \"Runtime\": 0.002660671869913737}',1,98),(375,16,1,'{\"ACC\": 0.4983388704318938, \"MCC\": -0.010840090307394688, \"MSE\": 0.038461538461538464, \"Precision\": 0.48231511254019294, \"Recall\": 0.4983388704318937, \"Runtime\": 0.03274178504943848}',2,98),(376,16,1,'{\"ACC\": 0.5506181561285765, \"MCC\": 0.24694147195106161, \"MSE\": 0.06733167082294264, \"Precision\": 0.8011769651113912, \"Recall\": 0.5506181561285765, \"Runtime\": 0.6435542106628418}',3,98),(377,18,6,'{\"Runtime\": 255.38695192337036}',37,63),(378,16,1,'{\"ACC\": 0.7343630312891838, \"MCC\": 0.6413605499859582, \"MSE\": 0.01707927197446735, \"Precision\": 0.9387886528173555, \"Recall\": 0.7343630312891838, \"Runtime\": 146.74423702557883}',4,98),(379,16,1,'{\"ACC\": 0.9334472483436023, \"MCC\": 0.8686798475908203, \"MSE\": 0.020392458637937667, \"Precision\": 0.9352344376934539, \"Recall\": 0.9334472483436022, \"Runtime\": 13.661704460779825}',5,98),(380,16,1,'{\"ACC\": 0.7613687397684964, \"MCC\": 0.6391030304734503, \"MSE\": 0.01555793991416309, \"Precision\": 0.8906862426644145, \"Recall\": 0.7613687397684964, \"Runtime\": 3.311126788457235}',6,98),(381,17,5,'{\"Runtime\": 6257.037841666667, \"TreeBuilding\": 1.8853666666666669, \"ComputingNeighbors\": 6255.152475}',16,101),(382,17,5,'{\"Runtime\": 0.0002483333333333333, \"TreeBuilding\": 2.4333333333333333e-05, \"ComputingNeighbors\": 0.00022400000000000002}',13,104),(383,17,5,'{\"Runtime\": 0.005947666666666667, \"TreeBuilding\": 0.000551, \"ComputingNeighbors\": 0.005396666666666667}',14,104),(384,17,5,'{\"Runtime\": 0.02224533333333333, \"TreeBuilding\": 0.0019210000000000002, \"ComputingNeighbors\": 0.020324333333333333}',13,104),(385,17,5,'{\"Runtime\": 16.105227666666668, \"TreeBuilding\": 0.134686, \"ComputingNeighbors\": 15.970541666666668}',5,104),(386,17,5,'{\"Runtime\": 5.128247666666668, \"TreeBuilding\": 0.169477, \"ComputingNeighbors\": 4.958770666666666}',15,104),(387,17,5,'{\"Runtime\": 4.2718739999999995, \"TreeBuilding\": 0.651962, \"ComputingNeighbors\": 3.619912}',17,104),(388,17,5,'{\"Runtime\": 350.4140836666667, \"TreeBuilding\": 2.1093713333333333, \"ComputingNeighbors\": 348.3047123333333}',20,104),(389,16,1,'{\"ACC\": 0.6181818181818182, \"MCC\": 0.48214410689199605, \"MSE\": 0.01641907740422205, \"Precision\": 0.9917485265225934, \"Recall\": 0.6181818181818182, \"Runtime\": 329.9305896759033}',7,98),(390,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.005747126436781609, \"Precision\": 0.9971264367816092, \"Recall\": 0.5, \"Runtime\": 0.4999886353810628}',21,98),(391,16,1,'{\"ACC\": 0.569517819706499, \"MCC\": 0.22432371387479666, \"MSE\": 0.09867172675521822, \"Precision\": 0.6809648548351888, \"Recall\": 0.569517819706499, \"Runtime\": 0.3748839696248372}',22,98),(392,16,1,'{\"ACC\": 0.567581688838873, \"MCC\": 0.17310041792693143, \"MSE\": 0.12212643678160921, \"Precision\": 0.6108427267847557, \"Recall\": 0.567581688838873, \"Runtime\": 0.5019036134084066}',23,98),(393,16,1,'{\"ACC\": 0.8303778892014186, \"MCC\": 0.6847180697468859, \"MSE\": 0.05641025641025641, \"Precision\": 0.8547746764857411, \"Recall\": 0.8303778892014186, \"Runtime\": 1.5673298041025798}',24,98),(394,16,1,'{\"ACC\": 0.7793814432989693, \"MCC\": 0.5941139850215877, \"MSE\": 0.08928571428571429, \"Precision\": 0.8158508158508159, \"Recall\": 0.7793814432989691, \"Runtime\": 0.0030423800150553384}',25,98),(395,16,1,'{\"Runtime\": 0.010047435760498047}',13,53),(396,16,1,'{\"Runtime\": 0.00016641616821289062}',1,53),(397,16,1,'{\"Runtime\": 1456.2862420082092}',20,47),(398,16,1,'{\"Runtime\": 0.025846163431803387}',38,49),(399,16,1,'{\"Runtime\": 0.007412910461425781}',14,52),(400,16,1,'{\"Runtime\": 32.60721548398336}',17,46),(401,16,1,'{\"Runtime\": 0.0840749740600586}',13,46),(402,16,1,'{\"Runtime\": 119.59847664833069}',12,51),(403,16,1,'{\"Runtime\": 3.5966978867848716}',15,51),(404,16,1,'{\"Runtime\": 4.005130370457967}',5,48),(405,16,1,'{\"Runtime\": 0.0446321169535319}',40,50),(406,16,1,'{\"Runtime\": \"failure\"}',1,24),(407,16,1,'{\"Runtime\": \"failure\"}',2,24),(408,16,1,'{\"Runtime\": \"failure\"}',3,24),(409,16,1,'{\"Runtime\": \"failure\"}',4,24),(410,16,1,'{\"Runtime\": \"failure\"}',5,24),(411,16,1,'{\"Runtime\": \"failure\"}',6,24),(412,16,1,'{\"Runtime\": \"failure\"}',7,24),(413,16,1,'{\"Runtime\": \"failure\"}',21,24),(414,16,1,'{\"Runtime\": \"failure\"}',22,24),(415,16,1,'{\"Runtime\": \"failure\"}',23,24),(416,16,1,'{\"Runtime\": \"failure\"}',24,24),(417,16,1,'{\"Runtime\": \"failure\"}',25,24),(418,16,1,'{\"ACC\": 0.3333333333333333, \"MCC\": 0, \"MSE\": 1.6666666666666667, \"Precision\": 0.7777777777777778, \"Recall\": 0.3333333333333333, \"Runtime\": 0.025251229604085285}',1,82),(419,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.035256410256410256, \"Precision\": 0.982371794871795, \"Recall\": 0.5, \"Runtime\": 0.0207215150197347}',2,82),(420,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.07107231920199501, \"Precision\": 0.9644638403990026, \"Recall\": 0.5, \"Runtime\": 0.5705721378326416}',3,82),(421,18,6,'{\"Runtime\": \">9000\"}',29,63),(422,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.029155524885706895, \"Precision\": 0.9854222375571465, \"Recall\": 0.5, \"Runtime\": 7.447890758514404}',4,82),(423,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.0850327048864948, \"Precision\": 0.9574836475567525, \"Recall\": 0.5, \"Runtime\": 10.945212841033936}',5,82),(424,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.025482832618025753, \"Precision\": 0.9872585836909872, \"Recall\": 0.5, \"Runtime\": 0.22243483861287436}',6,82),(425,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.021501172791243157, \"Precision\": 0.9892494136043783, \"Recall\": 0.5, \"Runtime\": 2.5319610436757407}',7,82),(426,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.005747126436781609, \"Precision\": 0.9971264367816092, \"Recall\": 0.5, \"Runtime\": 0.04214787483215332}',21,82),(427,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.094876660341556, \"Precision\": 0.9525616698292221, \"Recall\": 0.5, \"Runtime\": 0.17807181676228842}',22,82),(428,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.09985632183908046, \"Precision\": 0.9500718390804598, \"Recall\": 0.5, \"Runtime\": 0.1419836680094401}',23,82),(429,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.10303030303030303, \"Precision\": 0.9484848484848486, \"Recall\": 0.5, \"Runtime\": 0.6511661211649576}',24,82),(430,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.13392857142857142, \"Precision\": 0.9330357142857143, \"Recall\": 0.5, \"Runtime\": 0.003371636072794596}',25,82),(431,16,1,'{\"ACC\": 0.98, \"MCC\": 0.9700708921921396, \"MSE\": 0.02, \"Precision\": 0.980125383486728, \"Recall\": 0.98, \"Runtime\": 0.012965122858683268}',1,23),(432,16,1,'{\"Runtime\": \"failure\"}',2,23),(433,16,1,'{\"ACC\": 0.5952431414105734, \"MCC\": 0.22222607434542593, \"MSE\": 0.08977556109725686, \"Precision\": 0.6296272555366815, \"Recall\": 0.5952431414105734, \"Runtime\": 0.14927204449971518}',3,23),(434,18,6,'{\"Runtime\": 275.14722696940106}',38,63),(435,16,1,'{\"Runtime\": \"failure\"}',4,23),(436,16,1,'{\"ACC\": 0.9085099459981961, \"MCC\": 0.8170198919963921, \"MSE\": 0.028472489419007308, \"Precision\": 0.9085099459981962, \"Recall\": 0.9085099459981962, \"Runtime\": 2.0587114493052163}',5,23),(437,16,1,'{\"ACC\": 0.735774407116056, \"MCC\": 0.47897771489778473, \"MSE\": 0.025482832618025753, \"Precision\": 0.7432618261826183, \"Recall\": 0.735774407116056, \"Runtime\": 0.002674738566080729}',6,23),(438,15,3,'{\"TreeBuilding\": 85.35043733333335, \"ComputingNeighbors\": 4912.600523, \"Runtime\": 4998.580252333333}',20,102),(439,16,1,'{\"Runtime\": \"failure\"}',7,23),(440,16,1,'{\"ACC\": 0.4949421965317919, \"MCC\": -0.007663309352096424, \"MSE\": 0.015804597701149427, \"Precision\": 0.49709724238026126, \"Recall\": 0.4949421965317919, \"Runtime\": 0.0490411122639974}',21,23),(441,16,1,'{\"Runtime\": \"failure\"}',22,23),(442,16,1,'{\"ACC\": 0.5, \"MCC\": 0, \"MSE\": 0.09985632183908046, \"Precision\": 0.9500718390804598, \"Recall\": 0.5, \"Runtime\": 0.010784546534220377}',23,23),(443,16,1,'{\"ACC\": 0.502262443438914, \"MCC\": 0.0637226761495691, \"MSE\": 0.10256410256410257, \"Precision\": 0.9486940298507461, \"Recall\": 0.502262443438914, \"Runtime\": 0.014286994934082031}',24,23),(444,16,1,'{\"ACC\": 0.7742268041237114, \"MCC\": 0.56479954607449, \"MSE\": 0.09821428571428571, \"Precision\": 0.7908163265306123, \"Recall\": 0.7742268041237113, \"Runtime\": 0.0010797977447509766}',25,23),(445,16,1,'{\"Runtime\": 0.13329863548278809}',35,74),(446,16,1,'{\"Runtime\": 3.3867647647857666}',36,74),(447,16,1,'{\"Runtime\": 269.63262311617535}',37,74),(448,17,5,'{\"Runtime\": 4354.799261666666, \"TreeBuilding\": 43.69879266666666, \"ComputingNeighbors\": 4311.100469}',12,104),(449,15,3,'{\"TreeBuilding\": 18.487163, \"ComputingNeighbors\": 1615.285181, \"Runtime\": 1636.924333}',12,102),(450,17,5,'{\"Runtime\": 903.2112743333333, \"TreeBuilding\": 10.499445666666666, \"ComputingNeighbors\": 892.7118286666667}',33,104),(451,18,6,'{\"Runtime\": \">9000\"}',19,63),(452,18,6,'{\"Runtime\": 5.204623460769653}',10,63),(453,18,6,'{\"Runtime\": 22.794543107350666}',11,63),(454,18,6,'{\"Runtime\": 15.279955466588339}',39,63),(455,16,1,'{\"Runtime\": 1965.1416362921398}',29,74),(456,16,1,'{\"Runtime\": 452.1724241574605}',38,74),(457,16,1,'{\"Runtime\": \"failure\"}',19,74),(458,16,1,'{\"Runtime\": 0.21164949735005698}',10,74),(459,16,1,'{\"Runtime\": 35.23172879219055}',11,74),(460,16,1,'{\"Runtime\": 0.5115543206532797}',39,74),(461,15,3,'{\"TreeBuilding\": 123.616301, \"ComputingNeighbors\": 2876.616980666666, \"Runtime\": 3002.5196943333335}',33,102),(462,18,6,'{\"Runtime\": 2376.968068997065}',5,63),(463,18,6,'{\"Runtime\": \"failure\"}',17,63),(464,18,6,'{\"Runtime\": 0.01826794942220052}',35,68),(465,18,6,'{\"Runtime\": 3.567375103632609}',36,68),(466,18,6,'{\"Runtime\": 207.87497401237488}',37,68),(467,16,1,'{\"Runtime\": 1759.9566931724548}',5,74),(468,16,1,'{\"Runtime\": \"failure\"}',17,74),(469,16,1,'{\"Runtime\": 0.03130459785461426}',35,63),(470,16,1,'{\"Runtime\": 2.8226446310679116}',36,63),(471,15,3,'{\"TreeBuilding\": 98.56961166666667, \"ComputingNeighbors\": 411.73542633333335, \"Runtime\": 512.282915}',16,102),(472,16,1,'{\"Runtime\": 263.47005955378216}',37,63),(473,16,1,'{\"Runtime\": 1965.5203506151836}',29,63),(474,16,1,'{\"Runtime\": 453.0600643157959}',38,63),(475,16,1,'{\"Runtime\": \"failure\"}',19,63),(476,16,1,'{\"Runtime\": 0.22742652893066406}',10,63),(477,16,1,'{\"Runtime\": 31.50295885403951}',11,63),(478,16,1,'{\"Runtime\": 0.5121041933695475}',39,63),(479,18,6,'{\"Runtime\": \">9000\"}',29,68),(480,17,5,'{\"Runtime\": 6223.226370333334, \"TreeBuilding\": 1.886483666666667, \"ComputingNeighbors\": 6221.339886666668}',16,104),(481,17,5,'{\"Runtime\": 0.0002236666666666667, \"TreeBuilding\": 2.5e-05, \"ComputingNeighbors\": 0.00019866666666666665}',13,34),(482,17,5,'{\"Runtime\": 0.0063406666666666655, \"TreeBuilding\": 0.0005493333333333332, \"ComputingNeighbors\": 0.005791333333333333}',14,34),(483,17,5,'{\"Runtime\": 0.024409666666666663, \"TreeBuilding\": 0.0019586666666666667, \"ComputingNeighbors\": 0.022451}',13,34),(484,18,6,'{\"Runtime\": 402.9417044321696}',38,68),(485,17,5,'{\"Runtime\": 18.332969333333335, \"TreeBuilding\": 0.13489266666666666, \"ComputingNeighbors\": 18.19807666666667}',5,34),(486,17,5,'{\"Runtime\": 7.137737, \"TreeBuilding\": 0.1700366666666667, \"ComputingNeighbors\": 6.967700333333333}',15,34),(487,17,5,'{\"Runtime\": 4.671861666666667, \"TreeBuilding\": 0.652161, \"ComputingNeighbors\": 4.019700666666666}',17,34),(488,19,2,'{\"Runtime\": \"failure\"}',28,20),(489,19,2,'{\"Runtime\": 0.4634120464324951}',41,20),(490,19,2,'{\"Runtime\": 2.8974364598592124}',42,20),(491,19,2,'{\"Runtime\": \"failure\"}',38,20),(492,17,5,'{\"Runtime\": 532.8201273333333, \"TreeBuilding\": 2.1048496666666665, \"ComputingNeighbors\": 530.7152776666667}',20,34),(493,19,2,'{\"Runtime\": 717.1504804293314}',19,20),(494,19,2,'{\"Runtime\": 5.312634627024333}',39,20),(495,19,2,'{\"Runtime\": \"failure\"}',5,20),(496,16,1,'{\"Runtime\": 1760.351579507192}',5,63),(497,16,1,'{\"Runtime\": \"failure\"}',17,63),(498,16,1,'{\"Runtime\": 0.02290797233581543}',35,68),(499,16,1,'{\"Runtime\": 3.89461612701416}',36,68),(500,16,1,'{\"Runtime\": 265.7566177050273}',37,68),(501,19,2,'{\"Runtime\": 1240.717246691386}',12,20),(502,18,6,'{\"Runtime\": \">9000\"}',19,68),(503,18,6,'{\"Runtime\": 4.777447144190471}',10,68),(504,18,6,'{\"Runtime\": 28.003628730773926}',11,68),(505,18,6,'{\"Runtime\": 14.10019040107727}',39,68),(506,16,1,'{\"Runtime\": 1970.15167872111}',29,68),(507,16,1,'{\"Runtime\": 517.8313374519348}',38,68),(508,16,1,'{\"Runtime\": \"failure\"}',19,68),(509,16,1,'{\"Runtime\": 0.23423870404561362}',10,68),(510,19,2,'{\"Runtime\": 1679.5839014053345}',16,20),(511,16,1,'{\"Runtime\": 35.667495330174766}',11,68),(512,16,1,'{\"Runtime\": 0.521681547164917}',39,68),(513,19,2,'{\"Runtime\": \"failure\"}',34,20),(514,19,2,'{\"Runtime\": 0.006829579671223958}',35,63),(515,19,2,'{\"Runtime\": 0.417827844619751}',36,63),(516,19,2,'{\"Runtime\": 4.552043914794922}',37,63),(517,19,2,'{\"Runtime\": \"failure\"}',29,63),(518,19,2,'{\"Runtime\": 102.06799006462097}',38,63),(519,19,2,'{\"Runtime\": \"failure\"}',19,63),(520,19,2,'{\"Runtime\": 0.10100650787353516}',10,63),(521,19,2,'{\"Runtime\": 7.475234746932983}',11,63),(522,19,2,'{\"Runtime\": 0.2890025774637858}',39,63),(523,18,6,'{\"Runtime\": 1781.2924235661824}',5,68),(524,18,6,'{\"Runtime\": \"failure\"}',17,68),(525,18,6,'{\"Runtime\": 0.02588001887003581}',35,74),(526,18,6,'{\"Runtime\": 3.238109827041626}',36,74),(527,19,2,'{\"Runtime\": 465.6885051727295}',5,63),(528,19,2,'{\"Runtime\": \"failure\"}',17,63),(529,19,2,'{\"Runtime\": 0.0057710011800130205}',35,74),(530,19,2,'{\"Runtime\": 0.7461792627970377}',36,74),(531,19,2,'{\"Runtime\": 1.1039135456085205}',37,74),(532,19,2,'{\"Runtime\": \"failure\"}',29,74),(533,17,5,'{\"Runtime\": 4390.870627666666, \"TreeBuilding\": 43.76959766666667, \"ComputingNeighbors\": 4347.10103}',12,34),(534,19,2,'{\"Runtime\": 100.80982700983684}',38,74),(535,19,2,'{\"Runtime\": \"failure\"}',19,74),(536,19,2,'{\"Runtime\": 0.11193291346232097}',10,74),(537,19,2,'{\"Runtime\": 12.805334250132242}',11,74),(538,19,2,'{\"Runtime\": 0.2675475279490153}',39,74),(539,18,6,'{\"Runtime\": 274.31541109085083}',37,74),(540,19,2,'{\"Runtime\": 462.8162881533305}',5,74),(541,19,2,'{\"Runtime\": \"failure\"}',17,74),(542,19,2,'{\"Runtime\": 0.005964438120524089}',35,70),(543,19,2,'{\"Runtime\": 0.7484979629516602}',36,70),(544,19,2,'{\"Runtime\": 1.1436996459960938}',37,70),(545,19,2,'{\"Runtime\": \"failure\"}',29,70),(546,19,2,'{\"Runtime\": 100.86864344278972}',38,70),(547,19,2,'{\"Runtime\": \"failure\"}',19,70),(548,19,2,'{\"Runtime\": 0.11464238166809082}',10,70),(549,19,2,'{\"Runtime\": 12.805190324783325}',11,70),(550,19,2,'{\"Runtime\": 0.2798590660095215}',39,70),(551,16,1,'{\"Runtime\": 1973.5505080223083}',5,68),(552,19,2,'{\"Runtime\": 462.94365723927814}',5,70),(553,16,1,'{\"Runtime\": \"failure\"}',17,68),(554,17,5,'{\"Runtime\": 1229.4452933333332, \"TreeBuilding\": 10.472295333333333, \"ComputingNeighbors\": 1218.972998}',33,34),(555,19,2,'{\"Runtime\": \"failure\"}',17,70),(556,19,2,'{\"Runtime\": 0.08976443608601888, \"Precision\": 1, \"Recall\": 1, \"MSE\": 0, \"ACC\": 1, \"MCC\": 1}',1,31),(557,19,2,'{\"Runtime\": 0.1558054288228353, \"Precision\": 0.9870550161812298, \"Recall\": 0.6363636363636364, \"MSE\": 0.025641025641025644, \"ACC\": 0.6363636363636364, \"MCC\": 0.5154283388236321}',2,31),(558,19,2,'{\"Runtime\": 1.2672159671783447, \"Precision\": 0.9667919799498748, \"Recall\": 0.5350877192982456, \"MSE\": 0.06608478802992519, \"ACC\": 0.5350877192982456, \"MCC\": 0.25595832444484784}',3,31),(559,19,2,'{\"Runtime\": 10.071934938430786, \"Precision\": 0.9002441491146227, \"Recall\": 0.8437104876465161, \"MSE\": 0.013715172949193478, \"ACC\": 0.8437104876465161, \"MCC\": 0.7418035094817276}',4,31),(560,19,2,'{\"Runtime\": 3.620643695195516, \"Precision\": 0.9348540432712342, \"Recall\": 0.742241284169746, \"MSE\": 0.04732589457483647, \"ACC\": 0.7422412841697459, \"MCC\": 0.6491212579123568}',5,31),(561,19,2,'{\"Runtime\": 0.4807144006093343, \"Precision\": 0.9396093799672846, \"Recall\": 0.7203644950526605, \"MSE\": 0.01555793991416309, \"ACC\": 0.7203644950526606, \"MCC\": 0.622492727786932}',6,31),(562,19,2,'{\"Runtime\": 19.41056227684021, \"Precision\": 0.9915553809897878, \"Recall\": 0.6090909090909091, \"MSE\": 0.016810007818608287, \"ACC\": 0.609090909090909, \"MCC\": 0.4631380933618143}',7,31),(563,19,2,'{\"Runtime\": 0.19041887919108072, \"Precision\": 0.9971264367816092, \"Recall\": 0.5, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"MCC\": 0}',21,31),(564,19,2,'{\"Runtime\": 0.1767286459604899, \"Precision\": 0.9412036561569272, \"Recall\": 0.9052830188679245, \"MSE\": 0.025616698292220113, \"ACC\": 0.9052830188679245, \"MCC\": 0.8457241860153822}',22,31),(565,19,2,'{\"Runtime\": 0.27811717987060547, \"Precision\": 0.6464835977031099, \"Recall\": 0.5443798193687668, \"MSE\": 0.10632183908045977, \"ACC\": 0.5443798193687668, \"MCC\": 0.16125651126762125}',23,31),(566,19,2,'{\"Runtime\": 0.5036921501159668, \"Precision\": 0.9167722772277228, \"Recall\": 0.7474929680812034, \"MSE\": 0.05780885780885781, \"ACC\": 0.7474929680812034, \"MCC\": 0.6423338941860416}',24,31),(567,19,2,'{\"Runtime\": 0.08148384094238281, \"Precision\": 0.8450000000000001, \"Recall\": 0.7845360824742268, \"MSE\": 0.08035714285714286, \"ACC\": 0.7845360824742268, \"MCC\": 0.6266257206773698}',25,31),(568,19,2,'{\"Runtime\": 0.03304974238077799}',8,27),(569,19,2,'{\"Runtime\": 0.531247059504191}',9,27),(570,19,2,'{\"Runtime\": 0.7524940967559814}',10,27),(571,19,2,'{\"Runtime\": 0.9163757960001627}',11,27),(572,19,2,'{\"Runtime\": 0.0020840962727864585}',1,95),(573,19,2,'{\"Runtime\": 0.0022014776865641275}',43,95),(574,19,2,'{\"Runtime\": 0.015498479207356771}',11,95),(575,19,2,'{\"Runtime\": 0.04166396458943685, \"Precision\": 0.9871794871794872, \"Recall\": 0.9866666666666667, \"MSE\": 0.013333333333333334, \"ACC\": 0.9866666666666667, \"MCC\": 0.9802892811798277}',1,82),(576,19,2,'{\"Runtime\": 0.1184835433959961, \"Precision\": 0.982371794871795, \"Recall\": 0.5, \"MSE\": 0.035256410256410256, \"ACC\": 0.5, \"MCC\": 0}',2,82),(577,19,2,'{\"Runtime\": 0.4638887246449788, \"Precision\": 0.9644638403990026, \"Recall\": 0.5, \"MSE\": 0.07107231920199501, \"ACC\": 0.5, \"MCC\": 0}',3,82),(578,19,2,'{\"Runtime\": 24.66448458035787, \"Precision\": 0.9863031455236778, \"Recall\": 0.5310650887573964, \"MSE\": 0.027344086949020963, \"ACC\": 0.5310650887573964, \"MCC\": 0.24582148302127002}',4,82),(579,19,2,'{\"Runtime\": 5.321665048599243, \"Precision\": 0.9677941077295106, \"Recall\": 0.8695688989188223, \"MSE\": 0.024624855713736054, \"ACC\": 0.8695688989188223, \"MCC\": 0.8315819943079771}',5,82),(580,19,2,'{\"Runtime\": 0.3291776180267334, \"Precision\": 0.9026590538336053, \"Recall\": 0.7145508279368943, \"MSE\": 0.01689914163090129, \"ACC\": 0.7145508279368943, \"MCC\": 0.5878463519535916}',6,82),(581,19,2,'{\"Runtime\": 61.49551439285278, \"Precision\": 0.9892494136043783, \"Recall\": 0.5, \"MSE\": 0.021501172791243157, \"ACC\": 0.5, \"MCC\": 0}',7,82),(582,19,2,'{\"Runtime\": 0.03885650634765625, \"Precision\": 0.9971264367816092, \"Recall\": 0.5, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"MCC\": 0}',21,82),(583,19,2,'{\"Runtime\": 0.9775176843007406, \"Precision\": 0.8734804862444019, \"Recall\": 0.5489517819706499, \"MSE\": 0.0872865275142315, \"ACC\": 0.5489517819706499, \"MCC\": 0.2704258518184107}',22,82),(584,19,2,'{\"Runtime\": 0.1620603402455648, \"Precision\": 0.9500718390804598, \"Recall\": 0.5, \"MSE\": 0.09985632183908046, \"ACC\": 0.5, \"MCC\": 0}',23,82),(585,19,2,'{\"Runtime\": 5.136879364649455, \"Precision\": 0.9484848484848486, \"Recall\": 0.5, \"MSE\": 0.10303030303030303, \"ACC\": 0.5, \"MCC\": 0}',24,82),(586,19,2,'{\"Runtime\": 0.0024743874867757163, \"Precision\": 0.9330357142857143, \"Recall\": 0.5, \"MSE\": 0.13392857142857142, \"ACC\": 0.5, \"MCC\": 0}',25,82),(587,19,2,'{\"Runtime\": 0.002634127934773763, \"Precision\": 0.9667867146858743, \"Recall\": 0.9666666666666667, \"MSE\": 0.03333333333333333, \"ACC\": 0.9666666666666667, \"MCC\": 0.9500681414622171}',1,98),(588,19,2,'{\"Runtime\": 0.007832924524943033, \"Precision\": 0.48231511254019294, \"Recall\": 0.4983388704318937, \"MSE\": 0.038461538461538464, \"ACC\": 0.4983388704318938, \"MCC\": -0.010840090307394688}',2,98),(589,19,2,'{\"Runtime\": 0.8653942743937174, \"Precision\": 0.8011769651113912, \"Recall\": 0.5506181561285765, \"MSE\": 0.06733167082294264, \"ACC\": 0.5506181561285765, \"MCC\": 0.24694147195106161}',3,98),(590,19,2,'{\"Runtime\": 180.29922954241434, \"Precision\": 0.9533154422726966, \"Recall\": 0.7434608944348206, \"MSE\": 0.016130423531441385, \"ACC\": 0.7434608944348206, \"MCC\": 0.6644233079500657}',4,98),(591,19,2,'{\"Runtime\": 21.466552019119263, \"Precision\": 0.9352344376934539, \"Recall\": 0.9334472483436022, \"MSE\": 0.020392458637937667, \"ACC\": 0.9334472483436023, \"MCC\": 0.8686798475908203}',5,98),(592,19,2,'{\"Runtime\": 0.12243787447611491, \"Precision\": 0.8906862426644145, \"Recall\": 0.7613687397684964, \"MSE\": 0.01555793991416309, \"ACC\": 0.7613687397684964, \"MCC\": 0.6391030304734503}',6,98),(593,18,6,'{\"Runtime\": \">9000\"}',29,74),(594,19,2,'{\"Runtime\": 456.81410280863446, \"Precision\": 0.9917485265225934, \"Recall\": 0.6181818181818182, \"MSE\": 0.01641907740422205, \"ACC\": 0.6181818181818182, \"MCC\": 0.48214410689199605}',7,98),(595,19,2,'{\"Runtime\": 0.030642588933308918, \"Precision\": 0.9971264367816092, \"Recall\": 0.5, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"MCC\": 0}',21,98),(596,19,2,'{\"Runtime\": 0.0564265251159668, \"Precision\": 0.6809648548351888, \"Recall\": 0.569517819706499, \"MSE\": 0.09867172675521822, \"ACC\": 0.569517819706499, \"MCC\": 0.22432371387479666}',22,98),(597,19,2,'{\"Runtime\": 0.029610554377237957, \"Precision\": 0.6108427267847557, \"Recall\": 0.567581688838873, \"MSE\": 0.12212643678160921, \"ACC\": 0.567581688838873, \"MCC\": 0.17310041792693143}',23,98),(598,19,2,'{\"Runtime\": 0.35319972038269043, \"Precision\": 0.8547746764857411, \"Recall\": 0.8303778892014186, \"MSE\": 0.05641025641025641, \"ACC\": 0.8303778892014186, \"MCC\": 0.6847180697468859}',24,98),(599,19,2,'{\"Runtime\": 0.002603292465209961, \"Precision\": 0.8158508158508159, \"Recall\": 0.7793814432989691, \"MSE\": 0.08928571428571429, \"ACC\": 0.7793814432989693, \"MCC\": 0.5941139850215877}',25,98),(600,19,2,'{\"Runtime\": \"failure\"}',39,44),(601,19,2,'{\"Runtime\": \"failure\"}',39,43),(602,20,7,'{\"Runtime\": 0.036323}',13,89),(603,19,2,'{\"Runtime\": \"failure\"}',39,42),(604,20,7,'{\"Runtime\": 0.11097366666666668}',14,89),(605,19,2,'{\"Runtime\": 0.01314083735148112}',1,79),(606,19,2,'{\"Runtime\": 0.0018556912740071614}',13,79),(607,19,2,'{\"Runtime\": 0.0017802715301513672}',26,79),(608,19,2,'{\"Runtime\": 0.001978000005086263}',8,79),(609,19,2,'{\"Runtime\": 0.0025637944539388022}',27,79),(610,20,7,'{\"Runtime\": 0.9060943333333333}',13,89),(611,19,2,'{\"Runtime\": 0.005086183547973633}',28,79),(612,19,2,'{\"Runtime\": \"failure\"}',29,79),(613,19,2,'{\"Runtime\": 0.03212984402974447}',30,79),(614,19,2,'{\"Runtime\": 0.04474345842997233}',31,79),(615,19,2,'{\"Runtime\": 1.166969935099284}',32,79),(616,19,2,'{\"Runtime\": 0.6659398873647054}',10,79),(617,19,2,'{\"Runtime\": 3.4440227349599204}',11,79),(618,19,2,'{\"Runtime\": 0.516835610071818}',15,79),(619,19,2,'{\"Runtime\": 17.902846256891888}',5,79),(620,18,6,'{\"Runtime\": 467.51957575480145}',38,74),(621,19,2,'{\"Runtime\": 13.2362273534139}',17,79),(622,19,2,'{\"Runtime\": 1.1853276093800862}',20,79),(623,20,7,'{\"Runtime\": 257.793799}',5,89),(624,20,7,'{\"Runtime\": 29.29674233333333}',15,89),(625,20,7,'{\"Runtime\": 42.36406933333333}',17,89),(626,19,2,'{\"Runtime\": 261.3122416337331}',12,79),(627,19,2,'{\"Runtime\": 26.2463591893514}',33,79),(628,19,2,'{\"Runtime\": 90.35744738578796}',16,79),(629,19,2,'{\"Runtime\": 28.82811752955119}',34,79),(630,19,2,'{\"Runtime\": 0.0015803972880045574}',1,80),(631,19,2,'{\"Runtime\": 0.0018659432729085286}',13,80),(632,19,2,'{\"Runtime\": 0.001798073450724284}',26,80),(633,19,2,'{\"Runtime\": 0.002031087875366211}',8,80),(634,19,2,'{\"Runtime\": 0.002470811208089193}',27,80),(635,19,2,'{\"Runtime\": 0.0046122074127197266}',28,80),(636,19,2,'{\"Runtime\": \"failure\"}',29,80),(637,19,2,'{\"Runtime\": 0.027350902557373047}',30,80),(638,19,2,'{\"Runtime\": 0.04033478101094564}',31,80),(639,19,2,'{\"Runtime\": 0.9243597984313965}',32,80),(640,19,2,'{\"Runtime\": 0.5272944768269857}',10,80),(641,19,2,'{\"Runtime\": 2.7828359603881836}',11,80),(642,19,2,'{\"Runtime\": 0.4325602849324544}',15,80),(643,19,2,'{\"Runtime\": 13.986328919728598}',5,80),(644,19,2,'{\"Runtime\": 11.085170904795328}',17,80),(645,19,2,'{\"Runtime\": 1.085732062657674}',20,80),(646,19,2,'{\"Runtime\": 203.51831674575806}',12,80),(647,19,2,'{\"Runtime\": 21.415736357371014}',33,80),(648,19,2,'{\"Runtime\": 71.21747962633769}',16,80),(649,19,2,'{\"Runtime\": 23.230798959732056}',34,80),(650,19,2,'{\"Runtime\": 0.0015498002370198567}',1,81),(651,19,2,'{\"Runtime\": 0.0018326441446940105}',13,81),(652,19,2,'{\"Runtime\": 0.001774152119954427}',26,81),(653,19,2,'{\"Runtime\": 0.0019832452138264975}',8,81),(654,19,2,'{\"Runtime\": 0.0024346510569254556}',27,81),(655,19,2,'{\"Runtime\": 0.0045816898345947266}',28,81),(656,19,2,'{\"Runtime\": \"failure\"}',29,81),(657,19,2,'{\"Runtime\": 0.02726284662882487}',30,81),(658,19,2,'{\"Runtime\": 0.03960879643758138}',31,81),(659,19,2,'{\"Runtime\": 0.9242726961771647}',32,81),(660,19,2,'{\"Runtime\": 0.5162150065104166}',10,81),(661,19,2,'{\"Runtime\": 2.7838730812072754}',11,81),(662,19,2,'{\"Runtime\": 0.4314177831013997}',15,81),(663,19,2,'{\"Runtime\": 13.981659650802612}',5,81),(664,19,2,'{\"Runtime\": 11.083956559499105}',17,81),(665,19,2,'{\"Runtime\": 1.0700991948445637}',20,81),(666,19,2,'{\"Runtime\": 203.47593228022257}',12,81),(667,19,2,'{\"Runtime\": 21.349684476852417}',33,81),(668,19,2,'{\"Runtime\": 71.23730699221294}',16,81),(669,20,7,'{\"Runtime\": 1663.1264813333335}',20,89),(670,19,2,'{\"Runtime\": 23.17681296666463}',34,81),(671,19,2,'{\"Runtime\": 0.021259387334187824}',40,50),(672,19,2,'{\"Runtime\": 0.0015232563018798828}',13,53),(673,19,2,'{\"Runtime\": 0.0014663537343343098}',1,53),(674,19,2,'{\"Runtime\": \"failure\"}',20,47),(675,20,7,'{\"Runtime\": \"failure\"}',12,89),(676,19,2,'{\"Runtime\": 46.06476322809855}',12,51),(677,19,2,'{\"Runtime\": 0.7442945639292399}',15,51),(678,19,2,'{\"Runtime\": 6.613370418548584}',5,48),(679,19,2,'{\"Runtime\": 0.01018977165222168}',38,49),(680,19,2,'{\"Runtime\": 23.862895409266155}',17,46),(681,19,2,'{\"Runtime\": 0.05313428243001302}',13,46),(682,19,2,'{\"Runtime\": 0.010086377461751303}',14,52),(683,19,2,'{\"Runtime\": 0.02057361602783203}',8,94),(684,19,2,'{\"Runtime\": 0.0038650035858154297}',9,94),(685,19,2,'{\"Runtime\": 1.5316633383433025}',10,94),(686,19,2,'{\"Runtime\": 0.11312397321065266}',11,94),(687,19,2,'{\"Runtime\": \"failure\"}',27,92),(688,19,2,'{\"Runtime\": \"failure\"}',27,92),(689,19,2,'{\"Runtime\": \"failure\"}',1,92),(690,19,2,'{\"Runtime\": \"failure\"}',13,92),(691,19,2,'{\"Runtime\": \"failure\"}',44,92),(692,19,2,'{\"Runtime\": \"failure\"}',40,92),(693,19,2,'{\"Runtime\": \"failure\"}',42,92),(694,19,2,'{\"Runtime\": \"failure\"}',5,92),(695,19,2,'{\"Runtime\": \"failure\"}',19,92),(696,19,2,'{\"Runtime\": \"failure\"}',17,92),(697,19,2,'{\"Runtime\": 0.0023331642150878906, \"Precision\": 0.980125383486728, \"Recall\": 0.98, \"MSE\": 0.02, \"ACC\": 0.98, \"MCC\": 0.9700708921921396}',1,23),(698,19,2,'{\"Runtime\": 0.014698266983032227, \"Precision\": 0.802675585284281, \"Recall\": 0.8553307157958322, \"MSE\": 0.025641025641025644, \"ACC\": 0.8553307157958322, \"MCC\": 0.6558961270597227}',2,23),(699,19,2,'{\"Runtime\": 0.7414760589599609, \"Precision\": 0.6296272555366815, \"Recall\": 0.5952431414105734, \"MSE\": 0.08977556109725686, \"ACC\": 0.5952431414105734, \"MCC\": 0.22222607434542593}',3,23),(700,19,2,'{\"Runtime\": 9.959773540496826, \"Precision\": 0.873684252396246, \"Recall\": 0.8457361488253742, \"MSE\": 0.015354092987147417, \"ACC\": 0.8457361488253742, \"MCC\": 0.7188773311217073}',4,23),(701,19,2,'{\"Runtime\": 9.744211753209433, \"Precision\": 0.9085099459981962, \"Recall\": 0.9085099459981962, \"MSE\": 0.028472489419007308, \"ACC\": 0.9085099459981961, \"MCC\": 0.8170198919963921}',5,23),(702,19,2,'{\"Runtime\": 0.008010466893513998, \"Precision\": 0.7432618261826183, \"Recall\": 0.735774407116056, \"MSE\": 0.025482832618025753, \"ACC\": 0.735774407116056, \"MCC\": 0.47897771489778473}',6,23),(703,18,6,'{\"Runtime\": \">9000\"}',19,74),(704,18,6,'{\"Runtime\": 3.60239839553833}',10,74),(705,18,6,'{\"Runtime\": 37.10661665598551}',11,74),(706,18,6,'{\"Runtime\": 12.197309732437134}',39,74),(707,17,5,'{\"Runtime\": 6272.816191666666, \"TreeBuilding\": 1.8842679999999998, \"ComputingNeighbors\": 6270.931923666666}',16,34),(708,17,5,'{\"Runtime\": 0.00022266666666666667, \"TreeBuilding\": 2.4333333333333333e-05, \"ComputingNeighbors\": 0.00019833333333333335}',13,85),(709,17,5,'{\"Runtime\": 0.006500666666666668, \"TreeBuilding\": 0.0005636666666666666, \"ComputingNeighbors\": 0.0059370000000000004}',14,85),(710,17,5,'{\"Runtime\": 0.025191, \"TreeBuilding\": 0.0019140000000000001, \"ComputingNeighbors\": 0.023277000000000003}',13,85),(711,17,5,'{\"Runtime\": 19.217119, \"TreeBuilding\": 0.13470400000000002, \"ComputingNeighbors\": 19.082415}',5,85),(712,17,5,'{\"Runtime\": 8.080425333333332, \"TreeBuilding\": 0.170787, \"ComputingNeighbors\": 7.9096383333333335}',15,85),(713,17,5,'{\"Runtime\": 4.849812, \"TreeBuilding\": 0.652246, \"ComputingNeighbors\": 4.197566}',17,85),(714,17,5,'{\"Runtime\": 623.725455, \"TreeBuilding\": 2.1133580000000003, \"ComputingNeighbors\": 621.612097}',20,85),(715,20,7,'{\"Runtime\": \">9000\"}',33,89),(716,20,7,'{\"Runtime\": \"failure\"}',16,89),(717,18,6,'{\"Runtime\": 2000.765827735265}',5,74),(718,20,7,'{\"Runtime\": 32.913884333333336}',17,46),(719,20,7,'{\"Runtime\": 0.8556426666666667}',13,46),(720,18,6,'{\"Runtime\": \"failure\"}',17,74),(721,18,6,'{\"Runtime\": \"failure\"}',1,98),(722,18,6,'{\"Runtime\": \"failure\"}',2,98),(723,18,6,'{\"Runtime\": \"failure\"}',3,98),(724,18,6,'{\"Runtime\": \"failure\"}',4,98),(725,18,6,'{\"Runtime\": \"failure\"}',5,98),(726,18,6,'{\"Runtime\": \"failure\"}',6,98),(727,20,7,'{\"Runtime\": 37.39995566666666}',5,48),(728,20,7,'{\"Runtime\": 0.114855}',13,53),(729,20,7,'{\"Runtime\": 0.10506066666666665}',1,53),(730,20,7,'{\"Runtime\": 1.001449}',40,50),(731,20,7,'{\"Runtime\": 0.226202}',14,52),(732,18,6,'{\"Runtime\": \"failure\"}',7,98),(733,18,6,'{\"Runtime\": \"failure\"}',21,98),(734,18,6,'{\"Runtime\": \"failure\"}',22,98),(735,18,6,'{\"Runtime\": \"failure\"}',23,98),(736,18,6,'{\"Runtime\": \"failure\"}',24,98),(737,18,6,'{\"Runtime\": \"failure\"}',25,98),(738,18,6,'{}',8,29),(739,18,6,'{\"Runtime\": \"failure\"}',9,29),(740,18,6,'{\"Runtime\": \"failure\"}',12,29),(741,18,6,'{}',16,29),(742,18,6,'{}',18,29),(743,18,6,'{}',19,29),(744,18,6,'{\"Runtime\": \"failure\"}',11,29),(745,18,6,'{\"Runtime\": \"failure\"}',10,29),(746,18,6,'{\"Recall\": 0.5, \"MSE\": 0.035256410256410256, \"ACC\": 0.5, \"Precision\": 0.982371794871795, \"Runtime\": 0.02251267433166504, \"MCC\": 0}',2,62),(747,18,6,'{\"Recall\": 0.5, \"MSE\": 0.07107231920199501, \"ACC\": 0.5, \"Precision\": 0.9644638403990026, \"Runtime\": 1.0042355855305989, \"MCC\": 0}',3,62),(748,18,6,'{\"Recall\": 0.5, \"MSE\": 0.029155524885706895, \"ACC\": 0.5, \"Precision\": 0.9854222375571465, \"Runtime\": 3.715290069580078, \"MCC\": 0}',4,62),(749,18,6,'{\"Recall\": 0.5, \"MSE\": 0.0850327048864948, \"ACC\": 0.5, \"Precision\": 0.9574836475567525, \"Runtime\": 18.899454991022747, \"MCC\": 0}',5,62),(750,18,6,'{\"Recall\": 0.8322830196879482, \"MSE\": 0.17703862660944206, \"ACC\": 0.8322830196879482, \"Precision\": 0.5526749112956009, \"Runtime\": 0.0037736892700195312, \"MCC\": 0.264597646150506}',6,62),(751,19,2,'{\"Runtime\": 2603.408919493357, \"Precision\": 0.5097700275672572, \"Recall\": 0.6022300512112737, \"MSE\": 0.32603596559812353, \"ACC\": 0.6022300512112737, \"MCC\": 0.06320729130523672}',7,23),(752,19,2,'{\"Runtime\": 0.005684693654378255, \"Precision\": 0.49709724238026126, \"Recall\": 0.4949421965317919, \"MSE\": 0.015804597701149427, \"ACC\": 0.4949421965317919, \"MCC\": -0.007663309352096424}',21,23),(753,19,2,'{\"Runtime\": 0.022592465082804363, \"Precision\": 0.7554004832485846, \"Recall\": 0.5742348008385744, \"MSE\": 0.09013282732447818, \"ACC\": 0.5742348008385744, \"MCC\": 0.27538775577744434}',22,23),(754,19,2,'{\"Runtime\": 0.005963563919067383, \"Precision\": 0.9500718390804598, \"Recall\": 0.5, \"MSE\": 0.09985632183908046, \"ACC\": 0.5, \"MCC\": 0}',23,23),(755,19,2,'{\"Runtime\": 0.034552574157714844, \"Precision\": 0.9486940298507461, \"Recall\": 0.502262443438914, \"MSE\": 0.10256410256410257, \"ACC\": 0.502262443438914, \"MCC\": 0.0637226761495691}',24,23),(756,19,2,'{\"Runtime\": 0.0024333794911702475, \"Precision\": 0.7908163265306123, \"Recall\": 0.7742268041237113, \"MSE\": 0.09821428571428571, \"ACC\": 0.7742268041237114, \"MCC\": 0.56479954607449}',25,23),(757,19,2,'{\"Runtime\": 0.020485639572143555, \"Simple MSE\": 0.094876660341556}',22,58),(758,19,2,'{\"Runtime\": 1.9881091117858887, \"Simple MSE\": 0.012766324506167515}',4,58),(759,19,2,'{\"Runtime\": 0.002236604690551758, \"Simple MSE\": 0.09985632183908046}',23,60),(760,19,2,'{\"Runtime\": 0.00222627321879069, \"Simple MSE\": 0.005747126436781609}',21,60),(761,19,2,'{\"Runtime\": 0.0014796257019042969, \"Simple MSE\": 0.13392857142857142}',25,59),(762,19,2,'{\"Runtime\": 0.002723058064778646, \"Simple MSE\": 0.022800429184549355}',6,59),(763,19,2,'{}',1,97),(764,19,2,'{}',2,97),(765,19,2,'{}',3,97),(766,19,2,'{}',4,97),(767,19,2,'{}',5,97),(768,19,2,'{}',6,97),(769,19,2,'{}',7,97),(770,19,2,'{}',21,97),(771,19,2,'{}',22,97),(772,19,2,'{}',23,97),(773,19,2,'{}',24,97),(774,19,2,'{}',25,97),(775,19,2,'{\"Runtime\": 0.013896703720092773}',13,89),(776,19,2,'{\"Runtime\": 0.017868995666503906}',14,89),(777,19,2,'{\"Runtime\": 0.07928959528605144}',13,89),(778,19,2,'{\"Runtime\": 49.5780504544576}',5,89),(779,19,2,'{\"Runtime\": 57.26241246859232}',15,89),(780,19,2,'{\"Runtime\": 50.9106916586558}',17,89),(781,20,7,'{\"Runtime\": 1557.5396306666669}',12,51),(782,20,7,'{\"Runtime\": 18.871623}',15,51),(783,19,2,'{\"Runtime\": 1080.4420786698659}',20,89),(784,18,6,'{\"Runtime\": \">9000\"}',7,62),(785,18,6,'{\"Recall\": 0.7229046242774566, \"MSE\": 0.18031609195402298, \"ACC\": 0.7229046242774566, \"Precision\": 0.5085644782365781, \"Runtime\": 0.0019527276357014973, \"MCC\": 0.08738562361068085}',21,62),(786,18,6,'{\"Recall\": 0.5, \"MSE\": 0.094876660341556, \"ACC\": 0.5, \"Precision\": 0.9525616698292221, \"Runtime\": 0.007773558298746745, \"MCC\": 0}',22,62),(787,18,6,'{\"Recall\": 0.7521258332519937, \"MSE\": 0.3771551724137931, \"ACC\": 0.7521258332519937, \"Precision\": 0.5912400265957447, \"Runtime\": 0.0019227663675944011, \"MCC\": 0.30334117907983543}',23,62),(788,18,6,'{\"Recall\": 0.7853124617830499, \"MSE\": 0.3132867132867133, \"ACC\": 0.7853124617830499, \"Precision\": 0.6100795226463511, \"Runtime\": 0.012581189473470053, \"MCC\": 0.35444074031145706}',24,62),(789,18,6,'{\"Recall\": 0.5, \"MSE\": 0.13392857142857142, \"ACC\": 0.5, \"Precision\": 0.9330357142857143, \"Runtime\": 0.0003687540690104167, \"MCC\": 0}',25,62),(790,18,6,'{\"Runtime\": 0.024556716283162434}',1,79),(791,18,6,'{\"Runtime\": 0.0009558995564778646}',13,79),(792,18,6,'{\"Runtime\": 0.0008445580800374349}',26,79),(793,18,6,'{\"Runtime\": 0.0008935133616129557}',8,79),(794,18,6,'{\"Runtime\": \"failure\"}',27,79),(795,18,6,'{\"Runtime\": 0.0016146500905354817}',28,79),(796,18,6,'{\"Runtime\": 0.003903468449910482}',29,79),(797,18,6,'{\"Runtime\": 0.009057362874348959}',30,79),(798,18,6,'{\"Runtime\": 0.01669899622599284}',31,79),(799,17,5,'{\"Runtime\": 4393.946655, \"TreeBuilding\": 43.842248000000005, \"ComputingNeighbors\": 4350.104407}',12,85),(800,20,7,'{\"Runtime\": \">9000\"}',20,47),(801,20,7,'{\"Runtime\": 0.474061}',38,49),(802,20,7,'{\"Runtime\": 0.07874700000000001}',1,95),(803,20,7,'{\"Runtime\": 0.05891}',43,95),(804,20,7,'{\"Runtime\": 1.3749093333333333}',11,95),(805,20,7,'{\"Runtime\": 1.3549806666666664}',8,29),(806,20,7,'{\"Runtime\": 17.423620666666668}',9,29),(807,20,7,'{}',12,29),(808,20,7,'{}',16,29),(809,20,7,'{\"Runtime\": 6.705738}',18,29),(810,17,5,'{\"Runtime\": 1375.9726296666668, \"TreeBuilding\": 10.507348333333335, \"ComputingNeighbors\": 1365.4652813333335}',33,85),(811,19,2,'{\"Runtime\": \">9000\"}',12,89),(812,18,6,'{\"Runtime\": \">9000\"}',32,79),(813,18,6,'{\"Runtime\": \"failure\"}',10,79),(814,20,7,'{\"Runtime\": \">9000\"}',19,29),(815,20,7,'{\"Runtime\": 10.358494}',11,29),(816,20,7,'{\"Runtime\": 3.1805273333333335}',10,29),(817,20,7,'{\"Runtime\": 0.28137100000000004}',1,79),(818,20,7,'{\"Runtime\": 0.3278916666666667}',13,79),(819,20,7,'{\"Runtime\": 0.30798666666666663}',26,79),(820,20,7,'{\"Runtime\": 0.3201056666666666}',8,79),(821,20,7,'{\"Runtime\": 10.243632333333332}',27,79),(822,20,7,'{\"Runtime\": 0.42444466666666664}',28,79),(823,20,7,'{}',29,79),(824,20,7,'{\"Runtime\": 0.73659}',30,79),(825,20,7,'{\"Runtime\": 0.8886153333333334}',31,79),(826,20,7,'{\"Runtime\": 4.713231}',32,79),(827,20,7,'{\"Runtime\": \"failure\"}',10,79),(828,20,7,'{\"Runtime\": 11.186644000000001}',11,79),(829,20,7,'{\"Runtime\": 2.5970503333333332}',15,79),(830,20,7,'{\"Runtime\": 76.26212066666666}',5,79),(831,20,7,'{\"Runtime\": 45.234016999999994}',17,79),(832,20,7,'{\"Runtime\": 8.536932}',20,79),(833,20,7,'{\"Runtime\": \"failure\"}',12,79),(834,20,7,'{\"Runtime\": 87.82409966666667}',33,79),(835,20,7,'{\"Runtime\": 413.939859}',16,79),(836,20,7,'{\"Runtime\": 114.726093}',34,79),(837,20,7,'{\"Runtime\": 0.277092}',1,81),(838,20,7,'{\"Runtime\": 0.3284083333333333}',13,81),(839,20,7,'{\"Runtime\": 0.308978}',26,81),(840,20,7,'{\"Runtime\": 0.32462566666666665}',8,81),(841,20,7,'{\"Runtime\": 10.079823}',27,81),(842,20,7,'{\"Runtime\": 0.426466}',28,81),(843,20,7,'{}',29,81),(844,20,7,'{\"Runtime\": 0.7367076666666666}',30,81),(845,20,7,'{\"Runtime\": 0.8852160000000001}',31,81),(846,20,7,'{\"Runtime\": 4.693514666666666}',32,81),(847,20,7,'{\"Runtime\": \"failure\"}',10,81),(848,20,7,'{\"Runtime\": 11.253553000000002}',11,81),(849,20,7,'{\"Runtime\": 2.5836573333333335}',15,81),(850,20,7,'{\"Runtime\": 78.14792233333334}',5,81),(851,18,6,'{\"Runtime\": \">9000\"}',11,79),(852,18,6,'{\"Runtime\": 0.13399577140808105}',15,79),(853,20,7,'{\"Runtime\": 43.53112566666667}',17,81),(854,20,7,'{\"Runtime\": 8.931748666666666}',20,81),(855,19,2,'{\"Runtime\": 4278.439658641815}',33,89),(856,20,7,'{\"Runtime\": 1331.6417553333333}',12,81),(857,20,7,'{\"Runtime\": 87.92062233333333}',33,81),(858,20,7,'{\"Runtime\": 414.45068999999995}',16,81),(859,20,7,'{\"Runtime\": 110.79322066666664}',34,81),(860,20,7,'{\"Runtime\": 0.27479333333333333}',1,80),(861,20,7,'{\"Runtime\": 0.32379399999999997}',13,80),(862,20,7,'{\"Runtime\": 0.3083706666666666}',26,80),(863,20,7,'{\"Runtime\": 0.322276}',8,80),(864,20,7,'{\"Runtime\": 10.124869666666667}',27,80),(865,20,7,'{\"Runtime\": 0.4205726666666667}',28,80),(866,20,7,'{}',29,80),(867,20,7,'{\"Runtime\": 0.6906143333333333}',30,80),(868,20,7,'{\"Runtime\": 0.8262130000000001}',31,80),(869,20,7,'{\"Runtime\": 4.701926666666666}',32,80),(870,20,7,'{\"Runtime\": \"failure\"}',10,80),(871,20,7,'{\"Runtime\": 11.07566}',11,80),(872,20,7,'{\"Runtime\": 2.4397443333333335}',15,80),(873,20,7,'{\"Runtime\": 74.95867233333334}',5,80),(874,20,7,'{\"Runtime\": 43.72048800000001}',17,80),(875,20,7,'{\"Runtime\": 8.320889666666666}',20,80),(876,17,5,'{\"Runtime\": 6287.209281333333, \"TreeBuilding\": 1.887082333333333, \"ComputingNeighbors\": 6285.322198999999}',16,85),(877,17,5,'{\"Runtime\": 0.000219, \"TreeBuilding\": 2.4333333333333333e-05, \"ComputingNeighbors\": 0.00019466666666666666}',13,90),(878,17,5,'{\"Runtime\": 0.005965333333333334, \"TreeBuilding\": 0.0005473333333333333, \"ComputingNeighbors\": 0.005417999999999999}',14,90),(879,17,5,'{\"Runtime\": 0.022979666666666666, \"TreeBuilding\": 0.001914, \"ComputingNeighbors\": 0.021065666666666667}',13,90),(880,17,5,'{\"Runtime\": 16.78674433333333, \"TreeBuilding\": 0.134837, \"ComputingNeighbors\": 16.651907333333334}',5,90),(881,17,5,'{\"Runtime\": 5.682272333333334, \"TreeBuilding\": 0.17182466666666665, \"ComputingNeighbors\": 5.510447666666667}',15,90),(882,17,5,'{\"Runtime\": 4.393929666666666, \"TreeBuilding\": 0.6504873333333334, \"ComputingNeighbors\": 3.743442333333333}',17,90),(883,17,5,'{\"Runtime\": 400.22982366666673, \"TreeBuilding\": 2.1122143333333336, \"ComputingNeighbors\": 398.11760933333335}',20,90),(884,18,6,'{\"Runtime\": \">9000\"}',5,79),(885,18,6,'{\"Runtime\": 2.357703526814779}',17,79),(886,18,6,'{\"Runtime\": 0.4273112614949544}',20,79),(887,19,2,'{\"Runtime\": \">9000\"}',16,89),(888,19,2,'{\"Runtime\": 0.011295398076375326}',8,29),(889,19,2,'{\"Runtime\": 0.0809320608774821}',9,29),(890,20,7,'{\"Runtime\": 1361.8556343333332}',12,80),(891,19,2,'{\"Runtime\": 69.26565933227539}',12,29),(892,20,7,'{\"Runtime\": 85.62317266666666}',33,80),(893,19,2,'{\"Runtime\": 25.415215969085693}',16,29),(894,19,2,'{\"Runtime\": 0.08538556098937988}',18,29),(895,19,2,'{\"Runtime\": 0.544180711110433}',19,29),(896,19,2,'{\"Runtime\": 1.0001722971598308}',11,29),(897,19,2,'{\"Runtime\": 0.24559704462687174}',10,29),(898,19,2,'{\"Runtime\": 0.00983413060506185, \"Precision\": 1, \"Recall\": 1, \"MSE\": 0, \"ACC\": 1, \"MCC\": 1}',1,45),(899,19,2,'{\"Runtime\": 0.01639278729756673, \"Precision\": 0.6087383406971035, \"Recall\": 0.7006946541830262, \"MSE\": 0.07051282051282051, \"ACC\": 0.7006946541830262, \"MCC\": 0.29545357457740323}',2,45),(900,19,2,'{\"Runtime\": 0.7434527079264323, \"Precision\": 0.5529465930018417, \"Recall\": 0.5704109266454728, \"MSE\": 0.13591022443890274, \"ACC\": 0.5704109266454727, \"MCC\": 0.12211500605544547}',3,45),(901,19,2,'{\"Runtime\": 5.463202158610026, \"Precision\": 0.7844761667594411, \"Recall\": 0.8573437446604929, \"MSE\": 0.023462434227551107, \"ACC\": 0.8573437446604929, \"MCC\": 0.6376700673435486}',4,45),(902,19,2,'{\"Runtime\": 3.413055181503296, \"Precision\": 0.764320764844863, \"Recall\": 0.7379942078403464, \"MSE\": 0.07387456714120816, \"ACC\": 0.7379942078403464, \"MCC\": 0.5016246048391471}',5,45),(903,19,2,'{\"Runtime\": 0.04097517331441244, \"Precision\": 0.7973573477734494, \"Recall\": 0.7483651324843902, \"MSE\": 0.020922746781115876, \"ACC\": 0.7483651324843902, \"MCC\": 0.5435188941516556}',6,45),(904,19,2,'{\"Runtime\": 35.88310559590658, \"Precision\": 0.8947706623502331, \"Recall\": 0.8525478516689065, \"MSE\": 0.010164190774042221, \"ACC\": 0.8525478516689061, \"MCC\": 0.7461247855780851}',7,45),(905,19,2,'{\"Runtime\": 0.009733359018961588, \"Precision\": 0.5307915758896151, \"Recall\": 0.557442196531792, \"MSE\": 0.015086206896551725, \"ACC\": 0.5574421965317918, \"MCC\": 0.08411268046554826}',21,45),(906,19,2,'{\"Runtime\": 0.010816256205240885, \"Precision\": 0.8717392359594194, \"Recall\": 0.9013731656184486, \"MSE\": 0.04079696394686907, \"ACC\": 0.9013731656184487, \"MCC\": 0.7725442483679897}',22,45),(907,19,2,'{\"Runtime\": 0.01815946896870931, \"Precision\": 0.6020850040096231, \"Recall\": 0.6059816153461908, \"MSE\": 0.14511494252873564, \"ACC\": 0.6059816153461908, \"MCC\": 0.20803012885216612}',23,45),(908,19,2,'{\"Runtime\": 0.06367683410644531, \"Precision\": 0.735369989967993, \"Recall\": 0.7549223431576374, \"MSE\": 0.09836829836829837, \"ACC\": 0.7549223431576374, \"MCC\": 0.4899023141469343}',24,45),(909,19,2,'{\"Runtime\": 0.0015077590942382812, \"Precision\": 0.7228260869565218, \"Recall\": 0.781786941580756, \"MSE\": 0.13392857142857142, \"ACC\": 0.781786941580756, \"MCC\": 0.5011565884945975}',25,45),(910,19,2,'{\"Runtime\": 0.24648491541544595, \"Precision\": 0.8933706816059757, \"Recall\": 0.88, \"MSE\": 0.12, \"LFT\": 2.1999999999999997, \"ACC\": 0.88, \"MCC\": 0.82838215464777}',1,24),(911,19,2,'{\"Runtime\": 0.8149111270904541, \"Precision\": 0.546951263932396, \"Recall\": 0.6946541830262761, \"MSE\": 0.16666666666666666, \"LFT\": 0.8368034946108033, \"ACC\": 0.6946541830262761, \"MCC\": 0.19119895316461966}',2,24),(912,19,2,'{\"Runtime\": 8.188101291656494, \"Precision\": 0.5421459945618071, \"Recall\": 0.5806664311786177, \"MSE\": 0.1770573566084788, \"LFT\": 0.6818367171379962, \"ACC\": 0.5806664311786176, \"MCC\": 0.11661504139302807}',3,24),(913,20,7,'{\"Runtime\": 414.918042}',16,80),(914,20,7,'{\"Runtime\": 106.18361666666665}',34,80),(915,19,2,'{\"Runtime\": 177.24003537495932, \"Precision\": 0.87333279105431, \"Recall\": 0.8281623683359665, \"MSE\": 0.01604416458207539, \"LFT\": 0.8498615859182843, \"ACC\": 0.8281623683359663, \"MCC\": 0.700039350007866}',4,24),(916,19,2,'{\"Runtime\": 54.275554895401, \"Precision\": 0.9072224487022694, \"Recall\": 0.9105621287138131, \"MSE\": 0.028472489419007308, \"LFT\": 0.9960231365855222, \"ACC\": 0.9105621287138134, \"MCC\": 0.81777775807185}',5,24),(917,19,2,'{\"Runtime\": 4.04971170425415, \"Precision\": 0.7870372440061336, \"Recall\": 0.6860330015790922, \"MSE\": 0.022532188841201718, \"LFT\": 0.6974450586001787, \"ACC\": 0.6860330015790922, \"MCC\": 0.462161876694525}',6,24),(918,18,6,'{\"Runtime\": \">9000\"}',12,79),(919,19,2,'{\"Runtime\": 1459.2167449792225, \"Precision\": 0.9773738379814075, \"Recall\": 0.9177822976065085, \"MSE\": 0.004300234558248631, \"LFT\": 0.9353335128595414, \"ACC\": 0.9177822976065085, \"MCC\": 0.8931703954993351}',7,24),(920,19,2,'{\"Runtime\": 1.5737008253733318, \"Precision\": 0.9971264367816092, \"Recall\": 0.5, \"MSE\": 0.005747126436781609, \"LFT\": 0.5, \"ACC\": 0.5, \"MCC\": 0}',21,24),(921,19,2,'{\"Runtime\": 2.5317484537760415, \"Precision\": 0.8326107899807322, \"Recall\": 0.5579035639412998, \"MSE\": 0.0872865275142315, \"LFT\": 0.5665032335203564, \"ACC\": 0.5579035639412998, \"MCC\": 0.27755612149772924}',22,24),(922,19,2,'{\"Runtime\": 1.8202691872914631, \"Precision\": 0.571353328456474, \"Recall\": 0.5140009301417605, \"MSE\": 0.10919540229885057, \"LFT\": 0.523401093458179, \"ACC\": 0.5140009301417604, \"MCC\": 0.06321433277671083}',23,24),(923,19,2,'{\"Runtime\": 5.272080421447754, \"Precision\": 0.5810097169412758, \"Recall\": 0.6704628836981779, \"MSE\": 0.24988344988344988, \"LFT\": 0.9113706498939109, \"ACC\": 0.6704628836981777, \"MCC\": 0.2350246791924883}',24,24),(924,19,2,'{\"Runtime\": 0.11248087882995605, \"Precision\": 0.7843434343434343, \"Recall\": 0.8869415807560137, \"MSE\": 0.09821428571428571, \"LFT\": 1.1037495227185947, \"ACC\": 0.8869415807560138, \"MCC\": 0.6633982151391192}',25,24),(925,19,2,'{\"Runtime\": 0.08891661961873372, \"Precision\": 0.9604700854700855, \"Recall\": 0.96, \"MSE\": 0.04, \"ACC\": 0.96, \"MCC\": 0.9402672577997083}',1,1),(926,19,2,'{\"Runtime\": 0.21955132484436035, \"Precision\": 0.888599348534202, \"Recall\": 0.6801570522500754, \"MSE\": 0.025641025641025644, \"ACC\": 0.6801570522500754, \"MCC\": 0.5291839496365004}',2,1),(927,19,2,'{\"Runtime\": 3.713916858037313, \"Precision\": 0.597405652451524, \"Recall\": 0.568256210997292, \"MSE\": 0.09476309226932668, \"ACC\": 0.568256210997292, \"MCC\": 0.16307716904656033}',3,1),(928,19,2,'{\"Runtime\": 7.634323755900065, \"Precision\": 0.9207593016484704, \"Recall\": 0.7693328934674661, \"MSE\": 0.01604416458207539, \"ACC\": 0.7693328934674661, \"MCC\": 0.6732735555963355}',4,1),(929,19,2,'{\"Runtime\": 21.55769117673238, \"Precision\": 0.9046014062049911, \"Recall\": 0.8795187027389075, \"MSE\": 0.03270488649480569, \"ACC\": 0.8795187027389076, \"MCC\": 0.7837188291964307}',5,1),(930,19,2,'{\"Runtime\": 0.40647371610005695, \"Precision\": 0.8385737954703472, \"Recall\": 0.7652556246106595, \"MSE\": 0.017972103004291844, \"ACC\": 0.7652556246106595, \"MCC\": 0.5993616724292224}',6,1),(931,19,2,'{\"Runtime\": 139.57551741600037, \"Precision\": 0.99741653418124, \"Recall\": 0.8818181818181818, \"MSE\": 0.0050820953870211105, \"ACC\": 0.8818181818181818, \"MCC\": 0.8716023788113075}',7,1),(932,19,2,'{\"Runtime\": 0.236967404683431, \"Precision\": 0.622478386167147, \"Recall\": 0.5614161849710982, \"MSE\": 0.007183908045977012, \"ACC\": 0.5614161849710982, \"MCC\": 0.173460718548069}',21,1),(933,19,2,'{\"Runtime\": 0.21340099970499674, \"Precision\": 0.9019718865905477, \"Recall\": 0.905566037735849, \"MSE\": 0.03320683111954459, \"ACC\": 0.905566037735849, \"MCC\": 0.8075299259488347}',22,1),(934,19,2,'{\"Runtime\": 0.23708152770996094, \"Precision\": 0.6172438672438673, \"Recall\": 0.5055980754103819, \"MSE\": 0.10129310344827586, \"ACC\": 0.5055980754103819, \"MCC\": 0.05123826734915941}',23,1),(935,19,2,'{\"Runtime\": 0.6171261469523112, \"Precision\": 0.8020908540728785, \"Recall\": 0.767656230891525, \"MSE\": 0.07552447552447553, \"ACC\": 0.767656230891525, \"MCC\": 0.5687055455609639}',24,1),(936,19,2,'{\"Runtime\": 0.08712339401245117, \"Precision\": 0.7135416666666666, \"Recall\": 0.7254295532646048, \"MSE\": 0.13392857142857142, \"ACC\": 0.7254295532646049, \"MCC\": 0.438810221029756}',25,1),(937,19,2,'{\"Runtime\": 0.037589073181152344}',8,26),(938,19,2,'{\"Runtime\": 0.01410531997680664}',9,26),(939,19,2,'{\"Runtime\": 216.13257853190103}',19,26),(940,17,5,'{\"Runtime\": 4360.440029999999, \"TreeBuilding\": 43.83459833333333, \"ComputingNeighbors\": 4316.605431666667}',12,90),(941,17,5,'{\"Runtime\": 997.124686, \"TreeBuilding\": 10.484024, \"ComputingNeighbors\": 986.6406620000001}',33,90),(942,18,6,'{\"Runtime\": \">9000\"}',33,79),(943,21,2,'{\"Runtime\": 0.0013306935628255208, \"Simple MSE\": 0.13392857142857142}',25,59),(944,21,2,'{\"Runtime\": 0.0023900667826334634, \"Simple MSE\": 0.022800429184549355}',6,59),(945,21,2,'{\"Runtime\": 0.0021107991536458335, \"Simple MSE\": 0.09985632183908046}',23,60),(946,21,2,'{\"Runtime\": 0.002122163772583008, \"Simple MSE\": 0.005747126436781609}',21,60),(947,21,2,'{\"Runtime\": 0.005003134409586589, \"Simple MSE\": 0.094876660341556}',22,58),(948,21,2,'{\"Runtime\": 2.007060925165812, \"Simple MSE\": 0.012766324506167515}',4,58),(949,21,2,'{\"Recall\": 1, \"Runtime\": 0.0012315114339192708, \"Precision\": 1, \"MCC\": 1, \"MSE\": 0, \"ACC\": 1}',1,45),(950,21,2,'{\"Recall\": 0.7006946541830262, \"Runtime\": 0.01635289192199707, \"Precision\": 0.6087383406971035, \"MCC\": 0.29545357457740323, \"MSE\": 0.07051282051282051, \"ACC\": 0.7006946541830262}',2,45),(951,21,2,'{\"Recall\": 0.5704109266454728, \"Runtime\": 0.7416422367095947, \"Precision\": 0.5529465930018417, \"MCC\": 0.12211500605544547, \"MSE\": 0.13591022443890274, \"ACC\": 0.5704109266454727}',3,45),(952,21,2,'{\"Recall\": 0.8573437446604929, \"Runtime\": 5.470027446746826, \"Precision\": 0.7844761667594411, \"MCC\": 0.6376700673435486, \"MSE\": 0.023462434227551107, \"ACC\": 0.8573437446604929}',4,45),(953,21,2,'{\"Recall\": 0.7379942078403464, \"Runtime\": 3.415620485941569, \"Precision\": 0.764320764844863, \"MCC\": 0.5016246048391471, \"MSE\": 0.07387456714120816, \"ACC\": 0.7379942078403464}',5,45),(954,21,2,'{\"Recall\": 0.7483651324843902, \"Runtime\": 0.04104224840799967, \"Precision\": 0.7973573477734494, \"MCC\": 0.5435188941516556, \"MSE\": 0.020922746781115876, \"ACC\": 0.7483651324843902}',6,45),(955,21,2,'{\"Recall\": 0.8525478516689065, \"Runtime\": 35.86451474825541, \"Precision\": 0.8947706623502331, \"MCC\": 0.7461247855780851, \"MSE\": 0.010164190774042221, \"ACC\": 0.8525478516689061}',7,45),(956,21,2,'{\"Recall\": 0.557442196531792, \"Runtime\": 0.009787162144978842, \"Precision\": 0.5307915758896151, \"MCC\": 0.08411268046554826, \"MSE\": 0.015086206896551725, \"ACC\": 0.5574421965317918}',21,45),(957,21,2,'{}',22,45),(958,21,2,'{}',23,45),(959,21,2,'{}',24,45),(960,21,2,'{}',25,45),(961,21,2,'{\"Runtime\": \"failure\"}',39,42),(962,21,2,'{\"Runtime\": \"failure\"}',39,44),(963,21,2,'{\"Runtime\": \"failure\"}',39,43),(964,21,2,'{}',1,31),(965,21,2,'{}',2,31),(966,21,2,'{}',3,31),(967,21,2,'{}',4,31),(968,21,2,'{}',5,31),(969,21,2,'{}',6,31),(970,21,2,'{}',7,31),(971,21,2,'{}',21,31),(972,21,2,'{}',22,31),(973,21,2,'{}',23,31),(974,21,2,'{}',24,31),(975,21,2,'{}',25,31),(976,21,2,'{}',1,79),(977,21,2,'{}',13,79),(978,21,2,'{}',26,79),(979,21,2,'{}',8,79),(980,21,2,'{}',27,79),(981,21,2,'{}',28,79),(982,21,2,'{}',29,79),(983,21,2,'{}',30,79),(984,21,2,'{}',31,79),(985,21,2,'{}',32,79),(986,21,2,'{}',10,79),(987,21,2,'{}',11,79),(988,21,2,'{}',15,79),(989,21,2,'{}',5,79),(990,21,2,'{}',17,79),(991,21,2,'{}',20,79),(992,21,2,'{}',12,79),(993,21,2,'{}',33,79),(994,21,2,'{}',16,79),(995,21,2,'{}',34,79),(996,21,2,'{}',1,80),(997,21,2,'{}',13,80),(998,21,2,'{}',26,80),(999,21,2,'{}',8,80),(1000,21,2,'{}',27,80),(1001,21,2,'{}',28,80),(1002,21,2,'{}',29,80),(1003,21,2,'{}',30,80),(1004,21,2,'{}',31,80),(1005,21,2,'{}',32,80),(1006,21,2,'{}',10,80),(1007,21,2,'{}',11,80),(1008,21,2,'{}',15,80),(1009,21,2,'{}',5,80),(1010,21,2,'{}',17,80),(1011,21,2,'{}',20,80),(1012,21,2,'{}',12,80),(1013,21,2,'{}',33,80),(1014,21,2,'{}',16,80),(1015,21,2,'{}',34,80),(1016,21,2,'{}',1,81),(1017,21,2,'{}',13,81),(1018,21,2,'{}',26,81),(1019,21,2,'{}',8,81),(1020,21,2,'{}',27,81),(1021,21,2,'{}',28,81),(1022,21,2,'{}',29,81),(1023,21,2,'{}',30,81),(1024,21,2,'{}',31,81),(1025,21,2,'{}',32,81),(1026,21,2,'{}',10,81),(1027,21,2,'{}',11,81),(1028,21,2,'{}',15,81),(1029,21,2,'{}',5,81),(1030,21,2,'{}',17,81),(1031,21,2,'{}',20,81),(1032,21,2,'{}',12,81),(1033,21,2,'{}',33,81),(1034,21,2,'{}',16,81),(1035,21,2,'{}',34,81),(1036,21,2,'{}',8,94),(1037,21,2,'{}',9,94),(1038,21,2,'{}',10,94),(1039,21,2,'{}',11,94),(1040,21,2,'{}',1,24),(1041,21,2,'{}',2,24),(1042,21,2,'{}',3,24),(1043,21,2,'{}',4,24),(1044,21,2,'{}',5,24),(1045,21,2,'{}',6,24),(1046,21,2,'{}',7,24),(1047,21,2,'{}',21,24),(1048,21,2,'{}',22,24),(1049,21,2,'{}',23,24),(1050,21,2,'{}',24,24),(1051,21,2,'{}',25,24),(1052,21,2,'{}',8,29),(1053,21,2,'{}',9,29),(1054,21,2,'{}',12,29),(1055,21,2,'{}',16,29),(1056,21,2,'{}',18,29),(1057,21,2,'{}',19,29),(1058,21,2,'{}',11,29),(1059,21,2,'{}',10,29),(1060,21,2,'{}',27,92),(1061,21,2,'{}',27,92),(1062,21,2,'{}',1,92),(1063,21,2,'{}',13,92),(1064,21,2,'{}',44,92),(1065,21,2,'{}',40,92),(1066,21,2,'{}',42,92),(1067,21,2,'{}',5,92),(1068,21,2,'{}',19,92),(1069,21,2,'{}',17,92),(1070,21,2,'{}',8,26),(1071,21,2,'{}',9,26),(1072,21,2,'{}',19,26),(1073,21,2,'{}',1,98),(1074,21,2,'{}',2,98),(1075,21,2,'{}',3,98),(1076,21,2,'{}',4,98),(1077,21,2,'{}',5,98),(1078,21,2,'{}',6,98),(1079,21,2,'{}',7,98),(1080,21,2,'{}',21,98),(1081,21,2,'{}',22,98),(1082,21,2,'{}',23,98),(1083,21,2,'{}',24,98),(1084,21,2,'{}',25,98),(1085,21,2,'{}',1,1),(1086,21,2,'{}',2,1),(1087,21,2,'{}',3,1),(1088,21,2,'{}',4,1),(1089,21,2,'{}',5,1),(1090,21,2,'{}',6,1),(1091,21,2,'{}',7,1),(1092,21,2,'{}',21,1),(1093,21,2,'{}',22,1),(1094,21,2,'{}',23,1),(1095,21,2,'{}',24,1),(1096,21,2,'{}',25,1),(1097,21,2,'{}',13,89),(1098,21,2,'{}',14,89),(1099,21,2,'{}',13,89),(1100,21,2,'{}',5,89),(1101,21,2,'{}',15,89),(1102,21,2,'{}',17,89),(1103,21,2,'{}',20,89),(1104,21,2,'{}',12,89),(1105,21,2,'{}',33,89),(1106,21,2,'{}',16,89),(1107,21,2,'{}',14,52),(1108,21,2,'{}',17,46),(1109,21,2,'{}',13,46),(1110,21,2,'{}',12,51),(1111,21,2,'{}',15,51),(1112,21,2,'{}',40,50),(1113,21,2,'{}',20,47),(1114,21,2,'{}',5,48),(1115,21,2,'{}',13,53),(1116,21,2,'{}',1,53),(1117,21,2,'{}',38,49),(1118,21,2,'{}',35,70),(1119,21,2,'{}',36,70),(1120,21,2,'{}',37,70),(1121,21,2,'{}',29,70),(1122,21,2,'{}',38,70),(1123,21,2,'{}',19,70),(1124,21,2,'{}',10,70),(1125,21,2,'{}',11,70),(1126,21,2,'{}',39,70),(1127,21,2,'{}',5,70),(1128,21,2,'{}',17,70),(1129,21,2,'{}',35,63),(1130,21,2,'{}',36,63),(1131,21,2,'{}',37,63),(1132,21,2,'{}',29,63),(1133,21,2,'{}',38,63),(1134,21,2,'{}',19,63),(1135,21,2,'{}',10,63),(1136,21,2,'{}',11,63),(1137,21,2,'{}',39,63),(1138,21,2,'{}',5,63),(1139,21,2,'{}',17,63),(1140,21,2,'{}',35,74),(1141,21,2,'{}',36,74),(1142,21,2,'{}',37,74),(1143,21,2,'{}',29,74),(1144,21,2,'{}',38,74),(1145,21,2,'{}',19,74),(1146,21,2,'{}',10,74),(1147,21,2,'{}',11,74),(1148,21,2,'{}',39,74),(1149,21,2,'{}',5,74),(1150,21,2,'{}',17,74),(1151,21,2,'{}',1,97),(1152,21,2,'{}',2,97),(1153,21,2,'{}',3,97),(1154,21,2,'{}',4,97),(1155,21,2,'{}',5,97),(1156,21,2,'{}',6,97),(1157,21,2,'{}',7,97),(1158,21,2,'{}',21,97),(1159,21,2,'{}',22,97),(1160,21,2,'{}',23,97),(1161,21,2,'{}',24,97),(1162,21,2,'{}',25,97),(1163,21,2,'{}',1,82),(1164,21,2,'{}',2,82),(1165,21,2,'{}',3,82),(1166,21,2,'{}',4,82),(1167,21,2,'{}',5,82),(1168,21,2,'{}',6,82),(1169,21,2,'{}',7,82),(1170,21,2,'{}',21,82),(1171,21,2,'{}',22,82),(1172,21,2,'{}',23,82),(1173,21,2,'{}',24,82),(1174,21,2,'{}',25,82),(1175,21,2,'{}',1,62),(1176,21,2,'{}',2,62),(1177,21,2,'{}',3,62),(1178,21,2,'{}',4,62),(1179,21,2,'{}',5,62),(1180,21,2,'{}',6,62),(1181,21,2,'{}',7,62),(1182,21,2,'{}',21,62),(1183,21,2,'{}',22,62),(1184,21,2,'{}',23,62),(1185,21,2,'{}',24,62),(1186,21,2,'{}',25,62),(1187,21,2,'{}',1,23),(1188,21,2,'{}',2,23),(1189,21,2,'{}',3,23),(1190,21,2,'{}',4,23),(1191,21,2,'{}',5,23),(1192,21,2,'{}',6,23),(1193,21,2,'{}',7,23),(1194,21,2,'{}',21,23),(1195,21,2,'{}',22,23),(1196,21,2,'{}',23,23),(1197,21,2,'{}',24,23),(1198,21,2,'{}',25,23),(1199,21,2,'{}',1,95),(1200,21,2,'{}',43,95),(1201,21,2,'{}',11,95),(1202,21,2,'{}',8,27),(1203,21,2,'{}',9,27),(1204,21,2,'{}',10,27),(1205,21,2,'{}',11,27),(1206,21,2,'{}',28,20),(1207,21,2,'{}',41,20),(1208,21,2,'{}',42,20),(1209,21,2,'{}',38,20),(1210,21,2,'{}',19,20),(1211,21,2,'{}',39,20),(1212,21,2,'{}',5,20),(1213,21,2,'{}',12,20),(1214,21,2,'{}',16,20),(1215,21,2,'{}',34,20),(1216,18,6,'{\"Runtime\": \">9000\"}',16,79),(1217,18,6,'{}',34,79),(1218,18,6,'{}',1,81),(1219,18,6,'{}',13,81),(1220,18,6,'{}',26,81),(1221,18,6,'{}',8,81),(1222,18,6,'{}',27,81),(1223,18,6,'{}',28,81),(1224,18,6,'{}',29,81),(1225,18,6,'{}',30,81),(1226,18,6,'{}',31,81),(1227,18,6,'{}',32,81),(1228,18,6,'{}',10,81),(1229,18,6,'{}',11,81),(1230,18,6,'{}',15,81),(1231,18,6,'{}',5,81),(1232,18,6,'{}',17,81),(1233,18,6,'{}',20,81),(1234,18,6,'{}',12,81),(1235,18,6,'{}',33,81),(1236,18,6,'{}',16,81),(1237,18,6,'{}',34,81),(1238,18,6,'{}',1,80),(1239,18,6,'{}',13,80),(1240,18,6,'{}',26,80),(1241,18,6,'{}',8,80),(1242,18,6,'{}',27,80),(1243,18,6,'{}',28,80),(1244,18,6,'{}',29,80),(1245,18,6,'{}',30,80),(1246,18,6,'{}',31,80),(1247,18,6,'{}',32,80),(1248,18,6,'{}',10,80),(1249,18,6,'{}',11,80),(1250,18,6,'{}',15,80),(1251,18,6,'{}',5,80),(1252,18,6,'{}',17,80),(1253,18,6,'{}',20,80),(1254,18,6,'{}',12,80),(1255,18,6,'{}',33,80),(1256,18,6,'{}',16,80),(1257,18,6,'{}',34,80),(1258,18,6,'{}',27,92),(1259,18,6,'{}',27,92),(1260,18,6,'{}',1,92),(1261,18,6,'{}',13,92),(1262,18,6,'{}',44,92),(1263,18,6,'{}',40,92),(1264,18,6,'{}',42,92),(1265,18,6,'{}',5,92),(1266,18,6,'{}',19,92),(1267,18,6,'{}',17,92),(1268,18,6,'{}',1,95),(1269,18,6,'{}',43,95),(1270,18,6,'{}',11,95),(1271,18,6,'{}',20,47),(1272,18,6,'{}',13,53),(1273,18,6,'{}',1,53),(1274,18,6,'{}',38,49),(1275,18,6,'{}',14,52),(1276,18,6,'{}',12,51),(1277,18,6,'{}',15,51),(1278,18,6,'{}',5,48),(1279,18,6,'{}',17,46),(1280,18,6,'{}',13,46),(1281,18,6,'{}',40,50),(1282,18,6,'{}',8,94),(1283,18,6,'{}',9,94),(1284,18,6,'{}',10,94),(1285,18,6,'{}',11,94),(1286,18,6,'{}',13,89),(1287,18,6,'{}',14,89),(1288,18,6,'{}',13,89),(1289,18,6,'{}',5,89),(1290,18,6,'{}',15,89),(1291,18,6,'{}',17,89),(1292,18,6,'{}',20,89),(1293,18,6,'{}',12,89),(1294,18,6,'{}',33,89),(1295,18,6,'{}',16,89),(1296,18,6,'{}',1,24),(1297,18,6,'{}',42,24),(1298,18,6,'{}',11,24),(1299,18,6,'{}',10,24),(1300,18,6,'{}',25,59),(1301,18,6,'{}',6,59),(1302,18,6,'{}',23,60),(1303,18,6,'{}',21,60),(1304,18,6,'{}',22,58),(1305,18,6,'{}',4,58),(1306,22,2,'{\"Runtime\": \"failure\"}',28,20),(1307,22,2,'{\"Runtime\": 0.4551205635070801}',41,20),(1308,22,2,'{\"Runtime\": 6.746853272120158}',42,20),(1309,22,2,'{\"Runtime\": \"failure\"}',38,20),(1310,23,5,'{\"ComputingNeighbors\": 0.000197, \"TreeBuilding\": 2.5333333333333334e-05, \"Runtime\": 0.0002223333333333333}',13,104),(1311,23,5,'{\"ComputingNeighbors\": 0.005378666666666667, \"TreeBuilding\": 0.0005436666666666667, \"Runtime\": 0.005922333333333334}',14,104),(1312,23,5,'{\"ComputingNeighbors\": 0.02089566666666667, \"TreeBuilding\": 0.0019379999999999998, \"Runtime\": 0.02283366666666667}',13,104),(1313,23,5,'{\"ComputingNeighbors\": 19.21359, \"TreeBuilding\": 0.13655799999999998, \"Runtime\": 19.350148}',5,104),(1314,23,5,'{\"ComputingNeighbors\": 6.130188999999999, \"TreeBuilding\": 0.182997, \"Runtime\": 6.313185999999999}',15,104),(1315,23,5,'{\"ComputingNeighbors\": 4.301729666666667, \"TreeBuilding\": 0.6931246666666667, \"Runtime\": 4.9948543333333335}',17,104),(1316,24,6,'{\"Runtime\": \"failure\"}',1,24),(1317,24,6,'{\"Runtime\": \"failure\"}',42,24),(1318,24,6,'{\"Runtime\": \"failure\"}',11,24),(1319,24,6,'{\"Runtime\": \"failure\"}',10,24),(1320,24,6,'{\"Runtime\": 0.019902388254801433}',35,63),(1321,24,6,'{\"Runtime\": 1.1305083433787029}',36,63),(1322,23,5,'{\"ComputingNeighbors\": 373.3355403333333, \"TreeBuilding\": 2.254455, \"Runtime\": 375.5899953333333}',20,104),(1323,22,2,'{\"Runtime\": 717.0550474325815}',19,20),(1324,22,2,'{\"Runtime\": 8.085204203923544}',39,20),(1325,22,2,'{\"Runtime\": \"failure\"}',5,20),(1326,24,6,'{\"Runtime\": 255.43188174565634}',37,63),(1327,22,2,'{\"Runtime\": 930.6513442993164}',12,20),(1328,17,5,'{\"Runtime\": 6456.0768259999995, \"TreeBuilding\": 1.8877596666666665, \"ComputingNeighbors\": 6454.189066333333}',16,90),(1329,17,5,'{\"Runtime\": 0.00022433333333333333, \"TreeBuilding\": 2.9e-05, \"ComputingNeighbors\": 0.0001953333333333333}',13,100),(1330,17,5,'{\"Runtime\": 0.005799333333333334, \"TreeBuilding\": 0.0005513333333333333, \"ComputingNeighbors\": 0.005248}',14,100),(1331,17,5,'{\"Runtime\": 0.022457, \"TreeBuilding\": 0.001955, \"ComputingNeighbors\": 0.020502}',13,100),(1332,17,5,'{\"Runtime\": 19.180256333333336, \"TreeBuilding\": 0.13763033333333333, \"ComputingNeighbors\": 19.042626000000002}',5,100),(1333,17,5,'{\"Runtime\": 6.0322450000000005, \"TreeBuilding\": 0.18858566666666668, \"ComputingNeighbors\": 5.843659333333332}',15,100),(1334,17,5,'{\"Runtime\": 5.023525666666667, \"TreeBuilding\": 0.7029833333333334, \"ComputingNeighbors\": 4.320542333333333}',17,100),(1335,17,5,'{\"Runtime\": 336.39132166666667, \"TreeBuilding\": 2.305365, \"ComputingNeighbors\": 334.0859566666667}',20,100),(1336,22,2,'{\"Runtime\": 1763.0869510968525}',16,20),(1337,22,2,'{}',34,20),(1338,22,2,'{}',1,1),(1339,22,2,'{}',2,1),(1340,22,2,'{}',3,1),(1341,22,2,'{}',4,1),(1342,22,2,'{}',5,1),(1343,22,2,'{}',6,1),(1344,22,2,'{}',7,1),(1345,22,2,'{}',21,1),(1346,22,2,'{}',22,1),(1347,22,2,'{}',23,1),(1348,22,2,'{}',24,1),(1349,22,2,'{}',25,1),(1350,22,2,'{}',1,97),(1351,22,2,'{}',2,97),(1352,22,2,'{}',3,97),(1353,22,2,'{}',4,97),(1354,22,2,'{}',5,97),(1355,22,2,'{}',6,97),(1356,22,2,'{}',7,97),(1357,22,2,'{}',21,97),(1358,22,2,'{}',22,97),(1359,22,2,'{}',23,97),(1360,22,2,'{}',24,97),(1361,22,2,'{}',25,97),(1362,22,2,'{}',1,79),(1363,22,2,'{}',13,79),(1364,22,2,'{}',26,79),(1365,22,2,'{}',8,79),(1366,22,2,'{}',27,79),(1367,22,2,'{}',28,79),(1368,22,2,'{}',29,79),(1369,22,2,'{}',30,79),(1370,22,2,'{}',31,79),(1371,22,2,'{}',32,79),(1372,22,2,'{}',10,79),(1373,22,2,'{}',11,79),(1374,22,2,'{}',15,79),(1375,22,2,'{}',5,79),(1376,22,2,'{}',17,79),(1377,22,2,'{}',20,79),(1378,22,2,'{}',12,79),(1379,22,2,'{}',33,79),(1380,22,2,'{}',16,79),(1381,22,2,'{}',34,79),(1382,22,2,'{}',1,81),(1383,22,2,'{}',13,81),(1384,22,2,'{}',26,81),(1385,22,2,'{}',8,81),(1386,22,2,'{}',27,81),(1387,22,2,'{}',28,81),(1388,22,2,'{}',29,81),(1389,22,2,'{}',30,81),(1390,22,2,'{}',31,81),(1391,22,2,'{}',32,81),(1392,22,2,'{}',10,81),(1393,22,2,'{}',11,81),(1394,22,2,'{}',15,81),(1395,22,2,'{}',5,81),(1396,22,2,'{}',17,81),(1397,22,2,'{}',20,81),(1398,22,2,'{}',12,81),(1399,22,2,'{}',33,81),(1400,22,2,'{}',16,81),(1401,22,2,'{}',34,81),(1402,22,2,'{}',1,80),(1403,22,2,'{}',13,80),(1404,22,2,'{}',26,80),(1405,22,2,'{}',8,80),(1406,22,2,'{}',27,80),(1407,22,2,'{}',28,80),(1408,22,2,'{}',29,80),(1409,22,2,'{}',30,80),(1410,22,2,'{}',31,80),(1411,22,2,'{}',32,80),(1412,22,2,'{}',10,80),(1413,22,2,'{}',11,80),(1414,22,2,'{}',15,80),(1415,22,2,'{}',5,80),(1416,22,2,'{}',17,80),(1417,22,2,'{}',20,80),(1418,22,2,'{}',12,80),(1419,22,2,'{}',33,80),(1420,22,2,'{}',16,80),(1421,22,2,'{}',34,80),(1422,22,2,'{}',1,62),(1423,22,2,'{}',2,62),(1424,22,2,'{}',3,62),(1425,22,2,'{}',4,62),(1426,22,2,'{}',5,62),(1427,22,2,'{}',6,62),(1428,22,2,'{}',7,62),(1429,22,2,'{}',21,62),(1430,22,2,'{}',22,62),(1431,22,2,'{}',23,62),(1432,22,2,'{}',24,62),(1433,22,2,'{}',25,62),(1434,22,2,'{\"Runtime\": \"failure\"}',39,42),(1435,22,2,'{\"Runtime\": \"failure\"}',39,44),(1436,22,2,'{\"Runtime\": \"failure\"}',39,43),(1437,22,2,'{}',8,94),(1438,22,2,'{}',9,94),(1439,22,2,'{}',10,94),(1440,22,2,'{}',11,94),(1441,22,2,'{}',8,27),(1442,22,2,'{}',9,27),(1443,22,2,'{}',10,27),(1444,22,2,'{}',11,27),(1445,22,2,'{}',27,92),(1446,22,2,'{}',27,92),(1447,22,2,'{}',1,92),(1448,22,2,'{}',13,92),(1449,22,2,'{}',44,92),(1450,22,2,'{}',40,92),(1451,22,2,'{}',42,92),(1452,22,2,'{}',5,92),(1453,22,2,'{}',19,92),(1454,22,2,'{}',17,92),(1455,22,2,'{}',1,45),(1456,22,2,'{}',2,45),(1457,22,2,'{}',3,45),(1458,22,2,'{}',4,45),(1459,22,2,'{}',5,45),(1460,22,2,'{}',6,45),(1461,22,2,'{}',7,45),(1462,22,2,'{}',21,45),(1463,22,2,'{}',22,45),(1464,22,2,'{}',23,45),(1465,22,2,'{}',24,45),(1466,22,2,'{}',25,45),(1467,22,2,'{}',8,29),(1468,22,2,'{}',9,29),(1469,22,2,'{}',12,29),(1470,22,2,'{}',16,29),(1471,22,2,'{}',18,29),(1472,22,2,'{}',19,29),(1473,22,2,'{}',11,29),(1474,22,2,'{}',10,29),(1475,22,2,'{}',1,24),(1476,22,2,'{}',2,24),(1477,22,2,'{}',3,24),(1478,22,2,'{}',4,24),(1479,22,2,'{}',5,24),(1480,22,2,'{}',6,24),(1481,22,2,'{}',7,24),(1482,22,2,'{}',21,24),(1483,22,2,'{}',22,24),(1484,22,2,'{}',23,24),(1485,22,2,'{}',24,24),(1486,22,2,'{}',25,24),(1487,22,2,'{}',1,95),(1488,22,2,'{}',43,95),(1489,22,2,'{}',11,95),(1490,22,2,'{}',1,98),(1491,22,2,'{}',2,98),(1492,22,2,'{}',3,98),(1493,22,2,'{}',4,98),(1494,22,2,'{}',5,98),(1495,22,2,'{}',6,98),(1496,22,2,'{}',7,98),(1497,22,2,'{}',21,98),(1498,22,2,'{}',22,98),(1499,22,2,'{}',23,98),(1500,22,2,'{}',24,98),(1501,22,2,'{}',25,98),(1502,22,2,'{}',1,23),(1503,22,2,'{}',2,23),(1504,22,2,'{}',3,23),(1505,22,2,'{}',4,23),(1506,22,2,'{}',5,23),(1507,22,2,'{}',6,23),(1508,22,2,'{}',7,23),(1509,22,2,'{}',21,23),(1510,22,2,'{}',22,23),(1511,22,2,'{}',23,23),(1512,22,2,'{}',24,23),(1513,22,2,'{}',25,23),(1514,22,2,'{}',40,50),(1515,22,2,'{}',14,52),(1516,22,2,'{}',5,48),(1517,22,2,'{}',17,46),(1518,22,2,'{}',13,46),(1519,22,2,'{}',38,49),(1520,22,2,'{}',12,51),(1521,22,2,'{}',15,51),(1522,22,2,'{}',20,47),(1523,22,2,'{}',13,53),(1524,22,2,'{}',1,53),(1525,22,2,'{}',8,26),(1526,22,2,'{}',9,26),(1527,22,2,'{}',19,26),(1528,22,2,'{}',22,58),(1529,22,2,'{}',4,58),(1530,22,2,'{}',23,60),(1531,22,2,'{}',21,60),(1532,22,2,'{}',25,59),(1533,22,2,'{}',6,59),(1534,22,2,'{}',35,63),(1535,22,2,'{}',36,63),(1536,22,2,'{}',37,63),(1537,22,2,'{}',29,63),(1538,22,2,'{}',38,63),(1539,22,2,'{}',19,63),(1540,22,2,'{}',10,63),(1541,22,2,'{}',11,63),(1542,22,2,'{}',39,63),(1543,22,2,'{}',5,63),(1544,22,2,'{}',17,63),(1545,22,2,'{}',35,70),(1546,22,2,'{}',36,70),(1547,22,2,'{}',37,70),(1548,22,2,'{}',29,70),(1549,22,2,'{}',38,70),(1550,22,2,'{}',19,70),(1551,22,2,'{}',10,70),(1552,22,2,'{}',11,70),(1553,22,2,'{}',39,70),(1554,22,2,'{}',5,70),(1555,22,2,'{}',17,70),(1556,22,2,'{}',35,74),(1557,22,2,'{}',36,74),(1558,22,2,'{}',37,74),(1559,22,2,'{}',29,74),(1560,22,2,'{}',38,74),(1561,22,2,'{}',19,74),(1562,22,2,'{}',10,74),(1563,22,2,'{}',11,74),(1564,22,2,'{}',39,74),(1565,22,2,'{}',5,74),(1566,22,2,'{}',17,74),(1567,22,2,'{}',1,82),(1568,22,2,'{}',2,82),(1569,22,2,'{}',3,82),(1570,22,2,'{}',4,82),(1571,22,2,'{}',5,82),(1572,22,2,'{}',6,82),(1573,22,2,'{}',7,82),(1574,22,2,'{}',21,82),(1575,22,2,'{}',22,82),(1576,22,2,'{}',23,82),(1577,22,2,'{}',24,82),(1578,22,2,'{}',25,82),(1579,22,2,'{}',1,31),(1580,22,2,'{}',2,31),(1581,22,2,'{}',3,31),(1582,22,2,'{}',4,31),(1583,22,2,'{}',5,31),(1584,22,2,'{}',6,31),(1585,22,2,'{}',7,31),(1586,22,2,'{}',21,31),(1587,22,2,'{}',22,31),(1588,22,2,'{}',23,31),(1589,22,2,'{}',24,31),(1590,22,2,'{}',25,31),(1591,22,2,'{}',13,89),(1592,22,2,'{}',14,89),(1593,22,2,'{}',13,89),(1594,22,2,'{}',5,89),(1595,22,2,'{}',15,89),(1596,22,2,'{}',17,89),(1597,22,2,'{}',20,89),(1598,22,2,'{}',12,89),(1599,22,2,'{}',33,89),(1600,22,2,'{}',16,89),(1601,24,6,'{\"Runtime\": \">9000\"}',29,63),(1602,24,6,'{}',38,63),(1603,24,6,'{}',19,63),(1604,24,6,'{}',10,63),(1605,24,6,'{}',11,63),(1606,24,6,'{}',39,63),(1607,24,6,'{}',5,63),(1608,24,6,'{}',17,63),(1609,24,6,'{}',35,68),(1610,24,6,'{}',36,68),(1611,24,6,'{}',37,68),(1612,24,6,'{}',29,68),(1613,24,6,'{}',38,68),(1614,24,6,'{}',19,68),(1615,24,6,'{}',10,68),(1616,24,6,'{}',11,68),(1617,24,6,'{}',39,68),(1618,24,6,'{}',5,68),(1619,24,6,'{}',17,68),(1620,24,6,'{}',35,74),(1621,24,6,'{}',36,74),(1622,24,6,'{}',37,74),(1623,24,6,'{}',29,74),(1624,24,6,'{}',38,74),(1625,24,6,'{}',19,74),(1626,24,6,'{}',10,74),(1627,24,6,'{}',11,74),(1628,24,6,'{}',39,74),(1629,24,6,'{}',5,74),(1630,24,6,'{}',17,74),(1631,24,6,'{}',35,70),(1632,24,6,'{}',36,70),(1633,24,6,'{}',37,70),(1634,24,6,'{}',29,70),(1635,24,6,'{}',38,70),(1636,24,6,'{}',19,70),(1637,24,6,'{}',10,70),(1638,24,6,'{}',11,70),(1639,24,6,'{}',39,70),(1640,24,6,'{}',5,70),(1641,24,6,'{}',17,70),(1642,24,6,'{}',27,92),(1643,24,6,'{}',27,92),(1644,24,6,'{}',1,92),(1645,24,6,'{}',13,92),(1646,24,6,'{}',44,92),(1647,24,6,'{}',40,92),(1648,24,6,'{}',42,92),(1649,24,6,'{}',5,92),(1650,24,6,'{}',19,92),(1651,24,6,'{}',17,92),(1652,24,6,'{}',13,89),(1653,24,6,'{}',14,89),(1654,24,6,'{}',13,89),(1655,24,6,'{}',5,89),(1656,24,6,'{}',15,89),(1657,24,6,'{}',17,89),(1658,24,6,'{}',20,89),(1659,24,6,'{}',12,89),(1660,24,6,'{}',33,89),(1661,24,6,'{}',16,89),(1662,24,6,'{}',1,98),(1663,24,6,'{}',2,98),(1664,24,6,'{}',3,98),(1665,24,6,'{}',4,98),(1666,24,6,'{}',5,98),(1667,24,6,'{}',6,98),(1668,24,6,'{}',7,98),(1669,24,6,'{}',21,98),(1670,24,6,'{}',22,98),(1671,24,6,'{}',23,98),(1672,24,6,'{}',24,98),(1673,24,6,'{}',25,98),(1674,24,6,'{}',8,94),(1675,24,6,'{}',9,94),(1676,24,6,'{}',10,94),(1677,24,6,'{}',11,94),(1678,24,6,'{}',8,26),(1679,24,6,'{}',9,26),(1680,24,6,'{}',19,26),(1681,24,6,'{}',1,79),(1682,24,6,'{}',13,79),(1683,24,6,'{}',26,79),(1684,24,6,'{}',8,79),(1685,24,6,'{}',27,79),(1686,24,6,'{}',28,79),(1687,24,6,'{}',29,79),(1688,24,6,'{}',30,79),(1689,24,6,'{}',31,79),(1690,24,6,'{}',32,79),(1691,24,6,'{}',10,79),(1692,24,6,'{}',11,79),(1693,24,6,'{}',15,79),(1694,24,6,'{}',5,79),(1695,24,6,'{}',17,79),(1696,24,6,'{}',20,79),(1697,24,6,'{}',12,79),(1698,24,6,'{}',33,79),(1699,24,6,'{}',16,79),(1700,24,6,'{}',34,79),(1701,24,6,'{}',1,81),(1702,24,6,'{}',13,81),(1703,24,6,'{}',26,81),(1704,24,6,'{}',8,81),(1705,24,6,'{}',27,81),(1706,24,6,'{}',28,81),(1707,24,6,'{}',29,81),(1708,24,6,'{}',30,81),(1709,24,6,'{}',31,81),(1710,24,6,'{}',32,81),(1711,24,6,'{}',10,81),(1712,24,6,'{}',11,81),(1713,24,6,'{}',15,81),(1714,24,6,'{}',5,81),(1715,24,6,'{}',17,81),(1716,24,6,'{}',20,81),(1717,24,6,'{}',12,81),(1718,24,6,'{}',33,81),(1719,24,6,'{}',16,81),(1720,24,6,'{}',34,81),(1721,24,6,'{}',1,80),(1722,24,6,'{}',13,80),(1723,24,6,'{}',26,80),(1724,24,6,'{}',8,80),(1725,24,6,'{}',27,80),(1726,24,6,'{}',28,80),(1727,24,6,'{}',29,80),(1728,24,6,'{}',30,80),(1729,24,6,'{}',31,80),(1730,24,6,'{}',32,80),(1731,24,6,'{}',10,80),(1732,24,6,'{}',11,80),(1733,24,6,'{}',15,80),(1734,24,6,'{}',5,80),(1735,24,6,'{}',17,80),(1736,24,6,'{}',20,80),(1737,24,6,'{}',12,80),(1738,24,6,'{}',33,80),(1739,24,6,'{}',16,80),(1740,24,6,'{}',34,80),(1741,24,6,'{}',1,95),(1742,24,6,'{}',43,95),(1743,24,6,'{}',11,95),(1744,24,6,'{}',13,53),(1745,24,6,'{}',1,53),(1746,24,6,'{}',14,52),(1747,24,6,'{}',5,48),(1748,24,6,'{}',38,49),(1749,24,6,'{}',12,51),(1750,24,6,'{}',15,51),(1751,24,6,'{}',40,50),(1752,24,6,'{}',17,46),(1753,24,6,'{}',13,46),(1754,24,6,'{}',20,47),(1755,24,6,'{}',2,62),(1756,24,6,'{}',3,62),(1757,24,6,'{}',4,62),(1758,24,6,'{}',5,62),(1759,24,6,'{}',6,62),(1760,24,6,'{}',7,62),(1761,24,6,'{}',21,62),(1762,24,6,'{}',22,62),(1763,24,6,'{}',23,62),(1764,24,6,'{}',24,62),(1765,24,6,'{}',25,62),(1766,24,6,'{}',23,60),(1767,24,6,'{}',21,60),(1768,24,6,'{}',22,58),(1769,24,6,'{}',4,58),(1770,24,6,'{}',25,59),(1771,24,6,'{}',6,59),(1772,24,6,'{}',8,29),(1773,24,6,'{}',9,29),(1774,24,6,'{}',12,29),(1775,24,6,'{}',16,29),(1776,24,6,'{}',18,29),(1777,24,6,'{}',19,29),(1778,24,6,'{}',11,29),(1779,24,6,'{}',10,29),(1780,23,5,'{\"ComputingNeighbors\": 4539.083212, \"TreeBuilding\": 48.540098666666665, \"Runtime\": 4587.623310666667}',12,104),(1781,23,5,'{\"ComputingNeighbors\": 1132.8017419999999, \"TreeBuilding\": 11.118966666666665, \"Runtime\": 1143.9207086666668}',33,104),(1782,17,5,'{\"Runtime\": 4573.131612666667, \"TreeBuilding\": 48.452206999999994, \"ComputingNeighbors\": 4524.679405666667}',12,100),(1783,17,5,'{\"Runtime\": 1002.4322313333333, \"TreeBuilding\": 11.002873, \"ComputingNeighbors\": 991.4293583333333}',33,100),(1784,23,5,'{\"ComputingNeighbors\": 6652.996043, \"TreeBuilding\": 1.96553, \"Runtime\": 6654.9615730000005}',16,104),(1785,23,5,'{\"ComputingNeighbors\": 0.000202, \"TreeBuilding\": 2.5e-05, \"Runtime\": 0.000227}',13,90),(1786,23,5,'{\"ComputingNeighbors\": 0.005538333333333333, \"TreeBuilding\": 0.0005523333333333334, \"Runtime\": 0.006090666666666667}',14,90),(1787,23,5,'{\"ComputingNeighbors\": 0.021533999999999998, \"TreeBuilding\": 0.0019439999999999998, \"Runtime\": 0.023478}',13,90),(1788,23,5,'{\"ComputingNeighbors\": 19.949813666666667, \"TreeBuilding\": 0.136369, \"Runtime\": 20.08618266666667}',5,90),(1789,23,5,'{\"ComputingNeighbors\": 6.827838333333333, \"TreeBuilding\": 0.18427400000000002, \"Runtime\": 7.012112333333334}',15,90),(1790,23,5,'{\"ComputingNeighbors\": 4.433591666666667, \"TreeBuilding\": 0.6908236666666667, \"Runtime\": 5.124415333333333}',17,90),(1791,23,5,'{\"ComputingNeighbors\": 426.38494433333335, \"TreeBuilding\": 2.256043333333333, \"Runtime\": 428.64098766666666}',20,90),(1792,17,5,'{\"Runtime\": 6648.276633666667, \"TreeBuilding\": 1.9558966666666666, \"ComputingNeighbors\": 6646.320736999999}',16,100),(1793,25,2,'{\"Runtime\": \"failure\"}',27,92),(1794,25,2,'{\"Runtime\": \"failure\"}',27,92),(1795,25,2,'{\"Runtime\": \"failure\"}',1,92),(1796,25,2,'{\"Runtime\": \"failure\"}',13,92),(1797,25,2,'{\"Runtime\": \"failure\"}',44,92),(1798,25,2,'{\"Runtime\": \"failure\"}',40,92),(1799,25,2,'{\"Runtime\": \"failure\"}',42,92),(1800,25,2,'{\"Runtime\": \"failure\"}',5,92),(1801,25,2,'{\"Runtime\": \"failure\"}',19,92),(1802,25,2,'{\"Runtime\": \"failure\"}',17,92),(1803,25,2,'{\"Runtime\": 0.015634854634602863}',14,52),(1804,25,2,'{\"Runtime\": 0.009548425674438477}',38,49),(1805,25,2,'{\"Runtime\": \"failure\"}',20,47),(1806,25,2,'{\"Runtime\": 46.1503202120463}',12,51),(1807,25,2,'{\"Runtime\": 0.7432689666748047}',15,51),(1808,25,2,'{\"Runtime\": 0.011074384053548178}',40,50),(1809,25,2,'{\"Runtime\": 23.81139373779297}',17,46),(1810,25,2,'{\"Runtime\": 0.05214158693949381}',13,46),(1811,25,2,'{\"Runtime\": 6.607388734817505}',5,48),(1812,25,2,'{\"Runtime\": 0.0013765494028727214}',13,53),(1813,25,2,'{\"Runtime\": 0.0012832482655843098}',1,53),(1814,25,2,'{\"Recall\": 0.98, \"Runtime\": 0.0017119248708089192, \"MCC\": 0.9700708921921396, \"MSE\": 0.02, \"Precision\": 0.980125383486728, \"ACC\": 0.98}',1,62),(1815,25,2,'{\"Recall\": 0.5, \"Runtime\": 0.015003601710001627, \"MCC\": 0, \"MSE\": 0.035256410256410256, \"Precision\": 0.982371794871795, \"ACC\": 0.5}',2,62),(1816,25,2,'{\"Recall\": 0.5, \"Runtime\": 0.8518250783284506, \"MCC\": 0, \"MSE\": 0.07107231920199501, \"Precision\": 0.9644638403990026, \"ACC\": 0.5}',3,62),(1817,25,2,'{\"Recall\": 0.8422494670350323, \"Runtime\": 12.583497444788614, \"MCC\": 0.26714012775644336, \"MSE\": 0.22272060726300355, \"Precision\": 0.5521285310361229, \"ACC\": 0.8422494670350323}',4,62),(1818,25,2,'{\"Recall\": 0.5, \"Runtime\": 11.737844546635946, \"MCC\": 0, \"MSE\": 0.0850327048864948, \"Precision\": 0.9574836475567525, \"ACC\": 0.5}',5,62),(1819,25,2,'{\"Recall\": 0.8125863792429048, \"Runtime\": 0.006501356760660808, \"MCC\": 0.43620816317303274, \"MSE\": 0.04560085836909871, \"Precision\": 0.6521799846810743, \"ACC\": 0.812586379242905}',6,62),(1820,26,5,'{\"TreeBuilding\": 2.5333333333333334e-05, \"Runtime\": 0.0002236666666666667, \"ComputingNeighbors\": 0.00019833333333333335}',13,101),(1821,26,5,'{\"TreeBuilding\": 0.0005493333333333334, \"Runtime\": 0.006195333333333333, \"ComputingNeighbors\": 0.005646000000000001}',14,101),(1822,26,5,'{\"TreeBuilding\": 0.0020813333333333335, \"Runtime\": 0.02446266666666667, \"ComputingNeighbors\": 0.022381333333333336}',13,101),(1823,26,5,'{\"TreeBuilding\": 0.13781466666666667, \"Runtime\": 21.224086999999997, \"ComputingNeighbors\": 21.08627233333333}',5,101),(1824,26,5,'{\"TreeBuilding\": 0.18575333333333333, \"Runtime\": 8.258843666666666, \"ComputingNeighbors\": 8.073090333333333}',15,101),(1825,26,5,'{\"TreeBuilding\": 0.700813, \"Runtime\": 5.431457333333333, \"ComputingNeighbors\": 4.730644333333333}',17,101),(1826,27,6,'{\"Runtime\": 0.0058441162109375}',13,89),(1827,27,6,'{\"Runtime\": \"failure\"}',14,89),(1828,27,6,'{\"Runtime\": 7.890671571095784}',13,89),(1829,27,6,'{\"Runtime\": 77.3158540725708}',5,89),(1830,27,6,'{\"Runtime\": \"failure\"}',15,89),(1831,26,5,'{\"TreeBuilding\": 2.292889666666667, \"Runtime\": 498.192291, \"ComputingNeighbors\": 495.89940133333334}',20,101),(1832,23,5,'{\"ComputingNeighbors\": 4572.168593333333, \"TreeBuilding\": 46.83977633333333, \"Runtime\": 4619.008369666667}',12,90),(1833,27,6,'{\"Runtime\": \">9000\"}',17,89),(1834,27,6,'{}',20,89),(1835,27,6,'{}',12,89),(1836,27,6,'{}',33,89),(1837,27,6,'{}',16,89),(1838,27,6,'{}',1,95),(1839,27,6,'{}',43,95),(1840,27,6,'{}',11,95),(1841,27,6,'{}',27,92),(1842,27,6,'{}',27,92),(1843,27,6,'{}',1,92),(1844,27,6,'{}',13,92),(1845,27,6,'{}',44,92),(1846,27,6,'{}',40,92),(1847,27,6,'{}',42,92),(1848,27,6,'{}',5,92),(1849,27,6,'{}',19,92),(1850,27,6,'{}',17,92),(1851,27,6,'{}',8,29),(1852,27,6,'{}',9,29),(1853,27,6,'{}',12,29),(1854,27,6,'{}',16,29),(1855,27,6,'{}',18,29),(1856,27,6,'{}',19,29),(1857,27,6,'{}',11,29),(1858,27,6,'{}',10,29),(1859,27,6,'{}',8,26),(1860,27,6,'{}',9,26),(1861,27,6,'{}',19,26),(1862,27,6,'{}',1,98),(1863,27,6,'{}',2,98),(1864,27,6,'{}',3,98),(1865,27,6,'{}',4,98),(1866,27,6,'{}',5,98),(1867,27,6,'{}',6,98),(1868,27,6,'{}',7,98),(1869,27,6,'{}',21,98),(1870,27,6,'{}',22,98),(1871,27,6,'{}',23,98),(1872,27,6,'{}',24,98),(1873,27,6,'{}',25,98),(1874,27,6,'{}',1,24),(1875,27,6,'{}',42,24),(1876,27,6,'{}',11,24),(1877,27,6,'{}',10,24),(1878,27,6,'{}',22,58),(1879,27,6,'{}',4,58),(1880,27,6,'{}',23,60),(1881,27,6,'{}',21,60),(1882,27,6,'{}',25,59),(1883,27,6,'{}',6,59),(1884,27,6,'{}',2,62),(1885,27,6,'{}',3,62),(1886,27,6,'{}',4,62),(1887,27,6,'{}',5,62),(1888,27,6,'{}',6,62),(1889,27,6,'{}',7,62),(1890,27,6,'{}',21,62),(1891,27,6,'{}',22,62),(1892,27,6,'{}',23,62),(1893,27,6,'{}',24,62),(1894,27,6,'{}',25,62),(1895,27,6,'{}',35,68),(1896,27,6,'{}',36,68),(1897,27,6,'{}',37,68),(1898,27,6,'{}',29,68),(1899,27,6,'{}',38,68),(1900,27,6,'{}',19,68),(1901,27,6,'{}',10,68),(1902,27,6,'{}',11,68),(1903,27,6,'{}',39,68),(1904,27,6,'{}',5,68),(1905,27,6,'{}',17,68),(1906,27,6,'{}',35,63),(1907,27,6,'{}',36,63),(1908,27,6,'{}',37,63),(1909,27,6,'{}',29,63),(1910,27,6,'{}',38,63),(1911,27,6,'{}',19,63),(1912,27,6,'{}',10,63),(1913,27,6,'{}',11,63),(1914,27,6,'{}',39,63),(1915,27,6,'{}',5,63),(1916,27,6,'{}',17,63),(1917,27,6,'{}',35,70),(1918,27,6,'{}',36,70),(1919,27,6,'{}',37,70),(1920,27,6,'{}',29,70),(1921,27,6,'{}',38,70),(1922,27,6,'{}',19,70),(1923,27,6,'{}',10,70),(1924,27,6,'{}',11,70),(1925,27,6,'{}',39,70),(1926,27,6,'{}',5,70),(1927,27,6,'{}',17,70),(1928,27,6,'{}',35,74),(1929,27,6,'{}',36,74),(1930,27,6,'{}',37,74),(1931,27,6,'{}',29,74),(1932,27,6,'{}',38,74),(1933,27,6,'{}',19,74),(1934,27,6,'{}',10,74),(1935,27,6,'{}',11,74),(1936,27,6,'{}',39,74),(1937,27,6,'{}',5,74),(1938,27,6,'{}',17,74),(1939,27,6,'{}',17,46),(1940,27,6,'{}',13,46),(1941,27,6,'{}',5,48),(1942,27,6,'{}',13,53),(1943,27,6,'{}',1,53),(1944,27,6,'{}',38,49),(1945,27,6,'{}',12,51),(1946,27,6,'{}',15,51),(1947,27,6,'{}',14,52),(1948,27,6,'{}',20,47),(1949,27,6,'{}',40,50),(1950,27,6,'{}',8,94),(1951,27,6,'{}',9,94),(1952,27,6,'{}',10,94),(1953,27,6,'{}',11,94),(1954,27,6,'{}',1,79),(1955,27,6,'{}',13,79),(1956,27,6,'{}',26,79),(1957,27,6,'{}',8,79),(1958,27,6,'{}',27,79),(1959,27,6,'{}',28,79),(1960,27,6,'{}',29,79),(1961,27,6,'{}',30,79),(1962,27,6,'{}',31,79),(1963,27,6,'{}',32,79),(1964,27,6,'{}',10,79),(1965,27,6,'{}',11,79),(1966,27,6,'{}',15,79),(1967,27,6,'{}',5,79),(1968,27,6,'{}',17,79),(1969,27,6,'{}',20,79),(1970,27,6,'{}',12,79),(1971,27,6,'{}',33,79),(1972,27,6,'{}',16,79),(1973,23,5,'{\"ComputingNeighbors\": 1251.7675436666668, \"TreeBuilding\": 11.084909000000001, \"Runtime\": 1262.8524526666667}',33,90),(1974,27,6,'{}',34,79),(1975,27,6,'{}',1,80),(1976,27,6,'{}',13,80),(1977,27,6,'{}',26,80),(1978,27,6,'{}',8,80),(1979,27,6,'{}',27,80),(1980,27,6,'{}',28,80),(1981,27,6,'{}',29,80),(1982,27,6,'{}',30,80),(1983,27,6,'{}',31,80),(1984,27,6,'{}',32,80),(1985,27,6,'{}',10,80),(1986,27,6,'{}',11,80),(1987,27,6,'{}',15,80),(1988,27,6,'{}',5,80),(1989,27,6,'{}',17,80),(1990,27,6,'{}',20,80),(1991,27,6,'{}',12,80),(1992,27,6,'{}',33,80),(1993,27,6,'{}',16,80),(1994,27,6,'{}',34,80),(1995,27,6,'{}',1,81),(1996,27,6,'{}',13,81),(1997,27,6,'{}',26,81),(1998,27,6,'{}',8,81),(1999,27,6,'{}',27,81),(2000,27,6,'{}',28,81),(2001,27,6,'{}',29,81),(2002,27,6,'{}',30,81),(2003,27,6,'{}',31,81),(2004,27,6,'{}',32,81),(2005,27,6,'{}',10,81),(2006,27,6,'{}',11,81),(2007,27,6,'{}',15,81),(2008,27,6,'{}',5,81),(2009,27,6,'{}',17,81),(2010,27,6,'{}',20,81),(2011,27,6,'{}',12,81),(2012,27,6,'{}',33,81),(2013,27,6,'{}',16,81),(2014,27,6,'{}',34,81),(2015,25,2,'{\"Recall\": 0.5471434278865361, \"Runtime\": 2788.3218830426536, \"MCC\": 0.04725805177064731, \"MSE\": 0.8862392494136043, \"Precision\": 0.5118432385874246, \"ACC\": 0.5471434278865361}',7,62),(2016,25,2,'{}',21,62),(2017,25,2,'{}',22,62),(2018,25,2,'{}',23,62),(2019,25,2,'{}',24,62),(2020,25,2,'{}',25,62),(2021,25,2,'{}',1,23),(2022,25,2,'{}',2,23),(2023,25,2,'{}',3,23),(2024,25,2,'{}',4,23),(2025,25,2,'{}',5,23),(2026,25,2,'{}',6,23),(2027,25,2,'{}',7,23),(2028,25,2,'{}',21,23),(2029,25,2,'{}',22,23),(2030,25,2,'{}',23,23),(2031,25,2,'{}',24,23),(2032,25,2,'{}',25,23),(2033,25,2,'{}',1,82),(2034,25,2,'{}',2,82),(2035,25,2,'{}',3,82),(2036,25,2,'{}',4,82),(2037,25,2,'{}',5,82),(2038,25,2,'{}',6,82),(2039,25,2,'{}',7,82),(2040,25,2,'{}',21,82),(2041,25,2,'{}',22,82),(2042,25,2,'{}',23,82),(2043,25,2,'{}',24,82),(2044,25,2,'{}',25,82),(2045,25,2,'{}',28,20),(2046,25,2,'{}',41,20),(2047,25,2,'{}',42,20),(2048,25,2,'{}',38,20),(2049,25,2,'{}',19,20),(2050,25,2,'{}',39,20),(2051,25,2,'{}',5,20),(2052,25,2,'{}',12,20),(2053,25,2,'{}',16,20),(2054,25,2,'{}',34,20),(2055,25,2,'{}',8,29),(2056,25,2,'{}',9,29),(2057,25,2,'{}',12,29),(2058,25,2,'{}',16,29),(2059,25,2,'{}',18,29),(2060,25,2,'{}',19,29),(2061,25,2,'{}',11,29),(2062,25,2,'{}',10,29),(2063,25,2,'{}',8,26),(2064,25,2,'{}',9,26),(2065,25,2,'{}',19,26),(2066,25,2,'{}',1,98),(2067,25,2,'{}',2,98),(2068,25,2,'{}',3,98),(2069,25,2,'{}',4,98),(2070,25,2,'{}',5,98),(2071,25,2,'{}',6,98),(2072,25,2,'{}',7,98),(2073,25,2,'{}',21,98),(2074,25,2,'{}',22,98),(2075,25,2,'{}',23,98),(2076,25,2,'{}',24,98),(2077,25,2,'{}',25,98),(2078,25,2,'{}',13,89),(2079,25,2,'{}',14,89),(2080,25,2,'{}',13,89),(2081,25,2,'{}',5,89),(2082,25,2,'{}',15,89),(2083,25,2,'{}',17,89),(2084,25,2,'{}',20,89),(2085,25,2,'{}',12,89),(2086,25,2,'{}',33,89),(2087,25,2,'{}',16,89),(2088,25,2,'{}',1,95),(2089,25,2,'{}',43,95),(2090,25,2,'{}',11,95),(2091,25,2,'{}',1,31),(2092,25,2,'{}',2,31),(2093,25,2,'{}',3,31),(2094,25,2,'{}',4,31),(2095,25,2,'{}',5,31),(2096,25,2,'{}',6,31),(2097,25,2,'{}',7,31),(2098,25,2,'{}',21,31),(2099,25,2,'{}',22,31),(2100,25,2,'{}',23,31),(2101,25,2,'{}',24,31),(2102,25,2,'{}',25,31),(2103,25,2,'{}',1,1),(2104,25,2,'{}',2,1),(2105,25,2,'{}',3,1),(2106,25,2,'{}',4,1),(2107,25,2,'{}',5,1),(2108,25,2,'{}',6,1),(2109,25,2,'{}',7,1),(2110,25,2,'{}',21,1),(2111,25,2,'{}',22,1),(2112,25,2,'{}',23,1),(2113,25,2,'{}',24,1),(2114,25,2,'{}',25,1),(2115,25,2,'{}',1,24),(2116,25,2,'{}',2,24),(2117,25,2,'{}',3,24),(2118,25,2,'{}',4,24),(2119,25,2,'{}',5,24),(2120,25,2,'{}',6,24),(2121,25,2,'{}',7,24),(2122,25,2,'{}',21,24),(2123,25,2,'{}',22,24),(2124,25,2,'{}',23,24),(2125,25,2,'{}',24,24),(2126,25,2,'{}',25,24),(2127,25,2,'{}',8,94),(2128,25,2,'{}',9,94),(2129,25,2,'{}',10,94),(2130,25,2,'{}',11,94),(2131,25,2,'{}',35,74),(2132,25,2,'{}',36,74),(2133,25,2,'{}',37,74),(2134,25,2,'{}',29,74),(2135,25,2,'{}',38,74),(2136,25,2,'{}',19,74),(2137,25,2,'{}',10,74),(2138,25,2,'{}',11,74),(2139,25,2,'{}',39,74),(2140,25,2,'{}',5,74),(2141,25,2,'{}',17,74),(2142,25,2,'{}',35,70),(2143,25,2,'{}',36,70),(2144,25,2,'{}',37,70),(2145,25,2,'{}',29,70),(2146,25,2,'{}',38,70),(2147,25,2,'{}',19,70),(2148,25,2,'{}',10,70),(2149,25,2,'{}',11,70),(2150,25,2,'{}',39,70),(2151,25,2,'{}',5,70),(2152,25,2,'{}',17,70),(2153,25,2,'{}',35,63),(2154,25,2,'{}',36,63),(2155,25,2,'{}',37,63),(2156,25,2,'{}',29,63),(2157,25,2,'{}',38,63),(2158,25,2,'{}',19,63),(2159,25,2,'{}',10,63),(2160,25,2,'{}',11,63),(2161,25,2,'{}',39,63),(2162,25,2,'{}',5,63),(2163,25,2,'{}',17,63),(2164,25,2,'{}',23,60),(2165,25,2,'{}',21,60),(2166,25,2,'{}',22,58),(2167,25,2,'{}',4,58),(2168,25,2,'{}',25,59),(2169,25,2,'{}',6,59),(2170,25,2,'{}',8,27),(2171,25,2,'{}',9,27),(2172,25,2,'{}',10,27),(2173,25,2,'{}',11,27),(2174,25,2,'{}',1,79),(2175,25,2,'{}',13,79),(2176,25,2,'{}',26,79),(2177,25,2,'{}',8,79),(2178,25,2,'{}',27,79),(2179,25,2,'{}',28,79),(2180,25,2,'{}',29,79),(2181,25,2,'{}',30,79),(2182,25,2,'{}',31,79),(2183,25,2,'{}',32,79),(2184,25,2,'{}',10,79),(2185,25,2,'{}',11,79),(2186,25,2,'{}',15,79),(2187,25,2,'{}',5,79),(2188,25,2,'{}',17,79),(2189,25,2,'{}',20,79),(2190,25,2,'{}',12,79),(2191,25,2,'{}',33,79),(2192,25,2,'{}',16,79),(2193,25,2,'{}',34,79),(2194,25,2,'{}',1,81),(2195,25,2,'{}',13,81),(2196,25,2,'{}',26,81),(2197,25,2,'{}',8,81),(2198,25,2,'{}',27,81),(2199,25,2,'{}',28,81),(2200,25,2,'{}',29,81),(2201,25,2,'{}',30,81),(2202,25,2,'{}',31,81),(2203,25,2,'{}',32,81),(2204,25,2,'{}',10,81),(2205,25,2,'{}',11,81),(2206,25,2,'{}',15,81),(2207,25,2,'{}',5,81),(2208,25,2,'{}',17,81),(2209,25,2,'{}',20,81),(2210,25,2,'{}',12,81),(2211,25,2,'{}',33,81),(2212,25,2,'{}',16,81),(2213,25,2,'{}',34,81),(2214,25,2,'{}',1,80),(2215,25,2,'{}',13,80),(2216,25,2,'{}',26,80),(2217,25,2,'{}',8,80),(2218,25,2,'{}',27,80),(2219,25,2,'{}',28,80),(2220,25,2,'{}',29,80),(2221,25,2,'{}',30,80),(2222,25,2,'{}',31,80),(2223,25,2,'{}',32,80),(2224,25,2,'{}',10,80),(2225,25,2,'{}',11,80),(2226,25,2,'{}',15,80),(2227,25,2,'{}',5,80),(2228,25,2,'{}',17,80),(2229,25,2,'{}',20,80),(2230,25,2,'{}',12,80),(2231,25,2,'{}',33,80),(2232,25,2,'{}',16,80),(2233,25,2,'{}',34,80),(2234,25,2,'{}',1,45),(2235,25,2,'{}',2,45),(2236,25,2,'{}',3,45),(2237,25,2,'{}',4,45),(2238,25,2,'{}',5,45),(2239,25,2,'{}',6,45),(2240,25,2,'{}',7,45),(2241,25,2,'{}',21,45),(2242,25,2,'{}',22,45),(2243,25,2,'{}',23,45),(2244,25,2,'{}',24,45),(2245,25,2,'{}',25,45),(2246,25,2,'{\"Runtime\": \"failure\"}',39,44),(2247,25,2,'{\"Runtime\": \"failure\"}',39,43),(2248,25,2,'{\"Runtime\": \"failure\"}',39,42),(2249,25,2,'{}',1,97),(2250,25,2,'{}',2,97),(2251,25,2,'{}',3,97),(2252,25,2,'{}',4,97),(2253,25,2,'{}',5,97),(2254,25,2,'{}',6,97),(2255,25,2,'{}',7,97),(2256,25,2,'{}',21,97),(2257,25,2,'{}',22,97),(2258,25,2,'{}',23,97),(2259,25,2,'{}',24,97),(2260,25,2,'{}',25,97),(2261,26,5,'{\"TreeBuilding\": 48.77489766666667, \"Runtime\": 4606.042628666667, \"ComputingNeighbors\": 4557.267731}',12,101),(2262,26,5,'{\"TreeBuilding\": 11.001683333333332, \"Runtime\": 1350.5193606666664, \"ComputingNeighbors\": 1339.5176773333335}',33,101),(2263,28,2,'{\"Recall\": 0.88, \"Runtime\": 0.22086699803670248, \"Precision\": 0.8933706816059757, \"MSE\": 0.12, \"ACC\": 0.88, \"LFT\": 2.1999999999999997, \"MCC\": 0.82838215464777}',1,24),(2264,28,2,'{\"Recall\": 0.6946541830262761, \"Runtime\": 0.7926193873087565, \"Precision\": 0.546951263932396, \"MSE\": 0.16666666666666666, \"ACC\": 0.6946541830262761, \"LFT\": 0.8368034946108033, \"MCC\": 0.19119895316461966}',2,24),(2265,28,2,'{\"Recall\": 0.5806664311786177, \"Runtime\": 8.181549866994223, \"Precision\": 0.5421459945618071, \"MSE\": 0.1770573566084788, \"ACC\": 0.5806664311786176, \"LFT\": 0.6818367171379962, \"MCC\": 0.11661504139302807}',3,24),(2266,28,2,'{\"Recall\": 0.8281623683359665, \"Runtime\": 178.5101277033488, \"Precision\": 0.87333279105431, \"MSE\": 0.01604416458207539, \"ACC\": 0.8281623683359663, \"LFT\": 0.8498615859182843, \"MCC\": 0.700039350007866}',4,24),(2267,28,2,'{\"Recall\": 0.9105621287138131, \"Runtime\": 54.39473088582357, \"Precision\": 0.9072224487022694, \"MSE\": 0.028472489419007308, \"ACC\": 0.9105621287138134, \"LFT\": 0.9960231365855222, \"MCC\": 0.81777775807185}',5,24),(2268,28,2,'{\"Recall\": 0.6860330015790922, \"Runtime\": 4.234160502751668, \"Precision\": 0.7870372440061336, \"MSE\": 0.022532188841201718, \"ACC\": 0.6860330015790922, \"LFT\": 0.6974450586001787, \"MCC\": 0.462161876694525}',6,24),(2269,29,5,'{\"TreeBuilding\": 2.6e-05, \"Runtime\": 0.00022633333333333335, \"ComputingNeighbors\": 0.00020033333333333331}',13,34),(2270,29,5,'{\"TreeBuilding\": 0.000555, \"Runtime\": 0.0064193333333333324, \"ComputingNeighbors\": 0.0058643333333333325}',14,34),(2271,29,5,'{\"TreeBuilding\": 0.0019809999999999997, \"Runtime\": 0.025435666666666665, \"ComputingNeighbors\": 0.02345466666666667}',13,34),(2272,29,5,'{\"TreeBuilding\": 0.13967366666666667, \"Runtime\": 23.068164666666664, \"ComputingNeighbors\": 22.928490999999998}',5,34),(2273,29,5,'{\"TreeBuilding\": 0.19574633333333336, \"Runtime\": 10.022847666666665, \"ComputingNeighbors\": 9.827101333333333}',15,34),(2274,29,5,'{\"TreeBuilding\": 0.732582, \"Runtime\": 5.795201333333334, \"ComputingNeighbors\": 5.062619333333333}',17,34),(2275,30,6,'{\"Runtime\": \"failure\"}',1,98),(2276,30,6,'{\"Runtime\": \"failure\"}',2,98),(2277,30,6,'{\"Runtime\": \"failure\"}',3,98),(2278,30,6,'{\"Runtime\": \"failure\"}',4,98),(2279,30,6,'{\"Runtime\": \"failure\"}',5,98),(2280,30,6,'{\"Runtime\": \"failure\"}',6,98),(2281,30,6,'{\"Runtime\": \"failure\"}',7,98),(2282,30,6,'{\"Runtime\": \"failure\"}',21,98),(2283,30,6,'{\"Runtime\": \"failure\"}',22,98),(2284,30,6,'{\"Runtime\": \"failure\"}',23,98),(2285,30,6,'{\"Runtime\": \"failure\"}',24,98),(2286,30,6,'{\"Runtime\": \"failure\"}',25,98),(2287,30,6,'{\"Runtime\": 0.024423599243164062}',35,70),(2288,30,6,'{\"Runtime\": 3.4954721132914224}',36,70),(2289,30,6,'{\"Runtime\": 282.5329318841298}',37,70),(2290,29,5,'{\"TreeBuilding\": 2.4156773333333335, \"Runtime\": 597.8436126666667, \"ComputingNeighbors\": 595.4279353333334}',20,34),(2291,23,5,'{\"ComputingNeighbors\": 6901.109987333333, \"TreeBuilding\": 1.9662413333333333, \"Runtime\": 6903.076228666666}',16,90),(2292,23,5,'{\"ComputingNeighbors\": 0.00019566666666666666, \"TreeBuilding\": 2.6666666666666663e-05, \"Runtime\": 0.00022233333333333336}',13,100),(2293,23,5,'{\"ComputingNeighbors\": 0.0052576666666666666, \"TreeBuilding\": 0.000553, \"Runtime\": 0.005810666666666666}',14,100),(2294,23,5,'{\"ComputingNeighbors\": 0.020788333333333336, \"TreeBuilding\": 0.0020123333333333334, \"Runtime\": 0.022800666666666667}',13,100),(2295,23,5,'{\"ComputingNeighbors\": 20.254086, \"TreeBuilding\": 0.14124033333333333, \"Runtime\": 20.395326333333333}',5,100),(2296,23,5,'{\"ComputingNeighbors\": 6.423124333333334, \"TreeBuilding\": 0.199477, \"Runtime\": 6.622601333333333}',15,100),(2297,23,5,'{\"ComputingNeighbors\": 4.479882333333333, \"TreeBuilding\": 0.736739, \"Runtime\": 5.216621333333333}',17,100),(2298,23,5,'{\"ComputingNeighbors\": 349.0837686666667, \"TreeBuilding\": 2.450713, \"Runtime\": 351.53448166666675}',20,100),(2299,28,2,'{\"Recall\": 0.9177822976065085, \"Runtime\": 1457.6160366535187, \"Precision\": 0.9773738379814075, \"MSE\": 0.004300234558248631, \"ACC\": 0.9177822976065085, \"LFT\": 0.9353335128595414, \"MCC\": 0.8931703954993351}',7,24),(2300,28,2,'{\"Recall\": 0.5, \"Runtime\": 1.684954086939494, \"Precision\": 0.9971264367816092, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"LFT\": 0.5, \"MCC\": 0}',21,24),(2301,28,2,'{\"Recall\": 0.5579035639412998, \"Runtime\": 2.5997582276662192, \"Precision\": 0.8326107899807322, \"MSE\": 0.0872865275142315, \"ACC\": 0.5579035639412998, \"LFT\": 0.5665032335203564, \"MCC\": 0.27755612149772924}',22,24),(2302,28,2,'{\"Recall\": 0.5140009301417605, \"Runtime\": 1.9266839822133381, \"Precision\": 0.571353328456474, \"MSE\": 0.10919540229885057, \"ACC\": 0.5140009301417604, \"LFT\": 0.523401093458179, \"MCC\": 0.06321433277671083}',23,24),(2303,28,2,'{\"Recall\": 0.6704628836981779, \"Runtime\": 5.3689790566762285, \"Precision\": 0.5810097169412758, \"MSE\": 0.24988344988344988, \"ACC\": 0.6704628836981777, \"LFT\": 0.9113706498939109, \"MCC\": 0.2350246791924883}',24,24),(2304,28,2,'{\"Recall\": 0.8869415807560137, \"Runtime\": 0.1197351614634196, \"Precision\": 0.7843434343434343, \"MSE\": 0.09821428571428571, \"ACC\": 0.8869415807560138, \"LFT\": 1.1037495227185947, \"MCC\": 0.6633982151391192}',25,24),(2305,28,2,'{\"Runtime\": \"failure\"}',28,20),(2306,28,2,'{\"Runtime\": 0.4786218007405599}',41,20),(2307,28,2,'{\"Runtime\": 2.9649833043416343}',42,20),(2308,28,2,'{\"Runtime\": \"failure\"}',38,20),(2309,28,2,'{\"Runtime\": 736.1556324164072}',19,20),(2310,28,2,'{\"Runtime\": 8.615535577138266}',39,20),(2311,28,2,'{\"Runtime\": \"failure\"}',5,20),(2312,30,6,'{\"Runtime\": \">9000\"}',29,70),(2313,28,2,'{\"Runtime\": 1417.704266468684}',12,20),(2314,30,6,'{\"Runtime\": 469.48260776201886}',38,70),(2315,26,5,'{\"TreeBuilding\": 2.057833666666667, \"Runtime\": 7148.503333666667, \"ComputingNeighbors\": 7146.445500000001}',16,101),(2316,26,5,'{\"TreeBuilding\": 2.633333333333333e-05, \"Runtime\": 0.0002236666666666667, \"ComputingNeighbors\": 0.00019733333333333332}',13,104),(2317,26,5,'{\"TreeBuilding\": 0.000558, \"Runtime\": 0.005990666666666668, \"ComputingNeighbors\": 0.005432666666666666}',14,104),(2318,26,5,'{\"TreeBuilding\": 0.002030333333333333, \"Runtime\": 0.023601999999999998, \"ComputingNeighbors\": 0.021571666666666666}',13,104),(2319,26,5,'{\"TreeBuilding\": 0.14153733333333332, \"Runtime\": 21.169982, \"ComputingNeighbors\": 21.028444666666665}',5,104),(2320,26,5,'{\"TreeBuilding\": 0.200828, \"Runtime\": 7.454414666666666, \"ComputingNeighbors\": 7.253586666666666}',15,104),(2321,26,5,'{\"TreeBuilding\": 0.7570709999999999, \"Runtime\": 5.4487309999999995, \"ComputingNeighbors\": 4.69166}',17,104),(2322,26,5,'{\"TreeBuilding\": 2.513161666666667, \"Runtime\": 405.414826, \"ComputingNeighbors\": 402.9016643333334}',20,104),(2323,29,5,'{\"TreeBuilding\": 53.729515666666664, \"Runtime\": 4900.085075999999, \"ComputingNeighbors\": 4846.355560333333}',12,34),(2324,28,2,'{\"Runtime\": 1895.6220913728077}',16,20),(2325,28,2,'{\"Runtime\": \"failure\"}',34,20),(2326,28,2,'{\"Runtime\": 0.0021184285481770835}',1,95),(2327,28,2,'{\"Runtime\": 0.0022248427073160806}',43,95),(2328,28,2,'{\"Runtime\": 0.015261411666870117}',11,95),(2329,28,2,'{\"Recall\": 0.98, \"Runtime\": 0.002262671788533529, \"Precision\": 0.980125383486728, \"MSE\": 0.02, \"ACC\": 0.98, \"MCC\": 0.9700708921921396}',1,23),(2330,28,2,'{\"Recall\": 0.8553307157958322, \"Runtime\": 0.011552254358927408, \"Precision\": 0.802675585284281, \"MSE\": 0.025641025641025644, \"ACC\": 0.8553307157958322, \"MCC\": 0.6558961270597227}',2,23),(2331,28,2,'{\"Recall\": 0.5952431414105734, \"Runtime\": 0.7421255111694336, \"Precision\": 0.6296272555366815, \"MSE\": 0.08977556109725686, \"ACC\": 0.5952431414105734, \"MCC\": 0.22222607434542593}',3,23),(2332,28,2,'{\"Recall\": 0.8457361488253742, \"Runtime\": 9.927271842956543, \"Precision\": 0.873684252396246, \"MSE\": 0.015354092987147417, \"ACC\": 0.8457361488253742, \"MCC\": 0.7188773311217073}',4,23),(2333,28,2,'{\"Recall\": 0.9085099459981962, \"Runtime\": 9.74649182955424, \"Precision\": 0.9085099459981962, \"MSE\": 0.028472489419007308, \"ACC\": 0.9085099459981961, \"MCC\": 0.8170198919963921}',5,23),(2334,28,2,'{\"Recall\": 0.735774407116056, \"Runtime\": 0.007714033126831055, \"Precision\": 0.7432618261826183, \"MSE\": 0.025482832618025753, \"ACC\": 0.735774407116056, \"MCC\": 0.47897771489778473}',6,23),(2335,23,5,'{\"ComputingNeighbors\": 4777.879137333333, \"TreeBuilding\": 54.810948999999994, \"Runtime\": 4832.690086333333}',12,100),(2336,30,6,'{\"Runtime\": \">9000\"}',19,70),(2337,30,6,'{\"Runtime\": 5.069960355758667}',10,70),(2338,30,6,'{\"Runtime\": 38.055066426595054}',11,70),(2339,30,6,'{\"Runtime\": 15.176001707712809}',39,70),(2340,29,5,'{\"TreeBuilding\": 11.872625333333334, \"Runtime\": 1693.0961226666668, \"ComputingNeighbors\": 1681.2234973333334}',33,34),(2341,23,5,'{\"ComputingNeighbors\": 1117.8534956666665, \"TreeBuilding\": 11.740608, \"Runtime\": 1129.5941036666666}',33,100),(2342,30,6,'{\"Runtime\": 2008.019418478012}',5,70),(2343,30,6,'{\"Runtime\": \"failure\"}',17,70),(2344,30,6,'{\"Runtime\": 0.02386363347371419}',35,63),(2345,30,6,'{\"Runtime\": 1.134222189585368}',36,63),(2346,30,6,'{\"Runtime\": 255.43791182835898}',37,63),(2347,28,2,'{\"Recall\": 0.6022300512112737, \"Runtime\": 2603.05574631691, \"Precision\": 0.5097700275672572, \"MSE\": 0.32603596559812353, \"ACC\": 0.6022300512112737, \"MCC\": 0.06320729130523672}',7,23),(2348,28,2,'{\"Recall\": 0.4949421965317919, \"Runtime\": 0.00565330187479655, \"Precision\": 0.49709724238026126, \"MSE\": 0.015804597701149427, \"ACC\": 0.4949421965317919, \"MCC\": -0.007663309352096424}',21,23),(2349,28,2,'{\"Recall\": 0.5742348008385744, \"Runtime\": 0.02234681447347005, \"Precision\": 0.7554004832485846, \"MSE\": 0.09013282732447818, \"ACC\": 0.5742348008385744, \"MCC\": 0.27538775577744434}',22,23),(2350,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.005738417307535808, \"Precision\": 0.9500718390804598, \"MSE\": 0.09985632183908046, \"ACC\": 0.5, \"MCC\": 0}',23,23),(2351,28,2,'{\"Recall\": 0.502262443438914, \"Runtime\": 0.034633795420328774, \"Precision\": 0.9486940298507461, \"MSE\": 0.10256410256410257, \"ACC\": 0.502262443438914, \"MCC\": 0.0637226761495691}',24,23),(2352,28,2,'{\"Recall\": 0.7742268041237113, \"Runtime\": 0.0024154980977376304, \"Precision\": 0.7908163265306123, \"MSE\": 0.09821428571428571, \"ACC\": 0.7742268041237114, \"MCC\": 0.56479954607449}',25,23),(2353,28,2,'{\"Runtime\": 0.01682583491007487}',8,27),(2354,28,2,'{\"Runtime\": 0.5273241996765137}',9,27),(2355,28,2,'{\"Runtime\": 0.7506786187489828}',10,27),(2356,28,2,'{\"Runtime\": 0.8969996770222982}',11,27),(2357,28,2,'{\"Recall\": 0.96, \"Runtime\": 0.08435471852620442, \"Precision\": 0.9604700854700855, \"MSE\": 0.04, \"ACC\": 0.96, \"MCC\": 0.9402672577997083}',1,1),(2358,28,2,'{\"Recall\": 0.6801570522500754, \"Runtime\": 0.2193481127421061, \"Precision\": 0.888599348534202, \"MSE\": 0.025641025641025644, \"ACC\": 0.6801570522500754, \"MCC\": 0.5291839496365004}',2,1),(2359,28,2,'{\"Recall\": 0.568256210997292, \"Runtime\": 3.703099250793457, \"Precision\": 0.597405652451524, \"MSE\": 0.09476309226932668, \"ACC\": 0.568256210997292, \"MCC\": 0.16307716904656033}',3,1),(2360,28,2,'{\"Recall\": 0.7693328934674661, \"Runtime\": 7.611657937367757, \"Precision\": 0.9207593016484704, \"MSE\": 0.01604416458207539, \"ACC\": 0.7693328934674661, \"MCC\": 0.6732735555963355}',4,1),(2361,26,5,'{\"TreeBuilding\": 52.76230266666666, \"Runtime\": 4818.297433000001, \"ComputingNeighbors\": 4765.535130333334}',12,104),(2362,28,2,'{\"Recall\": 0.8795187027389075, \"Runtime\": 21.546614567438763, \"Precision\": 0.9046014062049911, \"MSE\": 0.03270488649480569, \"ACC\": 0.8795187027389076, \"MCC\": 0.7837188291964307}',5,1),(2363,28,2,'{\"Recall\": 0.7652556246106595, \"Runtime\": 0.4067079226175944, \"Precision\": 0.8385737954703472, \"MSE\": 0.017972103004291844, \"ACC\": 0.7652556246106595, \"MCC\": 0.5993616724292224}',6,1),(2364,28,2,'{\"Recall\": 0.8818181818181818, \"Runtime\": 138.88592529296875, \"Precision\": 0.99741653418124, \"MSE\": 0.0050820953870211105, \"ACC\": 0.8818181818181818, \"MCC\": 0.8716023788113075}',7,1),(2365,28,2,'{\"Recall\": 0.5614161849710982, \"Runtime\": 0.23704902331034342, \"Precision\": 0.622478386167147, \"MSE\": 0.007183908045977012, \"ACC\": 0.5614161849710982, \"MCC\": 0.173460718548069}',21,1),(2366,28,2,'{\"Recall\": 0.905566037735849, \"Runtime\": 0.21297764778137207, \"Precision\": 0.9019718865905477, \"MSE\": 0.03320683111954459, \"ACC\": 0.905566037735849, \"MCC\": 0.8075299259488347}',22,1),(2367,28,2,'{\"Recall\": 0.5055980754103819, \"Runtime\": 0.23738479614257812, \"Precision\": 0.6172438672438673, \"MSE\": 0.10129310344827586, \"ACC\": 0.5055980754103819, \"MCC\": 0.05123826734915941}',23,1),(2368,28,2,'{\"Recall\": 0.767656230891525, \"Runtime\": 0.6168693701426188, \"Precision\": 0.8020908540728785, \"MSE\": 0.07552447552447553, \"ACC\": 0.767656230891525, \"MCC\": 0.5687055455609639}',24,1),(2369,28,2,'{\"Recall\": 0.7254295532646048, \"Runtime\": 0.08703923225402832, \"Precision\": 0.7135416666666666, \"MSE\": 0.13392857142857142, \"ACC\": 0.7254295532646049, \"MCC\": 0.438810221029756}',25,1),(2370,28,2,'{\"Recall\": 0.9866666666666667, \"Runtime\": 0.01403514544169108, \"Precision\": 0.9871794871794872, \"MSE\": 0.013333333333333334, \"ACC\": 0.9866666666666667, \"MCC\": 0.9802892811798277}',1,82),(2371,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.1200865904490153, \"Precision\": 0.982371794871795, \"MSE\": 0.035256410256410256, \"ACC\": 0.5, \"MCC\": 0}',2,82),(2372,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.4616676966349284, \"Precision\": 0.9644638403990026, \"MSE\": 0.07107231920199501, \"ACC\": 0.5, \"MCC\": 0}',3,82),(2373,28,2,'{\"Recall\": 0.5310650887573964, \"Runtime\": 24.65317718187968, \"Precision\": 0.9863031455236778, \"MSE\": 0.027344086949020963, \"ACC\": 0.5310650887573964, \"MCC\": 0.24582148302127002}',4,82),(2374,28,2,'{\"Recall\": 0.8695688989188223, \"Runtime\": 5.32196577390035, \"Precision\": 0.9677941077295106, \"MSE\": 0.024624855713736054, \"ACC\": 0.8695688989188223, \"MCC\": 0.8315819943079771}',5,82),(2375,28,2,'{\"Recall\": 0.7145508279368943, \"Runtime\": 0.32983581225077313, \"Precision\": 0.9026590538336053, \"MSE\": 0.01689914163090129, \"ACC\": 0.7145508279368943, \"MCC\": 0.5878463519535916}',6,82),(2376,28,2,'{\"Recall\": 0.5, \"Runtime\": 61.51648608843485, \"Precision\": 0.9892494136043783, \"MSE\": 0.021501172791243157, \"ACC\": 0.5, \"MCC\": 0}',7,82),(2377,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.03916271527608236, \"Precision\": 0.9971264367816092, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"MCC\": 0}',21,82),(2378,28,2,'{\"Recall\": 0.5489517819706499, \"Runtime\": 0.9875063896179199, \"Precision\": 0.8734804862444019, \"MSE\": 0.0872865275142315, \"ACC\": 0.5489517819706499, \"MCC\": 0.2704258518184107}',22,82),(2379,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.16245428721110025, \"Precision\": 0.9500718390804598, \"MSE\": 0.09985632183908046, \"ACC\": 0.5, \"MCC\": 0}',23,82),(2380,28,2,'{\"Recall\": 0.5, \"Runtime\": 5.182460228602092, \"Precision\": 0.9484848484848486, \"MSE\": 0.10303030303030303, \"ACC\": 0.5, \"MCC\": 0}',24,82),(2381,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.002535581588745117, \"Precision\": 0.9330357142857143, \"MSE\": 0.13392857142857142, \"ACC\": 0.5, \"MCC\": 0}',25,82),(2382,28,2,'{\"Runtime\": 0.002506891886393229}',13,89),(2383,28,2,'{\"Runtime\": 0.01777227719624837}',14,89),(2384,28,2,'{\"Runtime\": 0.07883874575297038}',13,89),(2385,28,2,'{\"Runtime\": 49.67406050364176}',5,89),(2386,28,2,'{\"Runtime\": 54.30981461207072}',15,89),(2387,28,2,'{\"Runtime\": 51.35348757108053}',17,89),(2388,26,5,'{\"TreeBuilding\": 11.591890999999999, \"Runtime\": 1220.6291916666667, \"ComputingNeighbors\": 1209.0373006666666}',33,104),(2389,28,2,'{\"Runtime\": 1079.7756787141163}',20,89),(2390,30,6,'{\"Runtime\": \">9000\"}',29,63),(2391,30,6,'{\"Runtime\": 275.12124943733215}',38,63),(2392,29,5,'{\"TreeBuilding\": 2.140916333333333, \"Runtime\": 7108.841896333334, \"ComputingNeighbors\": 7106.7009800000005}',16,34),(2393,29,5,'{\"TreeBuilding\": 2.6e-05, \"Runtime\": 0.00022333333333333333, \"ComputingNeighbors\": 0.00019733333333333332}',13,104),(2394,29,5,'{\"TreeBuilding\": 0.00055, \"Runtime\": 0.005966666666666666, \"ComputingNeighbors\": 0.005416666666666667}',14,104),(2395,29,5,'{\"TreeBuilding\": 0.001984, \"Runtime\": 0.023328666666666664, \"ComputingNeighbors\": 0.021344666666666668}',13,104),(2396,29,5,'{\"TreeBuilding\": 0.14050300000000002, \"Runtime\": 20.825646000000003, \"ComputingNeighbors\": 20.685143}',5,104),(2397,29,5,'{\"TreeBuilding\": 0.19508166666666668, \"Runtime\": 7.100318999999999, \"ComputingNeighbors\": 6.905237333333333}',15,104),(2398,23,5,'{\"ComputingNeighbors\": 7024.681762, \"TreeBuilding\": 2.126379666666667, \"Runtime\": 7026.808141666667}',16,100),(2399,23,5,'{\"ComputingNeighbors\": 0.00019933333333333334, \"TreeBuilding\": 2.5e-05, \"Runtime\": 0.00022433333333333336}',13,34),(2400,29,5,'{\"TreeBuilding\": 0.735278, \"Runtime\": 5.30803, \"ComputingNeighbors\": 4.572752}',17,104),(2401,23,5,'{\"ComputingNeighbors\": 0.005843666666666666, \"TreeBuilding\": 0.0005723333333333333, \"Runtime\": 0.006416000000000001}',14,34),(2402,23,5,'{\"ComputingNeighbors\": 0.022925333333333336, \"TreeBuilding\": 0.0019506666666666665, \"Runtime\": 0.024876}',13,34),(2403,23,5,'{\"ComputingNeighbors\": 23.371839666666663, \"TreeBuilding\": 0.13892233333333334, \"Runtime\": 23.510762}',5,34),(2404,23,5,'{\"ComputingNeighbors\": 9.835603333333333, \"TreeBuilding\": 0.197126, \"Runtime\": 10.032729333333334}',15,34),(2405,23,5,'{\"ComputingNeighbors\": 5.103057666666667, \"TreeBuilding\": 0.743437, \"Runtime\": 5.8464946666666675}',17,34),(2406,28,2,'{\"Runtime\": \">9000\"}',12,89),(2407,29,5,'{\"TreeBuilding\": 2.4387586666666667, \"Runtime\": 398.00017699999995, \"ComputingNeighbors\": 395.5614183333333}',20,104),(2408,23,5,'{\"ComputingNeighbors\": 602.6572403333333, \"TreeBuilding\": 2.4221033333333337, \"Runtime\": 605.0793436666667}',20,34),(2409,30,6,'{\"Runtime\": \">9000\"}',19,63),(2410,30,6,'{\"Runtime\": 5.151476144790649}',10,63),(2411,30,6,'{\"Runtime\": 22.82825167973836}',11,63),(2412,30,6,'{\"Runtime\": 15.182523488998413}',39,63),(2413,30,6,'{\"Runtime\": 2377.7708801428475}',5,63),(2414,30,6,'{\"Runtime\": \"failure\"}',17,63),(2415,30,6,'{\"Runtime\": 0.02456490198771159}',35,74),(2416,30,6,'{\"Runtime\": 3.243706464767456}',36,74),(2417,26,5,'{\"TreeBuilding\": 2.1641360000000005, \"Runtime\": 7107.066732, \"ComputingNeighbors\": 7104.902596}',16,104),(2418,26,5,'{\"TreeBuilding\": 2.633333333333333e-05, \"Runtime\": 0.00022433333333333333, \"ComputingNeighbors\": 0.00019799999999999996}',13,90),(2419,26,5,'{\"TreeBuilding\": 0.0005576666666666667, \"Runtime\": 0.006115, \"ComputingNeighbors\": 0.005557333333333333}',14,90),(2420,26,5,'{\"TreeBuilding\": 0.0020113333333333333, \"Runtime\": 0.024279, \"ComputingNeighbors\": 0.022267666666666668}',13,90),(2421,26,5,'{\"TreeBuilding\": 0.14207633333333333, \"Runtime\": 21.891382000000004, \"ComputingNeighbors\": 21.749305666666668}',5,90),(2422,26,5,'{\"TreeBuilding\": 0.2043896666666667, \"Runtime\": 8.344681666666666, \"ComputingNeighbors\": 8.140292}',15,90),(2423,26,5,'{\"TreeBuilding\": 0.7367106666666666, \"Runtime\": 5.448401333333333, \"ComputingNeighbors\": 4.711690666666666}',17,90),(2424,30,6,'{\"Runtime\": 274.37583502133685}',37,74),(2425,26,5,'{\"TreeBuilding\": 2.626122, \"Runtime\": 461.36645599999997, \"ComputingNeighbors\": 458.740334}',20,90),(2426,28,2,'{\"Runtime\": 4282.3531343142195}',33,89),(2427,29,5,'{\"TreeBuilding\": 54.07608666666667, \"Runtime\": 4863.258354666667, \"ComputingNeighbors\": 4809.1822680000005}',12,104),(2428,23,5,'{\"ComputingNeighbors\": 4853.527016333333, \"TreeBuilding\": 53.778511333333334, \"Runtime\": 4907.305527666666}',12,34),(2429,29,5,'{\"TreeBuilding\": 11.787714999999999, \"Runtime\": 1247.99556, \"ComputingNeighbors\": 1236.207845}',33,104),(2430,30,6,'{\"Runtime\": \">9000\"}',29,74),(2431,30,6,'{\"Runtime\": 467.52250512441}',38,74),(2432,23,5,'{\"ComputingNeighbors\": 1667.1674886666667, \"TreeBuilding\": 11.712960666666667, \"Runtime\": 1678.8804493333334}',33,34),(2433,28,2,'{\"Runtime\": \">9000\"}',16,89),(2434,28,2,'{\"Runtime\": 0.002765814463297526}',8,94),(2435,28,2,'{\"Runtime\": 0.004492918650309245}',9,94),(2436,28,2,'{\"Runtime\": 1.5530341466267903}',10,94),(2437,28,2,'{\"Runtime\": 0.11318206787109375}',11,94),(2438,28,2,'{\"Runtime\": \"failure\"}',27,92),(2439,28,2,'{\"Runtime\": \"failure\"}',27,92),(2440,28,2,'{\"Runtime\": \"failure\"}',1,92),(2441,28,2,'{\"Runtime\": \"failure\"}',13,92),(2442,28,2,'{\"Runtime\": \"failure\"}',44,92),(2443,28,2,'{\"Runtime\": \"failure\"}',40,92),(2444,28,2,'{\"Runtime\": \"failure\"}',42,92),(2445,28,2,'{\"Runtime\": \"failure\"}',5,92),(2446,28,2,'{\"Runtime\": \"failure\"}',19,92),(2447,28,2,'{\"Runtime\": \"failure\"}',17,92),(2448,28,2,'{\"Recall\": 1, \"Runtime\": 0.08083947499593098, \"Precision\": 1, \"MSE\": 0, \"ACC\": 1, \"MCC\": 1}',1,31),(2449,28,2,'{\"Recall\": 0.6363636363636364, \"Runtime\": 0.15623958905537924, \"Precision\": 0.9870550161812298, \"MSE\": 0.025641025641025644, \"ACC\": 0.6363636363636364, \"MCC\": 0.5154283388236321}',2,31),(2450,28,2,'{\"Recall\": 0.5350877192982456, \"Runtime\": 1.2663309574127197, \"Precision\": 0.9667919799498748, \"MSE\": 0.06608478802992519, \"ACC\": 0.5350877192982456, \"MCC\": 0.25595832444484784}',3,31),(2451,28,2,'{\"Recall\": 0.8437104876465161, \"Runtime\": 10.078237771987915, \"Precision\": 0.9002441491146227, \"MSE\": 0.013715172949193478, \"ACC\": 0.8437104876465161, \"MCC\": 0.7418035094817276}',4,31),(2452,28,2,'{\"Recall\": 0.742241284169746, \"Runtime\": 3.623078982035319, \"Precision\": 0.9348540432712342, \"MSE\": 0.04732589457483647, \"ACC\": 0.7422412841697459, \"MCC\": 0.6491212579123568}',5,31),(2453,28,2,'{\"Recall\": 0.7203644950526605, \"Runtime\": 0.4812864462534587, \"Precision\": 0.9396093799672846, \"MSE\": 0.01555793991416309, \"ACC\": 0.7203644950526606, \"MCC\": 0.622492727786932}',6,31),(2454,28,2,'{\"Recall\": 0.6090909090909091, \"Runtime\": 19.423224925994873, \"Precision\": 0.9915553809897878, \"MSE\": 0.016810007818608287, \"ACC\": 0.609090909090909, \"MCC\": 0.4631380933618143}',7,31),(2455,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.19002866744995117, \"Precision\": 0.9971264367816092, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"MCC\": 0}',21,31),(2456,28,2,'{\"Recall\": 0.9052830188679245, \"Runtime\": 0.1761768658955892, \"Precision\": 0.9412036561569272, \"MSE\": 0.025616698292220113, \"ACC\": 0.9052830188679245, \"MCC\": 0.8457241860153822}',22,31),(2457,28,2,'{\"Recall\": 0.5443798193687668, \"Runtime\": 0.277157465616862, \"Precision\": 0.6464835977031099, \"MSE\": 0.10632183908045977, \"ACC\": 0.5443798193687668, \"MCC\": 0.16125651126762125}',23,31),(2458,28,2,'{\"Recall\": 0.7474929680812034, \"Runtime\": 0.4986586570739746, \"Precision\": 0.9167722772277228, \"MSE\": 0.05780885780885781, \"ACC\": 0.7474929680812034, \"MCC\": 0.6423338941860416}',24,31),(2459,28,2,'{\"Recall\": 0.7845360824742268, \"Runtime\": 0.08165550231933594, \"Precision\": 0.8450000000000001, \"MSE\": 0.08035714285714286, \"ACC\": 0.7845360824742268, \"MCC\": 0.6266257206773698}',25,31),(2460,28,2,'{\"Simple MSE\": 0.094876660341556, \"Runtime\": 0.00537864367167155}',22,58),(2461,28,2,'{\"Simple MSE\": 0.012766324506167515, \"Runtime\": 1.9889593919118245}',4,58),(2462,28,2,'{\"Simple MSE\": 0.13392857142857142, \"Runtime\": 0.0014626185099283855}',25,59),(2463,28,2,'{\"Simple MSE\": 0.022800429184549355, \"Runtime\": 0.0027329126993815103}',6,59),(2464,28,2,'{\"Simple MSE\": 0.09985632183908046, \"Runtime\": 0.002244710922241211}',23,60),(2465,28,2,'{\"Simple MSE\": 0.005747126436781609, \"Runtime\": 0.00225830078125}',21,60),(2466,28,2,'{\"Runtime\": 0.0015292167663574219}',1,79),(2467,28,2,'{\"Runtime\": 0.0018537839253743489}',13,79),(2468,28,2,'{\"Runtime\": 0.0017813841501871746}',26,79),(2469,28,2,'{\"Runtime\": 0.00198213259379069}',8,79),(2470,28,2,'{\"Runtime\": 0.0026280879974365234}',27,79),(2471,28,2,'{\"Runtime\": 0.005132118860880534}',28,79),(2472,28,2,'{\"Runtime\": \"failure\"}',29,79),(2473,28,2,'{\"Runtime\": 0.03217252095540365}',30,79),(2474,28,2,'{\"Runtime\": 0.045190890630086265}',31,79),(2475,28,2,'{\"Runtime\": 1.1656430562337239}',32,79),(2476,28,2,'{\"Runtime\": 0.6477560997009277}',10,79),(2477,28,2,'{\"Runtime\": 3.4295125007629395}',11,79),(2478,28,2,'{\"Runtime\": 0.51797087987264}',15,79),(2479,28,2,'{\"Runtime\": 17.83808700243632}',5,79),(2480,28,2,'{\"Runtime\": 13.26864210764567}',17,79),(2481,28,2,'{\"Runtime\": 1.1965885957082112}',20,79),(2482,28,2,'{\"Runtime\": 260.73688824971515}',12,79),(2483,28,2,'{\"Runtime\": 25.95582850774129}',33,79),(2484,28,2,'{\"Runtime\": 90.33942015965779}',16,79),(2485,28,2,'{\"Runtime\": 29.35538117090861}',34,79),(2486,28,2,'{\"Runtime\": 0.0015606880187988281}',1,81),(2487,28,2,'{\"Runtime\": 0.0018510818481445312}',13,81),(2488,28,2,'{\"Runtime\": 0.0017739931742350261}',26,81),(2489,28,2,'{\"Runtime\": 0.001987298329671224}',8,81),(2490,28,2,'{\"Runtime\": 0.0025765101114908853}',27,81),(2491,28,2,'{\"Runtime\": 0.004682064056396484}',28,81),(2492,28,2,'{\"Runtime\": \"failure\"}',29,81),(2493,28,2,'{\"Runtime\": 0.027329524358113606}',30,81),(2494,28,2,'{\"Runtime\": 0.0401459534962972}',31,81),(2495,28,2,'{\"Runtime\": 0.9255687395731608}',32,81),(2496,28,2,'{\"Runtime\": 0.49959278106689453}',10,81),(2497,28,2,'{\"Runtime\": 2.7893408139546714}',11,81),(2498,28,2,'{\"Runtime\": 0.4327813784281413}',15,81),(2499,28,2,'{\"Runtime\": 13.971597830454508}',5,81),(2500,28,2,'{\"Runtime\": 11.108642021814982}',17,81),(2501,28,2,'{\"Runtime\": 1.0794649124145508}',20,81),(2502,26,5,'{\"TreeBuilding\": 51.87094066666666, \"Runtime\": 4844.881586666666, \"ComputingNeighbors\": 4793.010646}',12,90),(2503,28,2,'{\"Runtime\": 203.4267923037211}',12,81),(2504,28,2,'{\"Runtime\": 21.302635192871094}',33,81),(2505,28,2,'{\"Runtime\": 71.27705963452657}',16,81),(2506,28,2,'{\"Runtime\": 23.766355117162068}',34,81),(2507,28,2,'{\"Runtime\": 0.0015802383422851562}',1,80),(2508,28,2,'{\"Runtime\": 0.0019132296244303386}',13,80),(2509,28,2,'{\"Runtime\": 0.001811663309733073}',26,80),(2510,28,2,'{\"Runtime\": 0.002003828684488932}',8,80),(2511,28,2,'{\"Runtime\": 0.00272218386332194}',27,80),(2512,28,2,'{\"Runtime\": 0.004673083623250325}',28,80),(2513,28,2,'{\"Runtime\": \"failure\"}',29,80),(2514,28,2,'{\"Runtime\": 0.027689297993977863}',30,80),(2515,28,2,'{\"Runtime\": 0.040952841440836586}',31,80),(2516,28,2,'{\"Runtime\": 0.9257873694101969}',32,80),(2517,28,2,'{\"Runtime\": 0.49801333745320636}',10,80),(2518,28,2,'{\"Runtime\": 2.786665678024292}',11,80),(2519,28,2,'{\"Runtime\": 0.434232234954834}',15,80),(2520,28,2,'{\"Runtime\": 13.968187093734741}',5,80),(2521,28,2,'{\"Runtime\": 11.11658008893331}',17,80),(2522,28,2,'{\"Runtime\": 1.0985631148020427}',20,80),(2523,28,2,'{\"Runtime\": 203.29296970367432}',12,80),(2524,28,2,'{\"Runtime\": 21.31491820017497}',33,80),(2525,28,2,'{\"Runtime\": 71.25737953186035}',16,80),(2526,28,2,'{\"Runtime\": 23.766536792119343}',34,80),(2527,28,2,'{\"Runtime\": 46.029147704442344}',12,51),(2528,28,2,'{\"Runtime\": 0.7448995113372803}',15,51),(2529,28,2,'{\"Runtime\": 23.749401330947876}',17,46),(2530,28,2,'{\"Runtime\": 0.05233319600423177}',13,46),(2531,28,2,'{\"Runtime\": 0.010234514872233072}',38,49),(2532,28,2,'{\"Runtime\": 0.0015917619069417317}',13,53),(2533,28,2,'{\"Runtime\": 0.001518567403157552}',1,53),(2534,28,2,'{\"Runtime\": \"failure\"}',20,47),(2535,28,2,'{\"Runtime\": 0.011683384577433268}',40,50),(2536,30,6,'{\"Runtime\": \">9000\"}',19,74),(2537,30,6,'{\"Runtime\": 3.4023428757985434}',10,74),(2538,28,2,'{\"Runtime\": 6.601482788721721}',5,48),(2539,28,2,'{\"Runtime\": 0.010140101114908854}',14,52),(2540,28,2,'{\"Runtime\": 0.015791654586791992}',35,63),(2541,28,2,'{\"Runtime\": 0.418976624806722}',36,63),(2542,28,2,'{\"Runtime\": 4.604145844777425}',37,63),(2543,28,2,'{\"Runtime\": \"failure\"}',29,63),(2544,30,6,'{\"Runtime\": 37.14019751548767}',11,74),(2545,30,6,'{\"Runtime\": 12.155656655629477}',39,74),(2546,26,5,'{\"TreeBuilding\": 11.580389666666667, \"Runtime\": 1345.508809, \"ComputingNeighbors\": 1333.9284193333333}',33,90),(2547,28,2,'{\"Runtime\": 102.03503823280334}',38,63),(2548,28,2,'{\"Runtime\": \"failure\"}',19,63),(2549,28,2,'{\"Runtime\": 0.1290904680887858}',10,63),(2550,28,2,'{\"Runtime\": 8.258965412775675}',11,63),(2551,28,2,'{\"Runtime\": 0.29186828931172687}',39,63),(2552,28,2,'{\"Runtime\": 477.5969455242157}',5,63),(2553,28,2,'{\"Runtime\": \"failure\"}',17,63),(2554,28,2,'{\"Runtime\": 0.006441354751586914}',35,74),(2555,28,2,'{\"Runtime\": 0.74941619237264}',36,74),(2556,28,2,'{\"Runtime\": 1.1845448017120361}',37,74),(2557,28,2,'{\"Runtime\": \"failure\"}',29,74),(2558,28,2,'{\"Runtime\": 100.8717388312022}',38,74),(2559,28,2,'{\"Runtime\": \"failure\"}',19,74),(2560,28,2,'{\"Runtime\": 0.18062631289164224}',10,74),(2561,28,2,'{\"Runtime\": 14.082904497782389}',11,74),(2562,28,2,'{\"Runtime\": 0.26866920789082843}',39,74),(2563,28,2,'{\"Runtime\": 475.68688170115155}',5,74),(2564,28,2,'{\"Runtime\": \"failure\"}',17,74),(2565,28,2,'{\"Runtime\": 0.006754159927368164}',35,70),(2566,28,2,'{\"Runtime\": 0.7538252671559652}',36,70),(2567,28,2,'{\"Runtime\": 1.2320576508839924}',37,70),(2568,28,2,'{\"Runtime\": \"failure\"}',29,70),(2569,28,2,'{\"Runtime\": 100.95454184214275}',38,70),(2570,28,2,'{\"Runtime\": \"failure\"}',19,70),(2571,28,2,'{\"Runtime\": 0.14766430854797363}',10,70),(2572,28,2,'{\"Runtime\": 14.108585119247437}',11,70),(2573,28,2,'{\"Runtime\": 0.30431652069091797}',39,70),(2574,28,2,'{\"Runtime\": 475.72417815526325}',5,70),(2575,28,2,'{\"Runtime\": \"failure\"}',17,70),(2576,28,2,'{\"Recall\": 1, \"Runtime\": 0.03161462148030599, \"Precision\": 1, \"MSE\": 0, \"ACC\": 1, \"MCC\": 1}',1,45),(2577,28,2,'{\"Recall\": 0.7006946541830262, \"Runtime\": 0.016392230987548828, \"Precision\": 0.6087383406971035, \"MSE\": 0.07051282051282051, \"ACC\": 0.7006946541830262, \"MCC\": 0.29545357457740323}',2,45),(2578,28,2,'{\"Recall\": 0.5704109266454728, \"Runtime\": 0.7418307463328043, \"Precision\": 0.5529465930018417, \"MSE\": 0.13591022443890274, \"ACC\": 0.5704109266454727, \"MCC\": 0.12211500605544547}',3,45),(2579,30,6,'{\"Runtime\": 1999.225521326065}',5,74),(2580,30,6,'{\"Runtime\": \"failure\"}',17,74),(2581,30,6,'{\"Runtime\": 0.023192485173543293}',35,68),(2582,30,6,'{\"Runtime\": 3.5657365322113037}',36,68),(2583,28,2,'{\"Recall\": 0.8573437446604929, \"Runtime\": 5.477617263793945, \"Precision\": 0.7844761667594411, \"MSE\": 0.023462434227551107, \"ACC\": 0.8573437446604929, \"MCC\": 0.6376700673435486}',4,45),(2584,28,2,'{\"Recall\": 0.7379942078403464, \"Runtime\": 3.4231603145599365, \"Precision\": 0.764320764844863, \"MSE\": 0.07387456714120816, \"ACC\": 0.7379942078403464, \"MCC\": 0.5016246048391471}',5,45),(2585,28,2,'{\"Recall\": 0.7483651324843902, \"Runtime\": 0.0409245491027832, \"Precision\": 0.7973573477734494, \"MSE\": 0.020922746781115876, \"ACC\": 0.7483651324843902, \"MCC\": 0.5435188941516556}',6,45),(2586,30,6,'{\"Runtime\": 207.88601231575012}',37,68),(2587,28,2,'{\"Recall\": 0.8525478516689065, \"Runtime\": 35.87279502550761, \"Precision\": 0.8947706623502331, \"MSE\": 0.010164190774042221, \"ACC\": 0.8525478516689061, \"MCC\": 0.7461247855780851}',7,45),(2588,28,2,'{\"Recall\": 0.557442196531792, \"Runtime\": 0.009728829065958658, \"Precision\": 0.5307915758896151, \"MSE\": 0.015086206896551725, \"ACC\": 0.5574421965317918, \"MCC\": 0.08411268046554826}',21,45),(2589,28,2,'{\"Recall\": 0.9013731656184486, \"Runtime\": 0.010929505030314127, \"Precision\": 0.8717392359594194, \"MSE\": 0.04079696394686907, \"ACC\": 0.9013731656184487, \"MCC\": 0.7725442483679897}',22,45),(2590,28,2,'{\"Recall\": 0.6059816153461908, \"Runtime\": 0.018125136693318684, \"Precision\": 0.6020850040096231, \"MSE\": 0.14511494252873564, \"ACC\": 0.6059816153461908, \"MCC\": 0.20803012885216612}',23,45),(2591,28,2,'{\"Recall\": 0.7549223431576374, \"Runtime\": 0.06384158134460449, \"Precision\": 0.735369989967993, \"MSE\": 0.09836829836829837, \"ACC\": 0.7549223431576374, \"MCC\": 0.4899023141469343}',24,45),(2592,28,2,'{\"Recall\": 0.781786941580756, \"Runtime\": 0.0014752546946207683, \"Precision\": 0.7228260869565218, \"MSE\": 0.13392857142857142, \"ACC\": 0.781786941580756, \"MCC\": 0.5011565884945975}',25,45),(2593,28,2,'{\"Runtime\": 0.04498950640360514}',8,26),(2594,28,2,'{\"Runtime\": 0.01411588986714681}',9,26),(2595,28,2,'{\"Runtime\": 216.7604065736135}',19,26),(2596,28,2,'{\"Recall\": 0.98, \"Runtime\": 0.016355435053507488, \"Precision\": 0.980125383486728, \"MSE\": 0.02, \"ACC\": 0.98, \"MCC\": 0.9700708921921396}',1,62),(2597,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.01246492067972819, \"Precision\": 0.982371794871795, \"MSE\": 0.035256410256410256, \"ACC\": 0.5, \"MCC\": 0}',2,62),(2598,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.8543164730072021, \"Precision\": 0.9644638403990026, \"MSE\": 0.07107231920199501, \"ACC\": 0.5, \"MCC\": 0}',3,62),(2599,28,2,'{\"Recall\": 0.8422494670350323, \"Runtime\": 12.587945779164633, \"Precision\": 0.5521285310361229, \"MSE\": 0.22272060726300355, \"ACC\": 0.8422494670350323, \"MCC\": 0.26714012775644336}',4,62),(2600,28,2,'{\"Recall\": 0.5, \"Runtime\": 11.74776562054952, \"Precision\": 0.9574836475567525, \"MSE\": 0.0850327048864948, \"ACC\": 0.5, \"MCC\": 0}',5,62),(2601,28,2,'{\"Recall\": 0.8125863792429048, \"Runtime\": 0.006737311681111653, \"Precision\": 0.6521799846810743, \"MSE\": 0.04560085836909871, \"ACC\": 0.812586379242905, \"MCC\": 0.43620816317303274}',6,62),(2602,29,5,'{\"TreeBuilding\": 2.1273866666666668, \"Runtime\": 7051.809244, \"ComputingNeighbors\": 7049.681857333334}',16,104),(2603,29,5,'{\"TreeBuilding\": 2.6e-05, \"Runtime\": 0.00023433333333333336, \"ComputingNeighbors\": 0.00020833333333333335}',13,85),(2604,29,5,'{\"TreeBuilding\": 0.000552, \"Runtime\": 0.006588666666666666, \"ComputingNeighbors\": 0.006036666666666666}',14,85),(2605,29,5,'{\"TreeBuilding\": 0.0019850000000000002, \"Runtime\": 0.026447, \"ComputingNeighbors\": 0.024462}',13,85),(2606,29,5,'{\"TreeBuilding\": 0.14017266666666664, \"Runtime\": 23.953231, \"ComputingNeighbors\": 23.813058333333334}',5,85),(2607,29,5,'{\"TreeBuilding\": 0.19672933333333334, \"Runtime\": 11.409489666666667, \"ComputingNeighbors\": 11.212760333333335}',15,85),(2608,29,5,'{\"TreeBuilding\": 0.7331743333333333, \"Runtime\": 5.996026333333333, \"ComputingNeighbors\": 5.262852}',17,85),(2609,29,5,'{\"TreeBuilding\": 2.412873, \"Runtime\": 698.2765839999998, \"ComputingNeighbors\": 695.863711}',20,85),(2610,23,5,'{\"ComputingNeighbors\": 7119.324415, \"TreeBuilding\": 2.120757333333333, \"Runtime\": 7121.445172333333}',16,34),(2611,23,5,'{\"ComputingNeighbors\": 0.00021966666666666665, \"TreeBuilding\": 2.633333333333333e-05, \"Runtime\": 0.00024599999999999996}',13,85),(2612,23,5,'{\"ComputingNeighbors\": 0.006044000000000001, \"TreeBuilding\": 0.0005536666666666667, \"Runtime\": 0.006597666666666666}',14,85),(2613,23,5,'{\"ComputingNeighbors\": 0.024532666666666664, \"TreeBuilding\": 0.0019916666666666663, \"Runtime\": 0.02652433333333333}',13,85),(2614,23,5,'{\"ComputingNeighbors\": 23.89667833333333, \"TreeBuilding\": 0.14041866666666666, \"Runtime\": 24.037097}',5,85),(2615,23,5,'{\"ComputingNeighbors\": 11.666598, \"TreeBuilding\": 0.20007866666666665, \"Runtime\": 11.866676666666669}',15,85),(2616,23,5,'{\"ComputingNeighbors\": 5.319081333333334, \"TreeBuilding\": 0.7468106666666667, \"Runtime\": 6.065892000000001}',17,85),(2617,23,5,'{\"ComputingNeighbors\": 703.2778463333334, \"TreeBuilding\": 2.451152, \"Runtime\": 705.7289983333334}',20,85),(2618,30,6,'{\"Runtime\": \">9000\"}',29,68),(2619,30,6,'{\"Runtime\": 402.93960881233215}',38,68),(2620,28,2,'{\"Recall\": 0.5471434278865361, \"Runtime\": 2786.1342734495797, \"Precision\": 0.5118432385874246, \"MSE\": 0.8862392494136043, \"ACC\": 0.5471434278865361, \"MCC\": 0.04725805177064731}',7,62),(2621,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.0052899519602457685, \"Precision\": 0.9971264367816092, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"MCC\": 0}',21,62),(2622,28,2,'{\"Recall\": 0.6477987421383647, \"Runtime\": 0.03155271212259928, \"Precision\": 0.5647668393782384, \"MSE\": 0.6375711574952562, \"ACC\": 0.6477987421383647, \"MCC\": 0.195677871946535}',22,62),(2623,28,2,'{\"Recall\": 0.7396636561461127, \"Runtime\": 0.005341688791910808, \"Precision\": 0.5927195345975375, \"MSE\": 0.3074712643678161, \"ACC\": 0.7396636561461126, \"MCC\": 0.29813756997608887}',23,62),(2624,28,2,'{\"Recall\": 0.7944233826586768, \"Runtime\": 0.04823939005533854, \"Precision\": 0.6371794871794871, \"MSE\": 0.2107226107226107, \"ACC\": 0.7944233826586767, \"MCC\": 0.4019395409599171}',24,62),(2625,28,2,'{\"Recall\": 0.7147766323024053, \"Runtime\": 0.0018415451049804688, \"Precision\": 0.6198695818948984, \"MSE\": 0.25, \"ACC\": 0.7147766323024055, \"MCC\": 0.32090612406050256}',25,62),(2626,28,2,'{\"Recall\": 0.9666666666666667, \"Runtime\": 0.040449301401774086, \"Precision\": 0.9667867146858743, \"MSE\": 0.03333333333333333, \"ACC\": 0.9666666666666667, \"MCC\": 0.9500681414622171}',1,98),(2627,28,2,'{\"Recall\": 0.4983388704318937, \"Runtime\": 0.01609190305074056, \"Precision\": 0.48231511254019294, \"MSE\": 0.038461538461538464, \"ACC\": 0.4983388704318938, \"MCC\": -0.010840090307394688}',2,98),(2628,28,2,'{\"Recall\": 0.5506181561285765, \"Runtime\": 0.8631543318430582, \"Precision\": 0.8011769651113912, \"MSE\": 0.06733167082294264, \"ACC\": 0.5506181561285765, \"MCC\": 0.24694147195106161}',3,98),(2629,28,2,'{\"Recall\": 0.7434608944348206, \"Runtime\": 181.0359448591868, \"Precision\": 0.9533154422726966, \"MSE\": 0.016130423531441385, \"ACC\": 0.7434608944348206, \"MCC\": 0.6644233079500657}',4,98),(2630,26,5,'{\"TreeBuilding\": 2.1391753333333337, \"Runtime\": 7137.638123333334, \"ComputingNeighbors\": 7135.498948}',16,90),(2631,26,5,'{\"TreeBuilding\": 2.6666666666666663e-05, \"Runtime\": 0.00022833333333333334, \"ComputingNeighbors\": 0.0002016666666666667}',13,85),(2632,26,5,'{\"TreeBuilding\": 0.000573, \"Runtime\": 0.006620999999999999, \"ComputingNeighbors\": 0.006048}',14,85),(2633,26,5,'{\"TreeBuilding\": 0.0020469999999999998, \"Runtime\": 0.026900000000000004, \"ComputingNeighbors\": 0.024853}',13,85),(2634,26,5,'{\"TreeBuilding\": 0.14292466666666667, \"Runtime\": 24.49184, \"ComputingNeighbors\": 24.348915333333334}',5,85),(2635,26,5,'{\"TreeBuilding\": 0.207448, \"Runtime\": 12.250436666666667, \"ComputingNeighbors\": 12.042988666666668}',15,85),(2636,28,2,'{\"Recall\": 0.9334472483436022, \"Runtime\": 21.579774300257366, \"Precision\": 0.9352344376934539, \"MSE\": 0.020392458637937667, \"ACC\": 0.9334472483436023, \"MCC\": 0.8686798475908203}',5,98),(2637,28,2,'{\"Recall\": 0.7613687397684964, \"Runtime\": 0.12280948956807454, \"Precision\": 0.8906862426644145, \"MSE\": 0.01555793991416309, \"ACC\": 0.7613687397684964, \"MCC\": 0.6391030304734503}',6,98),(2638,26,5,'{\"TreeBuilding\": 0.7575906666666666, \"Runtime\": 6.116776000000001, \"ComputingNeighbors\": 5.3591853333333335}',17,85),(2639,26,5,'{\"TreeBuilding\": 2.4921783333333334, \"Runtime\": 715.5089673333333, \"ComputingNeighbors\": 713.0167890000001}',20,85),(2640,28,2,'{\"Recall\": 0.6181818181818182, \"Runtime\": 458.0764625072479, \"Precision\": 0.9917485265225934, \"MSE\": 0.01641907740422205, \"ACC\": 0.6181818181818182, \"MCC\": 0.48214410689199605}',7,98),(2641,28,2,'{\"Recall\": 0.5, \"Runtime\": 0.02965831756591797, \"Precision\": 0.9971264367816092, \"MSE\": 0.005747126436781609, \"ACC\": 0.5, \"MCC\": 0}',21,98),(2642,28,2,'{\"Recall\": 0.569517819706499, \"Runtime\": 0.05608884493509928, \"Precision\": 0.6809648548351888, \"MSE\": 0.09867172675521822, \"ACC\": 0.569517819706499, \"MCC\": 0.22432371387479666}',22,98),(2643,28,2,'{\"Recall\": 0.567581688838873, \"Runtime\": 0.028951565424601238, \"Precision\": 0.6108427267847557, \"MSE\": 0.12212643678160921, \"ACC\": 0.567581688838873, \"MCC\": 0.17310041792693143}',23,98),(2644,28,2,'{\"Recall\": 0.8303778892014186, \"Runtime\": 0.3544551531473796, \"Precision\": 0.8547746764857411, \"MSE\": 0.05641025641025641, \"ACC\": 0.8303778892014186, \"MCC\": 0.6847180697468859}',24,98),(2645,28,2,'{\"Recall\": 0.7793814432989691, \"Runtime\": 0.0026487509409586587, \"Precision\": 0.8158508158508159, \"MSE\": 0.08928571428571429, \"ACC\": 0.7793814432989693, \"MCC\": 0.5941139850215877}',25,98),(2646,28,2,'{}',1,97),(2647,28,2,'{}',2,97),(2648,28,2,'{}',3,97),(2649,28,2,'{}',4,97),(2650,28,2,'{}',5,97),(2651,28,2,'{}',6,97),(2652,30,6,'{\"Runtime\": \">9000\"}',19,68),(2653,30,6,'{\"Runtime\": 4.881330410639445}',10,68),(2654,28,2,'{}',7,97),(2655,28,2,'{}',21,97),(2656,28,2,'{}',22,97),(2657,28,2,'{}',23,97),(2658,28,2,'{}',24,97),(2659,28,2,'{}',25,97),(2660,28,2,'{\"Runtime\": 0.03319708506266276}',8,29),(2661,28,2,'{\"Runtime\": 0.08103688557942708}',9,29),(2662,30,6,'{\"Runtime\": 28.042223532994587}',11,68),(2663,30,6,'{\"Runtime\": 14.12770946820577}',39,68),(2664,28,2,'{\"Runtime\": 69.14220062891643}',12,29),(2665,28,2,'{\"Runtime\": 25.227147897084553}',16,29),(2666,28,2,'{\"Runtime\": 0.08568334579467773}',18,29),(2667,28,2,'{\"Runtime\": 0.5487837791442871}',19,29),(2668,28,2,'{\"Runtime\": 0.9999449253082275}',11,29),(2669,28,2,'{\"Runtime\": 0.24958364168802896}',10,29),(2670,28,2,'{\"Runtime\": \"failure\"}',39,42),(2671,28,2,'{\"Runtime\": \"failure\"}',39,44),(2672,28,2,'{\"Runtime\": \"failure\"}',39,43),(2673,29,5,'{\"TreeBuilding\": 53.650040333333344, \"Runtime\": 4939.488634666666, \"ComputingNeighbors\": 4885.838594333333}',12,85),(2674,23,5,'{\"ComputingNeighbors\": 4864.401364333334, \"TreeBuilding\": 55.013832, \"Runtime\": 4919.415196333333}',12,85),(2675,30,6,'{\"Runtime\": 1780.773649295171}',5,68),(2676,30,6,'{\"Runtime\": \"failure\"}',17,68),(2677,30,6,'{\"Runtime\": 0.011555751164754232}',1,79),(2678,30,6,'{\"Runtime\": 0.0006941954294840494}',13,79),(2679,30,6,'{\"Runtime\": 0.0007069110870361328}',26,79),(2680,30,6,'{\"Runtime\": 0.0007329781850179037}',8,79),(2681,30,6,'{\"Runtime\": \"failure\"}',27,79),(2682,30,6,'{\"Runtime\": 0.0014483133951822917}',28,79),(2683,30,6,'{\"Runtime\": 0.0035195350646972656}',29,79),(2684,30,6,'{\"Runtime\": 0.008426268895467123}',30,79),(2685,30,6,'{\"Runtime\": 0.015752315521240234}',31,79),(2686,30,6,'{\"Runtime\": 0.09459114074707031}',32,79),(2687,30,6,'{\"Runtime\": \"failure\"}',10,79),(2688,30,6,'{\"Runtime\": 0.35195430119832355}',11,79),(2689,30,6,'{\"Runtime\": 0.1308437983194987}',15,79),(2690,30,6,'{\"Runtime\": 1.0711428324381511}',5,79),(2691,30,6,'{\"Runtime\": 2.377190272013346}',17,79),(2692,30,6,'{\"Runtime\": 0.4205583731333415}',20,79),(2693,30,6,'{\"Runtime\": 9.93290106455485}',12,79),(2694,30,6,'{\"Runtime\": 2.96649964650472}',33,79),(2695,30,6,'{\"Runtime\": 3.7637224992116294}',16,79),(2696,30,6,'{\"Runtime\": 3.116412957509359}',34,79),(2697,30,6,'{\"Runtime\": 0.0006579558054606119}',1,81),(2698,30,6,'{\"Runtime\": 0.0007266203562418619}',13,81),(2699,30,6,'{\"Runtime\": 0.0007626215616861979}',26,81),(2700,30,6,'{\"Runtime\": 0.0007559458414713541}',8,81),(2701,30,6,'{\"Runtime\": 0.0016213258107503254}',27,81),(2702,30,6,'{\"Runtime\": 0.0012501875559488933}',28,81),(2703,30,6,'{\"Runtime\": 0.0027259190877278647}',29,81),(2704,30,6,'{\"Runtime\": 0.005631208419799805}',30,81),(2705,30,6,'{\"Runtime\": 0.010996103286743164}',31,81),(2706,30,6,'{\"Runtime\": 0.07419133186340332}',32,81),(2707,30,6,'{\"Runtime\": 0.7849438190460205}',10,81),(2708,30,6,'{\"Runtime\": 0.3000767230987549}',11,81),(2709,30,6,'{\"Runtime\": 0.08815972010294597}',15,81),(2710,30,6,'{\"Runtime\": 0.8016931215922037}',5,81),(2711,30,6,'{\"Runtime\": 1.5207693576812744}',17,81),(2712,30,6,'{\"Runtime\": 0.30695509910583496}',20,81),(2713,30,6,'{\"Runtime\": 6.04516355196635}',12,81),(2714,30,6,'{\"Runtime\": 1.981841802597046}',33,81),(2715,30,6,'{\"Runtime\": 2.369953473409017}',16,81),(2716,30,6,'{\"Runtime\": 2.075658400853475}',34,81),(2717,30,6,'{\"Runtime\": 0.0006883144378662109}',1,80),(2718,30,6,'{\"Runtime\": 0.0007463296254475912}',13,80),(2719,30,6,'{\"Runtime\": 0.0007708867390950521}',26,80),(2720,30,6,'{\"Runtime\": 0.0008532206217447916}',8,80),(2721,30,6,'{\"Runtime\": 0.0016451676686604817}',27,80),(2722,30,6,'{\"Runtime\": 0.0012560685475667317}',28,80),(2723,30,6,'{\"Runtime\": 0.002744754155476888}',29,80),(2724,30,6,'{\"Runtime\": 0.00559695561726888}',30,80),(2725,30,6,'{\"Runtime\": 0.0109559694925944}',31,80),(2726,30,6,'{\"Runtime\": 0.07450326283772786}',32,80),(2727,30,6,'{\"Runtime\": 0.7913553714752197}',10,80),(2728,30,6,'{\"Runtime\": 0.29988869031270343}',11,80),(2729,30,6,'{\"Runtime\": 0.08902303377787273}',15,80),(2730,30,6,'{\"Runtime\": 0.7973992824554443}',5,80),(2731,30,6,'{\"Runtime\": 1.508732795715332}',17,80),(2732,30,6,'{\"Runtime\": 0.3072961171468099}',20,80),(2733,30,6,'{\"Runtime\": 6.000595172246297}',12,80),(2734,30,6,'{\"Runtime\": 1.9596986770629883}',33,80),(2735,30,6,'{\"Runtime\": 2.363365809122721}',16,80),(2736,30,6,'{\"Runtime\": 2.05757729212443}',34,80),(2737,30,6,'{\"Runtime\": \"failure\"}',1,24),(2738,30,6,'{\"Runtime\": \"failure\"}',42,24),(2739,30,6,'{\"Runtime\": \"failure\"}',11,24),(2740,30,6,'{\"Runtime\": \"failure\"}',10,24),(2741,30,6,'{}',8,29),(2742,30,6,'{\"Runtime\": \"failure\"}',9,29),(2743,30,6,'{\"Runtime\": \"failure\"}',12,29),(2744,29,5,'{\"TreeBuilding\": 11.903726999999998, \"Runtime\": 1885.0079556666667, \"ComputingNeighbors\": 1873.1042286666664}',33,85),(2745,30,6,'{}',16,29),(2746,30,6,'{}',18,29),(2747,30,6,'{}',19,29),(2748,30,6,'{\"Runtime\": \"failure\"}',11,29),(2749,30,6,'{\"Runtime\": \"failure\"}',10,29),(2750,30,6,'{}',8,94),(2751,30,6,'{}',9,94),(2752,30,6,'{}',10,94),(2753,30,6,'{}',11,94),(2754,30,6,'{\"Runtime\": 0.020678361256917317}',13,89),(2755,30,6,'{\"Runtime\": \"failure\"}',14,89),(2756,30,6,'{\"Runtime\": 7.911041657129924}',13,89),(2757,30,6,'{\"Runtime\": 77.49932503700256}',5,89),(2758,30,6,'{\"Runtime\": \"failure\"}',15,89),(2759,23,5,'{\"ComputingNeighbors\": 1855.5266846666666, \"TreeBuilding\": 11.762772333333332, \"Runtime\": 1867.289457}',33,85),(2760,26,5,'{\"TreeBuilding\": 53.96280833333333, \"Runtime\": 4877.671692, \"ComputingNeighbors\": 4823.708883666667}',12,85),(2761,30,6,'{\"Runtime\": \">9000\"}',17,89),(2762,30,6,'{\"Runtime\": \"failure\"}',20,89),(2763,26,5,'{\"TreeBuilding\": 11.619022999999999, \"Runtime\": 1834.9770156666666, \"ComputingNeighbors\": 1823.3579926666664}',33,85),(2764,29,5,'{\"TreeBuilding\": 2.0976993333333334, \"Runtime\": 7126.275793333334, \"ComputingNeighbors\": 7124.178094}',16,85),(2765,29,5,'{\"TreeBuilding\": 2.6e-05, \"Runtime\": 0.00022400000000000002, \"ComputingNeighbors\": 0.00019799999999999996}',13,101),(2766,29,5,'{\"TreeBuilding\": 0.0005486666666666666, \"Runtime\": 0.006242, \"ComputingNeighbors\": 0.005693333333333334}',14,101),(2767,29,5,'{\"TreeBuilding\": 0.001975666666666667, \"Runtime\": 0.024503, \"ComputingNeighbors\": 0.022527333333333333}',13,101),(2768,29,5,'{\"TreeBuilding\": 0.13961199999999999, \"Runtime\": 22.293176666666668, \"ComputingNeighbors\": 22.153564666666668}',5,101),(2769,29,5,'{\"TreeBuilding\": 0.19577733333333336, \"Runtime\": 8.857168666666666, \"ComputingNeighbors\": 8.661391333333333}',15,101),(2770,29,5,'{\"TreeBuilding\": 0.733049, \"Runtime\": 5.622152, \"ComputingNeighbors\": 4.889103}',17,101),(2771,29,5,'{\"TreeBuilding\": 2.4057, \"Runtime\": 515.806279, \"ComputingNeighbors\": 513.400579}',20,101),(2772,23,5,'{\"ComputingNeighbors\": 7128.435714333333, \"TreeBuilding\": 2.2920190000000003, \"Runtime\": 7130.727733333333}',16,85),(2773,23,5,'{\"ComputingNeighbors\": 0.00019833333333333335, \"TreeBuilding\": 2.633333333333333e-05, \"Runtime\": 0.00022466666666666666}',13,101),(2774,23,5,'{\"ComputingNeighbors\": 0.005699666666666666, \"TreeBuilding\": 0.0005546666666666666, \"Runtime\": 0.006254333333333334}',14,101),(2775,23,5,'{\"ComputingNeighbors\": 0.022952333333333335, \"TreeBuilding\": 0.002042666666666667, \"Runtime\": 0.024995}',13,101),(2776,23,5,'{\"ComputingNeighbors\": 22.421128, \"TreeBuilding\": 0.1416126666666667, \"Runtime\": 22.562740666666667}',5,101),(2777,23,5,'{\"ComputingNeighbors\": 8.906347333333335, \"TreeBuilding\": 0.199792, \"Runtime\": 9.106139333333333}',15,101),(2778,23,5,'{\"ComputingNeighbors\": 4.941306666666667, \"TreeBuilding\": 0.7435933333333334, \"Runtime\": 5.6849}',17,101),(2779,23,5,'{\"ComputingNeighbors\": 519.0554569999999, \"TreeBuilding\": 2.4408986666666665, \"Runtime\": 521.4963556666665}',20,101),(2780,26,5,'{\"TreeBuilding\": 2.1429776666666664, \"Runtime\": 7179.364960333333, \"ComputingNeighbors\": 7177.221982666667}',16,85),(2781,26,5,'{\"TreeBuilding\": 2.6666666666666663e-05, \"Runtime\": 0.00022766666666666668, \"ComputingNeighbors\": 0.000201}',13,34),(2782,26,5,'{\"TreeBuilding\": 0.0005616666666666667, \"Runtime\": 0.006430333333333333, \"ComputingNeighbors\": 0.005868666666666667}',14,34),(2783,26,5,'{\"TreeBuilding\": 0.0020183333333333334, \"Runtime\": 0.025869000000000003, \"ComputingNeighbors\": 0.02385066666666667}',13,34),(2784,26,5,'{\"TreeBuilding\": 0.14320066666666667, \"Runtime\": 25.131708333333336, \"ComputingNeighbors\": 24.988507666666667}',5,34),(2785,26,5,'{\"TreeBuilding\": 0.20535133333333333, \"Runtime\": 10.575803333333335, \"ComputingNeighbors\": 10.370452}',15,34),(2786,26,5,'{\"TreeBuilding\": 0.7581786666666667, \"Runtime\": 5.910695999999999, \"ComputingNeighbors\": 5.152517333333333}',17,34),(2787,30,6,'{\"Runtime\": 7813.129839817683}',12,89),(2788,30,6,'{\"Runtime\": \"failure\"}',33,89),(2789,30,6,'{\"Runtime\": \"failure\"}',16,89),(2790,30,6,'{\"Runtime\": 0.0029843648274739585}',27,92),(2791,30,6,'{\"Runtime\": 0.0024694601694742837}',27,92),(2792,30,6,'{\"Runtime\": 0.002682209014892578}',1,92),(2793,30,6,'{\"Runtime\": 0.002270301183064779}',13,92),(2794,30,6,'{\"Runtime\": 0.006411075592041016}',44,92),(2795,30,6,'{\"Runtime\": \"failure\"}',40,92),(2796,30,6,'{\"Runtime\": \"failure\"}',42,92),(2797,30,6,'{\"Runtime\": \"failure\"}',5,92),(2798,30,6,'{\"Runtime\": \"failure\"}',19,92),(2799,30,6,'{\"Runtime\": \"failure\"}',17,92),(2800,30,6,'{\"Runtime\": \"failure\"}',20,47),(2801,30,6,'{\"Runtime\": 0.014384269714355469}',38,49),(2802,30,6,'{\"Runtime\": 0.010942538579305014}',14,52),(2803,30,6,'{\"Runtime\": 0.0012215773264567058}',13,53),(2804,30,6,'{\"Runtime\": 0.0017293294270833333}',1,53),(2805,30,6,'{\"Runtime\": 0.01134196917215983}',40,50),(2806,30,6,'{\"Runtime\": 16.04728865623474}',12,51),(2807,30,6,'{\"Runtime\": 1.1441723505655925}',15,51),(2808,30,6,'{\"Runtime\": 16.60942069689433}',17,46),(2809,30,6,'{\"Runtime\": 0.06398471196492513}',13,46),(2810,30,6,'{\"Runtime\": 1.0648805300394695}',5,48),(2811,30,6,'{\"Simple MSE\": 0.07289646055643656}',22,58),(2812,26,5,'{\"TreeBuilding\": 2.4609376666666667, \"Runtime\": 610.9129119999999, \"ComputingNeighbors\": 608.4519743333333}',20,34),(2813,29,5,'{\"TreeBuilding\": 53.925959, \"Runtime\": 4902.219776333332, \"ComputingNeighbors\": 4848.293817333332}',12,101),(2814,23,5,'{\"ComputingNeighbors\": 4838.744607333333, \"TreeBuilding\": 54.68701333333333, \"Runtime\": 4893.431620666666}',12,101),(2815,29,5,'{\"TreeBuilding\": 11.911479666666667, \"Runtime\": 1531.9034376666666, \"ComputingNeighbors\": 1519.9919579999998}',33,101),(2816,30,6,'{\"Runtime\": \">9000\"}',4,58),(2817,30,6,'{\"Simple MSE\": 0.08858679540537802}',25,59),(2818,30,6,'{\"Simple MSE\": 0.01869008303047406}',6,59),(2819,30,6,'{\"Simple MSE\": 0.08222968636973918}',23,60),(2820,30,6,'{\"Simple MSE\": 0.005701866056563021}',21,60),(2821,30,6,'{\"Recall\": 0.5, \"ACC\": 0.5, \"Runtime\": 0.01607235272725423, \"MCC\": 0, \"MSE\": 0.035256410256410256, \"Precision\": 0.982371794871795}',2,62),(2822,30,6,'{\"Recall\": 0.5, \"ACC\": 0.5, \"Runtime\": 1.006594975789388, \"MCC\": 0, \"MSE\": 0.07107231920199501, \"Precision\": 0.9644638403990026}',3,62),(2823,30,6,'{\"Recall\": 0.5, \"ACC\": 0.5, \"Runtime\": 3.6878747940063477, \"MCC\": 0, \"MSE\": 0.029155524885706895, \"Precision\": 0.9854222375571465}',4,62),(2824,30,6,'{\"Recall\": 0.5, \"ACC\": 0.5, \"Runtime\": 18.785013278325398, \"MCC\": 0, \"MSE\": 0.0850327048864948, \"Precision\": 0.9574836475567525}',5,62),(2825,30,6,'{\"Recall\": 0.8322830196879482, \"ACC\": 0.8322830196879482, \"Runtime\": 0.003844658533732096, \"MCC\": 0.264597646150506, \"MSE\": 0.17703862660944206, \"Precision\": 0.5526749112956009}',6,62),(2826,23,5,'{\"ComputingNeighbors\": 1504.0070766666668, \"TreeBuilding\": 11.734873333333333, \"Runtime\": 1515.7419499999999}',33,101),(2827,26,5,'{\"TreeBuilding\": 53.38087166666666, \"Runtime\": 4870.781533666665, \"ComputingNeighbors\": 4817.400661999999}',12,34),(2828,30,6,'{\"Runtime\": \">9000\"}',7,62),(2829,30,6,'{\"Recall\": 0.7229046242774566, \"ACC\": 0.7229046242774566, \"Runtime\": 0.002024094263712565, \"MCC\": 0.08738562361068085, \"MSE\": 0.18031609195402298, \"Precision\": 0.5085644782365781}',21,62),(2830,30,6,'{\"Recall\": 0.5, \"ACC\": 0.5, \"Runtime\": 0.007957855860392252, \"MCC\": 0, \"MSE\": 0.094876660341556, \"Precision\": 0.9525616698292221}',22,62),(2831,30,6,'{\"Recall\": 0.7521258332519937, \"ACC\": 0.7521258332519937, \"Runtime\": 0.001922289530436198, \"MCC\": 0.30334117907983543, \"MSE\": 0.3771551724137931, \"Precision\": 0.5912400265957447}',23,62),(2832,30,6,'{\"Recall\": 0.7853124617830499, \"ACC\": 0.7853124617830499, \"Runtime\": 0.012590805689493815, \"MCC\": 0.35444074031145706, \"MSE\": 0.3132867132867133, \"Precision\": 0.6100795226463511}',24,62),(2833,30,6,'{\"Recall\": 0.5, \"ACC\": 0.5, \"Runtime\": 0.00037709871927897137, \"MCC\": 0, \"MSE\": 0.13392857142857142, \"Precision\": 0.9330357142857143}',25,62),(2834,30,6,'{\"Runtime\": 0.00715939203898112}',1,95),(2835,30,6,'{\"Runtime\": 0.0010581016540527344}',43,95),(2836,30,6,'{\"Runtime\": 0.16637690862019858}',11,95),(2837,30,6,'{}',8,26),(2838,30,6,'{}',9,26),(2839,30,6,'{}',19,26),(2840,26,5,'{\"TreeBuilding\": 11.581234666666667, \"Runtime\": 1648.5680356666664, \"ComputingNeighbors\": 1636.9868010000002}',33,34),(2841,29,5,'{\"TreeBuilding\": 2.0936883333333336, \"Runtime\": 7096.135259333333, \"ComputingNeighbors\": 7094.041570999999}',16,101),(2842,29,5,'{\"TreeBuilding\": 2.6e-05, \"Runtime\": 0.00022333333333333333, \"ComputingNeighbors\": 0.00019733333333333332}',13,90),(2843,29,5,'{\"TreeBuilding\": 0.0005639999999999999, \"Runtime\": 0.006092666666666666, \"ComputingNeighbors\": 0.005528666666666667}',14,90),(2844,29,5,'{\"TreeBuilding\": 0.0019950000000000002, \"Runtime\": 0.024075000000000003, \"ComputingNeighbors\": 0.02208}',13,90),(2845,29,5,'{\"TreeBuilding\": 0.13990866666666668, \"Runtime\": 21.528014333333335, \"ComputingNeighbors\": 21.388105666666664}',5,90),(2846,29,5,'{\"TreeBuilding\": 0.19633866666666666, \"Runtime\": 7.907213666666667, \"ComputingNeighbors\": 7.710875000000001}',15,90),(2847,29,5,'{\"TreeBuilding\": 0.7319513333333333, \"Runtime\": 5.463270333333334, \"ComputingNeighbors\": 4.731319}',17,90),(2848,29,5,'{\"TreeBuilding\": 2.411998, \"Runtime\": 448.84007766666656, \"ComputingNeighbors\": 446.42807966666663}',20,90),(2849,23,5,'{\"ComputingNeighbors\": 7097.301885, \"TreeBuilding\": 2.124371, \"Runtime\": 7099.426256}',16,101),(2850,26,5,'{\"TreeBuilding\": 2.0588656666666667, \"Runtime\": 6953.376578333334, \"ComputingNeighbors\": 6951.317712666667}',16,34),(2851,26,5,'{\"TreeBuilding\": 2.5e-05, \"Runtime\": 0.00022, \"ComputingNeighbors\": 0.000195}',13,100),(2852,26,5,'{\"TreeBuilding\": 0.0005493333333333333, \"Runtime\": 0.005810666666666666, \"ComputingNeighbors\": 0.005261333333333333}',14,100),(2853,26,5,'{\"TreeBuilding\": 0.0019623333333333333, \"Runtime\": 0.022498666666666667, \"ComputingNeighbors\": 0.020536333333333334}',13,100),(2854,26,5,'{\"TreeBuilding\": 0.13771233333333333, \"Runtime\": 19.092214666666667, \"ComputingNeighbors\": 18.954502333333334}',5,100),(2855,26,5,'{\"TreeBuilding\": 0.18739133333333333, \"Runtime\": 5.957708666666666, \"ComputingNeighbors\": 5.770317333333334}',15,100),(2856,26,5,'{\"TreeBuilding\": 0.7013286666666666, \"Runtime\": 4.989177000000001, \"ComputingNeighbors\": 4.287848333333334}',17,100),(2857,26,5,'{\"TreeBuilding\": 2.296815666666667, \"Runtime\": 335.192392, \"ComputingNeighbors\": 332.89557633333334}',20,100),(2858,29,5,'{\"TreeBuilding\": 49.37000633333333, \"Runtime\": 4611.946200333333, \"ComputingNeighbors\": 4562.576194}',12,90),(2859,29,5,'{\"TreeBuilding\": 11.136570333333333, \"Runtime\": 1262.6641346666665, \"ComputingNeighbors\": 1251.5275643333334}',33,90),(2860,26,5,'{\"TreeBuilding\": 48.096254666666674, \"Runtime\": 4554.840839666666, \"ComputingNeighbors\": 4506.7445849999995}',12,100),(2861,26,5,'{\"TreeBuilding\": 11.010105333333334, \"Runtime\": 1001.8838219999999, \"ComputingNeighbors\": 990.8737166666666}',33,100),(2862,29,5,'{\"TreeBuilding\": 1.980867, \"Runtime\": 6692.567142333333, \"ComputingNeighbors\": 6690.586275333334}',16,90),(2863,29,5,'{\"TreeBuilding\": 2.5333333333333334e-05, \"Runtime\": 0.00022066666666666667, \"ComputingNeighbors\": 0.0001953333333333333}',13,100),(2864,29,5,'{\"TreeBuilding\": 0.000579, \"Runtime\": 0.0058003333333333336, \"ComputingNeighbors\": 0.005221333333333334}',14,100),(2865,29,5,'{\"TreeBuilding\": 0.0019430000000000003, \"Runtime\": 0.022313333333333334, \"ComputingNeighbors\": 0.020370333333333334}',13,100),(2866,29,5,'{\"TreeBuilding\": 0.13654, \"Runtime\": 18.72446066666667, \"ComputingNeighbors\": 18.587920666666665}',5,100),(2867,29,5,'{\"TreeBuilding\": 0.18409233333333333, \"Runtime\": 5.705193666666666, \"ComputingNeighbors\": 5.521101333333334}',15,100),(2868,29,5,'{\"TreeBuilding\": 0.6917116666666668, \"Runtime\": 4.856403333333333, \"ComputingNeighbors\": 4.164691666666666}',17,100),(2869,29,5,'{\"TreeBuilding\": 2.261550333333333, \"Runtime\": 331.873877, \"ComputingNeighbors\": 329.61232666666666}',20,100),(2870,26,5,'{\"TreeBuilding\": 1.970439, \"Runtime\": 6666.930138333333, \"ComputingNeighbors\": 6664.959699333333}',16,100),(2871,29,5,'{\"TreeBuilding\": 46.714796, \"Runtime\": 4466.282185666667, \"ComputingNeighbors\": 4419.567389666667}',12,100),(2872,29,5,'{\"TreeBuilding\": 10.491143333333333, \"Runtime\": 821.246855, \"ComputingNeighbors\": 810.7557116666667}',33,100),(2873,29,5,'{\"TreeBuilding\": 1.8917543333333333, \"Runtime\": 6203.538040333334, \"ComputingNeighbors\": 6201.646286}',16,100),(2874,31,8,'{\"Runtime\": \"failure\"}',32,41),(2875,31,8,'{\"Runtime\": \"failure\"}',1,41),(2876,31,8,'{\"Runtime\": \"failure\"}',42,41),(2877,31,8,'{\"Runtime\": \"failure\"}',31,41),(2878,31,8,'{\"Runtime\": \"failure\"}',43,41),(2879,31,8,'{\"Runtime\": \"failure\"}',10,41),(2880,31,8,'{\"Runtime\": 20.717815666666667}',39,42),(2881,31,8,'{\"Runtime\": 15.692853}',39,43),(2882,31,8,'{\"Runtime\": 20.700291}',39,44),(2883,31,8,'{\"Runtime\": 0.007852999999999999}',27,91),(2884,31,8,'{\"Runtime\": 0.014073333333333334}',1,79),(2885,31,8,'{\"Runtime\": 0.005807}',13,79),(2886,31,8,'{\"Runtime\": 0.009155666666666668}',26,79),(2887,31,8,'{\"Runtime\": 0.009178333333333335}',8,79),(2888,31,8,'{\"Runtime\": 20.081174666666666}',39,21),(2889,31,8,'{\"Runtime\": 25.704746666666665}',39,22),(2890,31,8,'{\"Runtime\": 0.0035776666666666665}',27,57),(2891,31,8,'{\"Runtime\": 16.036308666666667, \"TreeBuilding\": 3.482614}',42,8),(2892,31,8,'{\"Runtime\": 23.904731666666663, \"TreeBuilding\": 5.375028333333333}',42,2),(2893,31,8,'{\"Runtime\": 5.206174333333333, \"TreeBuilding\": 0.7974956666666667}',42,6),(2894,31,8,'{\"Runtime\": 4.210844000000001, \"TreeBuilding\": 0.7972323333333334}',42,4),(2895,31,8,'{\"Runtime\": 17.002306666666666, \"TreeBuilding\": 3.0989683333333335}',42,10),(2896,31,8,'{\"Runtime\": \"failure\"}',42,9),(2897,31,8,'{\"Runtime\": 17.12371, \"TreeBuilding\": 5.1622753333333335}',42,5),(2898,31,8,'{\"Runtime\": 4.7966809999999995, \"TreeBuilding\": 0.7960153333333334}',42,3),(2899,31,8,'{\"Runtime\": 29.736583, \"TreeBuilding\": 16.091054333333336}',42,7),(2900,31,8,'{\"Runtime\": 0.010423999999999998, \"BaseCases\": 2725, \"ComputingNeighbors\": 0.0011436666666666667, \"TreeBuilding\": 0.0002613333333333333}',13,33),(2901,31,8,'{\"Runtime\": 0.040496666666666674, \"BaseCases\": 128056, \"ComputingNeighbors\": 0.028888, \"TreeBuilding\": 0.005376333333333333}',14,33),(2902,31,8,'{\"Runtime\": 0.18350933333333333, \"BaseCases\": 593447, \"ComputingNeighbors\": 0.13638333333333333, \"TreeBuilding\": 0.02899466666666667}',13,33),(2903,31,8,'{\"Runtime\": 40.883257333333326, \"BaseCases\": 27937223, \"ComputingNeighbors\": 28.123867, \"TreeBuilding\": 12.736855666666665}',5,33),(2904,31,8,'{\"Runtime\": 119.19923166666668, \"BaseCases\": 281323326, \"ComputingNeighbors\": 96.65862866666667, \"TreeBuilding\": 22.516560666666667}',15,33),(2905,31,8,'{\"Runtime\": 181.347743, \"BaseCases\": 161975455, \"ComputingNeighbors\": 56.47680466666666, \"TreeBuilding\": 124.73891033333332}',17,33),(2906,31,8,'{\"Runtime\": \">9000\"}',20,33),(2907,31,8,'{\"Runtime\": 4791.144452333333, \"BaseCases\": 2737482185, \"ComputingNeighbors\": 3327.7568090000004, \"TreeBuilding\": 1463.3361743333332}',12,33),(2908,31,8,'{\"Runtime\": 5975.6331, \"BaseCases\": 7930285337, \"ComputingNeighbors\": 4760.549292000001, \"TreeBuilding\": 1214.945188}',33,33),(2909,31,8,'{\"Runtime\": 8313.897145333334, \"BaseCases\": 8320081059, \"ComputingNeighbors\": 5950.444480333333, \"TreeBuilding\": 2363.4071306666665}',16,33),(2910,31,8,'{}',13,99),(2911,31,8,'{}',14,99),(2912,31,8,'{}',13,99),(2913,31,8,'{}',5,99),(2914,31,8,'{}',15,99),(2915,31,8,'{\"Runtime\": \">9000\"}',17,99),(2916,31,8,'{\"Runtime\": \">9000\"}',20,99),(2917,31,8,'{}',12,99),(2918,31,8,'{\"Runtime\": \">9000\"}',33,99),(2919,31,8,'{}',16,99),(2920,31,8,'{\"Runtime\": 0.005748, \"BaseCases\": 3138, \"ComputingNeighbors\": 0.0003193333333333333, \"TreeBuilding\": 0.00016266666666666667}',13,102),(2921,31,8,'{\"Runtime\": 0.014388666666666668, \"BaseCases\": 91368, \"ComputingNeighbors\": 0.007110999999999999, \"TreeBuilding\": 0.002381}',14,102),(2922,31,8,'{\"Runtime\": 0.04554133333333334, \"BaseCases\": 319392, \"ComputingNeighbors\": 0.029728333333333332, \"TreeBuilding\": 0.009241}',13,102),(2923,31,8,'{\"Runtime\": 18.422053666666667, \"BaseCases\": 14197711, \"ComputingNeighbors\": 17.905542, \"TreeBuilding\": 0.49413233333333334}',5,102),(2924,31,8,'{\"Runtime\": 13.183446000000002, \"BaseCases\": 36510060, \"ComputingNeighbors\": 12.103901, \"TreeBuilding\": 1.0706013333333333}',15,102),(2925,31,8,'{\"Runtime\": 15.021953000000002, \"BaseCases\": 32750435, \"ComputingNeighbors\": 9.744293666666668, \"TreeBuilding\": 5.157365333333334}',17,102),(2926,31,8,'{\"Runtime\": 1242.0784316666666, \"BaseCases\": 3932684997, \"ComputingNeighbors\": 1240.042612, \"TreeBuilding\": 1.8532476666666666}',20,102),(2927,31,8,'{\"Runtime\": 3626.1603303333336, \"BaseCases\": 2869704944, \"ComputingNeighbors\": 3578.7384096666665, \"TreeBuilding\": 47.364653}',12,102),(2928,31,8,'{\"Runtime\": 1338.6757696666668, \"BaseCases\": 2541594775, \"ComputingNeighbors\": 1282.30273, \"TreeBuilding\": 56.239602999999995}',33,102),(2929,31,8,'{\"Runtime\": 5249.147091, \"BaseCases\": 8241031045, \"ComputingNeighbors\": 5210.170973333334, \"TreeBuilding\": 38.925815666666665}',16,102),(2930,31,8,'{\"Runtime\": 0.007012, \"BaseCases\": 3138, \"ComputingNeighbors\": 0.00029833333333333334, \"TreeBuilding\": 0.0001646666666666667}',13,85),(2931,31,8,'{\"Runtime\": 0.015558333333333335, \"BaseCases\": 91368, \"ComputingNeighbors\": 0.00726, \"TreeBuilding\": 0.0024193333333333332}',14,85),(2932,31,8,'{\"Runtime\": 0.04540433333333333, \"BaseCases\": 319392, \"ComputingNeighbors\": 0.029587000000000002, \"TreeBuilding\": 0.009234666666666667}',13,85),(2933,31,8,'{\"Runtime\": 18.410061, \"BaseCases\": 14197711, \"ComputingNeighbors\": 17.898717666666666, \"TreeBuilding\": 0.4934636666666667}',5,85),(2934,31,8,'{\"Runtime\": 13.220750666666667, \"BaseCases\": 36510060, \"ComputingNeighbors\": 12.139250333333331, \"TreeBuilding\": 1.055796}',15,85),(2935,31,8,'{\"Runtime\": 15.021303666666666, \"BaseCases\": 32750435, \"ComputingNeighbors\": 9.751957333333333, \"TreeBuilding\": 5.160369333333333}',17,85),(2936,31,8,'{\"Runtime\": 1242.1067643333333, \"BaseCases\": 3932684997, \"ComputingNeighbors\": 1239.9720116666667, \"TreeBuilding\": 1.851853}',20,85),(2937,31,8,'{\"Runtime\": 3622.3523390000005, \"BaseCases\": 2869704944, \"ComputingNeighbors\": 3574.886597, \"TreeBuilding\": 47.41098766666667}',12,85),(2938,31,8,'{\"Runtime\": 1325.772148, \"BaseCases\": 2541594775, \"ComputingNeighbors\": 1269.332239, \"TreeBuilding\": 56.29987633333334}',33,85),(2939,31,8,'{\"Runtime\": 5251.1649063333325, \"BaseCases\": 8241031045, \"ComputingNeighbors\": 5212.046865333333, \"TreeBuilding\": 39.06210166666667}',16,85),(2940,31,8,'{\"Runtime\": 0.004729666666666667, \"BaseCases\": 3087, \"ComputingNeighbors\": 0.00029966666666666667, \"TreeBuilding\": 0.00016300000000000003}',13,101),(2941,31,8,'{\"Runtime\": 0.013744000000000001, \"BaseCases\": 82022, \"ComputingNeighbors\": 0.006926000000000001, \"TreeBuilding\": 0.0024316666666666666}',14,101),(2942,31,8,'{\"Runtime\": 0.04310033333333333, \"BaseCases\": 281697, \"ComputingNeighbors\": 0.028155333333333334, \"TreeBuilding\": 0.009249333333333333}',13,101),(2943,31,8,'{\"Runtime\": 15.742739333333333, \"BaseCases\": 11316977, \"ComputingNeighbors\": 15.231194666666667, \"TreeBuilding\": 0.4935716666666667}',5,101),(2944,31,8,'{\"Runtime\": 11.149036, \"BaseCases\": 26935901, \"ComputingNeighbors\": 10.073237333333333, \"TreeBuilding\": 1.0558976666666668}',15,101),(2945,31,8,'{\"Runtime\": 14.318918000000002, \"BaseCases\": 29090095, \"ComputingNeighbors\": 9.030856666666667, \"TreeBuilding\": 5.165783666666667}',17,101),(2946,31,8,'{\"Runtime\": 955.3450773333334, \"BaseCases\": 2731283746, \"ComputingNeighbors\": 953.3065793333334, \"TreeBuilding\": 1.853518}',20,101),(2947,31,8,'{\"Runtime\": 3303.890018, \"BaseCases\": 2453954001, \"ComputingNeighbors\": 3256.3749746666667, \"TreeBuilding\": 47.46568200000001}',12,101),(2948,31,8,'{\"Runtime\": 1140.292291, \"BaseCases\": 1846538229, \"ComputingNeighbors\": 1083.663477, \"TreeBuilding\": 56.49141133333333}',33,101),(2949,31,8,'{\"Runtime\": 5065.679534, \"BaseCases\": 7754919823, \"ComputingNeighbors\": 5026.560130666668, \"TreeBuilding\": 39.06350833333334}',16,101),(2950,31,8,'{\"Runtime\": 0.001233, \"BaseCases\": 3138, \"ComputingNeighbors\": 0.00034700000000000003, \"TreeBuilding\": 0.00018066666666666665}',13,103),(2951,31,8,'{\"Runtime\": 0.015667666666666663, \"BaseCases\": 90177, \"ComputingNeighbors\": 0.008471333333333332, \"TreeBuilding\": 0.0023523333333333334}',14,103),(2952,31,8,'{\"Runtime\": 0.04866033333333333, \"BaseCases\": 315619, \"ComputingNeighbors\": 0.03301966666666667, \"TreeBuilding\": 0.009270333333333334}',13,103),(2953,31,8,'{\"Runtime\": 24.025105, \"BaseCases\": 14189461, \"ComputingNeighbors\": 23.51619633333333, \"TreeBuilding\": 0.49354666666666663}',5,103),(2954,31,8,'{\"Runtime\": 9.022407000000001, \"BaseCases\": 35963565, \"ComputingNeighbors\": 7.951973333333332, \"TreeBuilding\": 1.0551126666666666}',15,103),(2955,31,8,'{\"Runtime\": 16.003649, \"BaseCases\": 32146240, \"ComputingNeighbors\": 10.719767666666668, \"TreeBuilding\": 5.1733253333333336}',17,103),(2956,31,8,'{\"Runtime\": 281.2916896666666, \"BaseCases\": 3837480952, \"ComputingNeighbors\": 279.238499, \"TreeBuilding\": 1.8548229999999999}',20,103),(2957,31,8,'{\"Runtime\": 4745.375578000001, \"BaseCases\": 2851648317, \"ComputingNeighbors\": 4697.811985666667, \"TreeBuilding\": 47.50653966666666}',12,103),(2958,31,8,'{\"Runtime\": 747.2313089999999, \"BaseCases\": 2493998410, \"ComputingNeighbors\": 690.4255056666667, \"TreeBuilding\": 56.666969333333334}',33,103),(2959,31,8,'{\"Runtime\": 7058.380115, \"BaseCases\": 8217322482, \"ComputingNeighbors\": 7019.077226, \"TreeBuilding\": 39.245849}',16,103),(2960,31,8,'{\"Runtime\": 0.008461000000000002, \"BaseCases\": 3194, \"ComputingNeighbors\": 0.000324, \"TreeBuilding\": 0.00019899999999999999}',13,35),(2961,31,8,'{\"Runtime\": 0.01690966666666667, \"BaseCases\": 101428, \"ComputingNeighbors\": 0.008061333333333332, \"TreeBuilding\": 0.0024226666666666667}',14,35),(2962,31,8,'{\"Runtime\": 0.04321766666666666, \"BaseCases\": 359800, \"ComputingNeighbors\": 0.03253266666666667, \"TreeBuilding\": 0.009230333333333333}',13,35),(2963,31,8,'{\"Runtime\": 18.987070666666668, \"BaseCases\": 14841413, \"ComputingNeighbors\": 18.477614666666668, \"TreeBuilding\": 0.49357333333333336}',5,35),(2964,31,8,'{\"Runtime\": 14.103568666666668, \"BaseCases\": 41002019, \"ComputingNeighbors\": 12.997009, \"TreeBuilding\": 1.0742543333333332}',15,35),(2965,31,8,'{\"Runtime\": 16.169236, \"BaseCases\": 37624410, \"ComputingNeighbors\": 10.870523, \"TreeBuilding\": 5.177611333333333}',17,35),(2966,31,8,'{\"Runtime\": 1328.252288, \"BaseCases\": 4504040034, \"ComputingNeighbors\": 1326.2028383333334, \"TreeBuilding\": 1.8540909999999997}',20,35),(2967,31,8,'{\"Runtime\": 3705.982462666667, \"BaseCases\": 2975132390, \"ComputingNeighbors\": 3658.3731956666666, \"TreeBuilding\": 47.54950766666667}',12,35),(2968,31,8,'{\"Runtime\": 1401.546079, \"BaseCases\": 2789550688, \"ComputingNeighbors\": 1344.7419586666667, \"TreeBuilding\": 56.65141933333333}',33,35),(2969,31,8,'{\"Runtime\": 5270.709675666666, \"BaseCases\": 8291912889, \"ComputingNeighbors\": 5231.377741666667, \"TreeBuilding\": 39.282266}',16,35),(2970,31,8,'{\"Runtime\": 0.006307333333333332, \"BaseCases\": 3087, \"ComputingNeighbors\": 0.00033233333333333335, \"TreeBuilding\": 0.000162}',13,34),(2971,31,8,'{\"Runtime\": 0.014711000000000002, \"BaseCases\": 86586, \"ComputingNeighbors\": 0.0070803333333333334, \"TreeBuilding\": 0.002378}',14,34),(2972,31,8,'{\"Runtime\": 0.04096566666666667, \"BaseCases\": 299100, \"ComputingNeighbors\": 0.030232, \"TreeBuilding\": 0.009265666666666667}',13,34),(2973,31,8,'{\"Runtime\": 16.984892666666667, \"BaseCases\": 12648722, \"ComputingNeighbors\": 16.477014, \"TreeBuilding\": 0.49313233333333334}',5,34),(2974,31,8,'{\"Runtime\": 12.172268666666668, \"BaseCases\": 31194903, \"ComputingNeighbors\": 11.089772000000002, \"TreeBuilding\": 1.0567843333333335}',15,34),(2975,31,8,'{\"Runtime\": 14.712962666666664, \"BaseCases\": 30789926, \"ComputingNeighbors\": 9.418551333333333, \"TreeBuilding\": 5.178252333333334}',17,34),(2976,31,8,'{\"Runtime\": 1117.4833806666668, \"BaseCases\": 3259849974, \"ComputingNeighbors\": 1115.4480283333332, \"TreeBuilding\": 1.8531279999999999}',20,34),(2977,31,8,'{\"Runtime\": 3462.683229, \"BaseCases\": 2658802890, \"ComputingNeighbors\": 3415.017424333333, \"TreeBuilding\": 47.607705}',12,34),(2978,31,8,'{\"Runtime\": 1229.2395733333333, \"BaseCases\": 2155931120, \"ComputingNeighbors\": 1172.4457243333334, \"TreeBuilding\": 56.65359566666666}',33,34),(2979,31,8,'{\"Runtime\": 5160.262102666667, \"BaseCases\": 8003118069, \"ComputingNeighbors\": 5121.016108666668, \"TreeBuilding\": 39.18750933333333}',16,34),(2980,31,8,'{\"Runtime\": 0.0055916666666666675, \"BaseCases\": 2963, \"ComputingNeighbors\": 0.0003226666666666667, \"TreeBuilding\": 0.000164}',13,100),(2981,31,8,'{\"Runtime\": 0.014735333333333335, \"BaseCases\": 72434, \"ComputingNeighbors\": 0.006337333333333334, \"TreeBuilding\": 0.0024189999999999997}',14,100),(2982,31,8,'{\"Runtime\": 0.036805666666666674, \"BaseCases\": 239981, \"ComputingNeighbors\": 0.026054000000000004, \"TreeBuilding\": 0.009302}',13,100),(2983,31,8,'{\"Runtime\": 12.725807666666668, \"BaseCases\": 8326193, \"ComputingNeighbors\": 12.218494, \"TreeBuilding\": 0.49335766666666664}',5,100),(2984,31,8,'{\"Runtime\": 8.971458, \"BaseCases\": 18355995, \"ComputingNeighbors\": 7.893522999999999, \"TreeBuilding\": 1.0563326666666668}',15,100),(2985,31,8,'{\"Runtime\": 13.435794, \"BaseCases\": 25219845, \"ComputingNeighbors\": 8.138425, \"TreeBuilding\": 5.177233666666667}',17,100),(2986,31,8,'{\"Runtime\": 566.2522583333333, \"BaseCases\": 1700887285, \"ComputingNeighbors\": 564.2037803333334, \"TreeBuilding\": 1.852959}',20,100),(2987,31,8,'{\"Runtime\": 2865.738819, \"BaseCases\": 1894948927, \"ComputingNeighbors\": 2818.091306, \"TreeBuilding\": 47.58776266666666}',12,100),(2988,31,8,'{\"Runtime\": 935.7333806666666, \"BaseCases\": 1210647432, \"ComputingNeighbors\": 878.8721806666666, \"TreeBuilding\": 56.72751333333334}',33,100),(2989,31,8,'{\"Runtime\": 4751.574898333333, \"BaseCases\": 6965803590, \"ComputingNeighbors\": 4712.330266, \"TreeBuilding\": 39.18382833333334}',16,100),(2990,31,8,'{\"Runtime\": 0.004522333333333333, \"BaseCases\": 3016, \"ComputingNeighbors\": 0.000299, \"TreeBuilding\": 0.00016299999999999998}',13,104),(2991,31,8,'{\"Runtime\": 0.013439999999999999, \"BaseCases\": 75278, \"ComputingNeighbors\": 0.006488666666666666, \"TreeBuilding\": 0.0024446666666666666}',14,104),(2992,31,8,'{\"Runtime\": 0.043154666666666675, \"BaseCases\": 252384, \"ComputingNeighbors\": 0.026699666666666667, \"TreeBuilding\": 0.009287333333333333}',13,104),(2993,31,8,'{\"Runtime\": 13.633614, \"BaseCases\": 9183443, \"ComputingNeighbors\": 13.120205333333336, \"TreeBuilding\": 0.49335733333333337}',5,104),(2994,31,8,'{\"Runtime\": 9.604398666666667, \"BaseCases\": 20690308, \"ComputingNeighbors\": 8.52978, \"TreeBuilding\": 1.0560166666666666}',15,104),(2995,31,8,'{\"Runtime\": 13.697141333333335, \"BaseCases\": 26335183, \"ComputingNeighbors\": 8.392479000000002, \"TreeBuilding\": 5.176018666666667}',17,104),(2996,31,8,'{\"Runtime\": 665.6285969999999, \"BaseCases\": 1973922611, \"ComputingNeighbors\": 663.585316, \"TreeBuilding\": 1.8516356666666667}',20,104),(2997,31,8,'{\"Runtime\": 3004.9202153333335, \"BaseCases\": 2070459873, \"ComputingNeighbors\": 2957.2742593333332, \"TreeBuilding\": 47.590202}',12,104),(2998,31,8,'{\"Runtime\": 996.1823946666667, \"BaseCases\": 1384412300, \"ComputingNeighbors\": 939.4190673333334, \"TreeBuilding\": 56.62406000000001}',33,104),(2999,31,8,'{\"Runtime\": 4861.250589333333, \"BaseCases\": 7234653139, \"ComputingNeighbors\": 4821.94769, \"TreeBuilding\": 39.245669}',16,104),(3000,31,8,'{\"Runtime\": 0.0026593333333333334, \"BaseCases\": 4545, \"ComputingNeighbors\": 0.001675, \"TreeBuilding\": 0.00026333333333333336}',13,32),(3001,31,8,'{\"Runtime\": 0.063784, \"BaseCases\": 221952, \"ComputingNeighbors\": 0.052273999999999994, \"TreeBuilding\": 0.005396333333333334}',14,32),(3002,31,8,'{\"Runtime\": 0.3353473333333333, \"BaseCases\": 1270285, \"ComputingNeighbors\": 0.29653233333333334, \"TreeBuilding\": 0.029068}',13,32),(3003,31,8,'{\"Runtime\": 46.35417833333333, \"BaseCases\": 35377796, \"ComputingNeighbors\": 33.58719, \"TreeBuilding\": 12.745482}',5,32),(3004,31,8,'{\"Runtime\": 187.13760200000002, \"BaseCases\": 542875068, \"ComputingNeighbors\": 165.98245666666665, \"TreeBuilding\": 21.13124566666667}',15,32),(3005,31,8,'{\"Runtime\": 327.01957500000003, \"BaseCases\": 589569405, \"ComputingNeighbors\": 202.14925733333334, \"TreeBuilding\": 124.72206466666667}',17,32),(3006,31,8,'{\"Runtime\": \">9000\"}',20,32),(3007,31,8,'{\"Runtime\": 5820.04085, \"BaseCases\": 3659647125, \"ComputingNeighbors\": 4356.865846666667, \"TreeBuilding\": 1463.1265303333332}',12,32),(3008,31,8,'{\"Runtime\": \">9000\"}',33,32),(3009,31,8,'{\"Runtime\": 8806.47661, \"BaseCases\": 9362812333, \"ComputingNeighbors\": 6444.7573409999995, \"TreeBuilding\": 2361.672563}',16,32),(3010,31,8,'{\"Runtime\": 0.004555, \"BaseCases\": 3047, \"ComputingNeighbors\": 0.00029466666666666666, \"TreeBuilding\": 0.00016633333333333333}',13,90),(3011,31,8,'{\"Runtime\": 0.014380666666666667, \"BaseCases\": 78384, \"ComputingNeighbors\": 0.006644666666666667, \"TreeBuilding\": 0.002381333333333334}',14,90),(3012,31,8,'{\"Runtime\": 0.043208666666666666, \"BaseCases\": 266021, \"ComputingNeighbors\": 0.027420333333333335, \"TreeBuilding\": 0.009276333333333333}',13,90),(3013,31,8,'{\"Runtime\": 14.618656666666666, \"BaseCases\": 10176459, \"ComputingNeighbors\": 14.116595333333334, \"TreeBuilding\": 0.4937783333333334}',5,90),(3014,31,8,'{\"Runtime\": 10.378549333333332, \"BaseCases\": 23498350, \"ComputingNeighbors\": 9.309135, \"TreeBuilding\": 1.056908}',15,90),(3015,31,8,'{\"Runtime\": 14.004760333333332, \"BaseCases\": 27614934, \"ComputingNeighbors\": 8.704618333333334, \"TreeBuilding\": 5.177840333333333}',17,90),(3016,31,8,'{\"Runtime\": 798.6213860000001, \"BaseCases\": 2311149889, \"ComputingNeighbors\": 796.5901993333333, \"TreeBuilding\": 1.8513566666666668}',20,90),(3017,31,8,'{\"Runtime\": 3150.8317306666668, \"BaseCases\": 2257227119, \"ComputingNeighbors\": 3103.249441, \"TreeBuilding\": 47.522243}',12,90),(3018,31,8,'{\"Runtime\": 1063.183744, \"BaseCases\": 1593351863, \"ComputingNeighbors\": 1006.4317916666665, \"TreeBuilding\": 56.61814533333333}',33,90),(3019,31,8,'{\"Runtime\": 4964.627798, \"BaseCases\": 7498187466, \"ComputingNeighbors\": 4925.3687543333335, \"TreeBuilding\": 39.20594033333333}',16,90),(3020,31,8,'{\"Runtime\": 4.423315333333334}',5,48),(3021,31,8,'{\"Runtime\": 61.34816866666666}',12,51),(3022,31,8,'{\"Runtime\": 1.922785}',15,51),(3023,31,8,'{\"Runtime\": 1544.899716}',20,47),(3024,31,8,'{\"Runtime\": 31.53193333333333}',17,46),(3025,31,8,'{\"Runtime\": 0.053148}',13,46),(3026,31,8,'{\"Runtime\": 0.011682999999999999}',38,49),(3027,31,8,'{\"Runtime\": 0.005521666666666667}',40,50),(3028,31,8,'{\"Runtime\": 0.006481000000000001}',14,52),(3029,31,8,'{\"Runtime\": 0.00010300000000000001}',13,53),(3030,31,8,'{\"Runtime\": 8.033333333333334e-05}',1,53),(3031,31,8,'{\"Runtime\": 0.0055580000000000004}',27,61),(3032,31,8,'{\"Runtime\": 0.0021426666666666664, \"TreeBuilding\": 0.0005983333333333333}',1,77),(3033,31,8,'{\"Runtime\": 0.02681333333333333, \"TreeBuilding\": 0.003689666666666666}',44,77),(3034,31,8,'{\"Runtime\": 20.208788000000002, \"TreeBuilding\": 0.03810366666666667}',38,77),(3035,31,8,'{\"Runtime\": 43.929328999999996, \"TreeBuilding\": 1.2839786666666664}',15,77),(3036,31,8,'{\"Runtime\": 142.91011766666668, \"TreeBuilding\": 0.8371106666666667}',5,77),(3037,31,8,'{\"Runtime\": \">9000\"}',16,77),(3038,31,8,'{}',1,78),(3039,31,8,'{}',44,78),(3040,31,8,'{}',38,78),(3041,31,8,'{\"Runtime\": 4.612309}',28,17),(3042,31,8,'{\"Runtime\": 0.277142}',41,17),(3043,31,8,'{\"Runtime\": 135.51377333333335}',42,17),(3044,31,8,'{\"Runtime\": 0.5328913333333333}',38,17),(3045,31,8,'{\"Runtime\": 16.702212}',19,17),(3046,31,8,'{\"Runtime\": 4.409959333333334}',39,17),(3047,31,8,'{\"Runtime\": 1592.8313710000002}',5,17),(3048,31,8,'{\"Runtime\": \">9000\"}',12,17),(3049,31,8,'{\"Runtime\": \">9000\"}',16,17),(3050,31,8,'{\"Runtime\": 604.0393966666667}',34,17),(3051,31,8,'{\"Runtime\": 11.459677333333332}',28,18),(3052,31,8,'{\"Runtime\": 0.853005}',41,18),(3053,31,8,'{\"Runtime\": 411.4625476666667}',42,18),(3054,31,8,'{\"Runtime\": 301.16627866666664}',38,18),(3055,31,8,'{\"Runtime\": 82.83141833333333}',19,18),(3056,31,8,'{\"Runtime\": 35.955139333333335}',39,18),(3057,31,8,'{\"Runtime\": \">9000\"}',5,18),(3058,31,8,'{\"Runtime\": \">9000\"}',12,18),(3059,31,8,'{\"Runtime\": \">9000\"}',16,18),(3060,31,8,'{\"Runtime\": \">9000\"}',34,18),(3061,31,8,'{\"Runtime\": 0.09400433333333331}',28,19),(3062,31,8,'{\"Runtime\": 0.04797966666666667}',41,19),(3063,31,8,'{\"Runtime\": 1.0938473333333334}',42,19),(3064,31,8,'{\"Runtime\": 0.3213006666666667}',38,19),(3065,31,8,'{\"Runtime\": 8.457629}',19,19),(3066,31,8,'{\"Runtime\": 5.834179666666667}',39,19),(3067,31,8,'{\"Runtime\": 48.75896433333333}',5,19),(3068,31,8,'{\"Runtime\": 65.95594333333334}',12,19),(3069,31,8,'{\"Runtime\": 51.718574}',16,19),(3070,31,8,'{\"Runtime\": 282.8233393333333}',34,19),(3071,31,8,'{\"Runtime\": 0.000643}',13,55),(3072,31,8,'{\"Runtime\": 0.0014239999999999997}',28,55),(3073,31,8,'{\"Runtime\": 0.002963333333333332}',14,55),(3074,31,8,'{\"Runtime\": 0.0018440000000000002}',44,55),(3075,31,8,'{\"Runtime\": 0.06452866666666672}',11,55),(3076,31,8,'{\"Runtime\": 0.05091833333333332}',10,55),(3077,31,8,'{\"Runtime\": 1.0495823333333334}',15,55),(3078,31,8,'{\"Runtime\": 0.49818999999999986}',5,55),(3079,31,8,'{\"Runtime\": 5.204162333333333}',17,55),(3080,31,8,'{\"Runtime\": 56.421776666666666}',33,55),(3081,31,8,'{\"Runtime\": 0.0005186666666666666}',13,56),(3082,31,8,'{\"Runtime\": 0.0005060000000000004}',28,56),(3083,31,8,'{\"Runtime\": 0.0004910000000000001}',14,56),(3084,31,8,'{\"Runtime\": 0.0004933333333333338}',44,56),(3085,31,8,'{\"Runtime\": 0.0010920000000000003}',11,56),(3086,31,8,'{\"Runtime\": 0.0010983333333333494}',10,56),(3087,31,8,'{\"Runtime\": 0.0005860000000000495}',15,56),(3088,31,8,'{\"Runtime\": 0.00321566666666658}',5,56),(3089,31,8,'{\"Runtime\": 0.014360333333333012}',17,56),(3090,31,8,'{\"Runtime\": 0.01967699999999913}',33,56),(3091,31,8,'{\"Runtime\": \"failure\"}',13,54),(3092,31,8,'{\"Runtime\": \"failure\"}',28,54),(3093,31,8,'{\"Runtime\": \"failure\"}',14,54),(3094,31,8,'{\"Runtime\": \"failure\"}',44,54),(3095,31,8,'{\"Runtime\": \"failure\"}',11,54),(3096,31,8,'{\"Runtime\": \"failure\"}',10,54),(3097,31,8,'{\"Runtime\": \"failure\"}',15,54),(3098,31,8,'{\"Runtime\": \"failure\"}',5,54),(3099,31,8,'{\"Runtime\": \"failure\"}',17,54),(3100,31,8,'{\"Runtime\": \"failure\"}',33,54),(3101,31,8,'{\"Runtime\": 0.000262}',8,28),(3102,31,8,'{\"Runtime\": 0.4838373333333334}',9,28),(3103,31,8,'{\"Runtime\": 9.119591999999999}',10,28),(3104,31,8,'{\"Runtime\": 2.198332}',11,28),(3105,31,8,'{\"Runtime\": 0.0004706666666666667}',8,27),(3106,31,8,'{\"Runtime\": 0.557353}',9,27),(3107,31,8,'{\"Runtime\": 9.299097666666668}',10,27),(3108,31,8,'{\"Runtime\": 13.535497999999999}',11,27),(3109,31,8,'{\"Runtime\": 0.013485000000000002}',35,67),(3110,31,8,'{\"Runtime\": 0.006608}',36,67),(3111,31,8,'{\"Runtime\": 0.017378666666666664}',37,67),(3112,31,8,'{\"Runtime\": 0.017548666666666667}',29,67),(3113,31,8,'{\"Runtime\": 0.30437966666666666}',38,67),(3114,31,8,'{\"Runtime\": 7.291208999999999}',19,67),(3115,31,8,'{\"Runtime\": \">9000\"}',10,67),(3116,31,8,'{\"Runtime\": 21.602447666666666}',11,67),(3117,31,8,'{\"Runtime\": 1462.4745523333333}',39,67),(3118,31,8,'{\"Runtime\": 102.956459}',5,67),(3119,31,8,'{\"Runtime\": 44.304480000000005}',17,67),(3120,31,8,'{\"Runtime\": 0.0043479999999999994}',35,72),(3121,31,8,'{\"Runtime\": 0.005953666666666667}',36,72),(3122,31,8,'{\"Runtime\": 0.01511966666666667}',37,72),(3123,31,8,'{\"Runtime\": 0.012906666666666669}',29,72),(3124,31,8,'{\"Runtime\": 0.13347633333333334}',38,72),(3125,31,8,'{\"Runtime\": 4.00687}',19,72),(3126,31,8,'{\"Runtime\": \">9000\"}',10,72),(3127,31,8,'{\"Runtime\": 9.114264}',11,72),(3128,31,8,'{\"Runtime\": 7271.891498000001}',39,72),(3129,31,8,'{\"Runtime\": 68.53975799999999}',5,72),(3130,31,8,'{\"Runtime\": 226.8839376666667}',17,72),(3131,31,8,'{\"Runtime\": 0.0199}',35,70),(3132,31,8,'{\"Runtime\": 2.998955666666667}',36,70),(3133,31,8,'{\"Runtime\": 255.73950866666667}',37,70),(3134,31,8,'{\"Runtime\": 76.77720199999999}',29,70),(3135,31,8,'{\"Runtime\": 436.5136186666667}',38,70),(3136,31,8,'{\"Runtime\": \"failure\"}',19,70),(3137,31,8,'{\"Runtime\": 0.10939933333333333}',10,70),(3138,31,8,'{\"Runtime\": 30.055670000000003}',11,70),(3139,31,8,'{\"Runtime\": 0.30350400000000005}',39,70),(3140,31,8,'{\"Runtime\": 1673.0684673333333}',5,70),(3141,31,8,'{\"Runtime\": \"failure\"}',17,70),(3142,31,8,'{\"Runtime\": 0.03567633333333334}',35,71),(3143,31,8,'{\"Runtime\": 3.0081446666666665}',36,71),(3144,31,8,'{\"Runtime\": 255.822681}',37,71),(3145,31,8,'{\"Runtime\": 76.86584666666667}',29,71),(3146,31,8,'{\"Runtime\": 446.71028133333334}',38,71),(3147,31,8,'{\"Runtime\": \"failure\"}',19,71),(3148,31,8,'{\"Runtime\": 0.8240236666666666}',10,71),(3149,31,8,'{\"Runtime\": 49.351311}',11,71),(3150,31,8,'{\"Runtime\": 3.2141906666666666}',39,71),(3151,31,8,'{\"Runtime\": 1806.289195333333}',5,71),(3152,31,8,'{\"Runtime\": \"failure\"}',17,71),(3153,31,8,'{\"Runtime\": 0.041279666666666666}',35,73),(3154,31,8,'{\"Runtime\": 3.6391973333333336}',36,73),(3155,31,8,'{\"Runtime\": 294.179044}',37,73),(3156,31,8,'{\"Runtime\": 89.45987066666667}',29,73),(3157,31,8,'{\"Runtime\": 505.91601233333336}',38,73),(3158,31,8,'{\"Runtime\": \"failure\"}',19,73),(3159,31,8,'{\"Runtime\": 0.07870066666666668}',10,73),(3160,31,8,'{\"Runtime\": 29.78863733333333}',11,73),(3161,31,8,'{\"Runtime\": 0.25356266666666666}',39,73),(3162,31,8,'{\"Runtime\": 1902.5874516666665}',5,73),(3163,31,8,'{\"Runtime\": \"failure\"}',17,73),(3164,31,8,'{\"Runtime\": 0.02756233333333333}',35,65),(3165,31,8,'{\"Runtime\": 0.01040366666666667}',36,65),(3166,31,8,'{\"Runtime\": 0.008514333333333334}',37,65),(3167,31,8,'{\"Runtime\": 0.008420666666666668}',29,65),(3168,31,8,'{\"Runtime\": 0.06428133333333333}',38,65),(3169,31,8,'{\"Runtime\": 1.501520666666667}',19,65),(3170,31,8,'{\"Runtime\": \">9000\"}',10,65),(3171,31,8,'{\"Runtime\": 5.124987}',11,65),(3172,31,8,'{\"Runtime\": 899.9098366666667}',39,65),(3173,31,8,'{\"Runtime\": 37.774393}',5,65),(3174,31,8,'{\"Runtime\": 10.715709666666662}',17,65),(3175,31,8,'{\"Runtime\": 0.007345333333333332}',35,64),(3176,31,8,'{\"Runtime\": 0.0017319999999999998}',36,64),(3177,31,8,'{\"Runtime\": 0.010137666666666665}',37,64),(3178,31,8,'{\"Runtime\": 0.009278333333333331}',29,64),(3179,31,8,'{\"Runtime\": 0.2300866666666667}',38,64),(3180,31,8,'{\"Runtime\": 4.529662000000001}',19,64),(3181,31,8,'{\"Runtime\": \">9000\"}',10,64),(3182,31,8,'{\"Runtime\": 17.190816}',11,64),(3183,31,8,'{\"Runtime\": 2919.8413669999995}',39,64),(3184,31,8,'{\"Runtime\": 60.679928}',5,64),(3185,31,8,'{\"Runtime\": 27.243222333333335}',17,64),(3186,31,8,'{\"Runtime\": 0.013362666666666669}',35,66),(3187,31,8,'{\"Runtime\": 0.009597333333333334}',36,66),(3188,31,8,'{\"Runtime\": 0.009478333333333337}',37,66),(3189,31,8,'{\"Runtime\": 0.009419}',29,66),(3190,31,8,'{\"Runtime\": 0.05963033333333334}',38,66),(3191,31,8,'{\"Runtime\": 2.112985666666667}',19,66),(3192,31,8,'{\"Runtime\": \">9000\"}',10,66),(3193,31,8,'{\"Runtime\": 4.777131999999999}',11,66),(3194,31,8,'{\"Runtime\": 922.1697773333334}',39,66),(3195,31,8,'{\"Runtime\": 36.55493166666667}',5,66),(3196,31,8,'{\"Runtime\": 14.70871333333333}',17,66),(3197,31,8,'{\"Runtime\": 0.00474}',35,69),(3198,31,8,'{\"Runtime\": 0.007335333333333333}',36,69),(3199,31,8,'{\"Runtime\": 0.012587}',37,69),(3200,31,8,'{\"Runtime\": 0.013399666666666666}',29,69),(3201,31,8,'{\"Runtime\": 0.13250066666666663}',38,69),(3202,31,8,'{\"Runtime\": 3.3121983333333334}',19,69),(3203,31,8,'{\"Runtime\": \">9000\"}',10,69),(3204,31,8,'{\"Runtime\": 9.511071666666666}',11,69),(3205,31,8,'{\"Runtime\": 946.8173473333333}',39,69),(3206,31,8,'{\"Runtime\": 69.59881733333334}',5,69),(3207,31,8,'{\"Runtime\": 24.69284}',17,69),(3208,31,8,'{\"Runtime\": 0.023380333333333336}',35,63),(3209,31,8,'{\"Runtime\": 2.6161700000000003}',36,63),(3210,31,8,'{\"Runtime\": 255.56718333333333}',37,63),(3211,31,8,'{\"Runtime\": 68.40420133333333}',29,63),(3212,31,8,'{\"Runtime\": 437.2146493333334}',38,63),(3213,31,8,'{\"Runtime\": \"failure\"}',19,63),(3214,31,8,'{\"Runtime\": 0.1252736666666667}',10,63),(3215,31,8,'{\"Runtime\": 26.751275333333336}',11,63),(3216,31,8,'{\"Runtime\": 0.2898863333333333}',39,63),(3217,31,8,'{\"Runtime\": 2559.8346560000005}',5,63),(3218,31,8,'{\"Runtime\": \"failure\"}',17,63),(3219,31,8,'{\"Runtime\": 0.021491333333333335}',35,74),(3220,31,8,'{\"Runtime\": 3.000726666666667}',36,74),(3221,31,8,'{\"Runtime\": 255.49058066666666}',37,74),(3222,31,8,'{\"Runtime\": 76.72875633333334}',29,74),(3223,31,8,'{\"Runtime\": 436.57580566666667}',38,74),(3224,31,8,'{\"Runtime\": \"failure\"}',19,74),(3225,31,8,'{\"Runtime\": 0.1144213333333333}',10,74),(3226,31,8,'{\"Runtime\": 30.027658000000002}',11,74),(3227,31,8,'{\"Runtime\": 0.30001866666666666}',39,74),(3228,31,8,'{\"Runtime\": 1672.3006083333332}',5,74),(3229,31,8,'{\"Runtime\": \"failure\"}',17,74),(3230,31,8,'{\"Runtime\": 0.038949333333333336}',35,68),(3231,31,8,'{\"Runtime\": 3.6661826666666664}',36,68),(3232,31,8,'{\"Runtime\": 259.43240799999995}',37,68),(3233,31,8,'{\"Runtime\": 87.91057133333334}',29,68),(3234,31,8,'{\"Runtime\": 466.4794136666667}',38,68),(3235,31,8,'{\"Runtime\": \"failure\"}',19,68),(3236,31,8,'{\"Runtime\": 0.1051483333333334}',10,68),(3237,31,8,'{\"Runtime\": 29.721236333333334}',11,68),(3238,31,8,'{\"Runtime\": 0.2417096666666667}',39,68),(3239,31,8,'{\"Runtime\": 1706.8921536666667}',5,68),(3240,31,8,'{\"Runtime\": \"failure\"}',17,68),(3241,31,8,'{\"Runtime\": \"failure\"}',13,39),(3242,31,8,'{\"Runtime\": \"failure\"}',14,39),(3243,31,8,'{\"Runtime\": \"failure\"}',13,39),(3244,31,8,'{\"Runtime\": \"failure\"}',5,39),(3245,31,8,'{\"Runtime\": \"failure\"}',15,39),(3246,31,8,'{\"Runtime\": \"failure\"}',17,39),(3247,31,8,'{\"Runtime\": \"failure\"}',20,39),(3248,31,8,'{\"Runtime\": \"failure\"}',12,39),(3249,31,8,'{\"Runtime\": \"failure\"}',33,39),(3250,31,8,'{\"Runtime\": \"failure\"}',16,39),(3251,31,8,'{\"Runtime\": 0.03610233333333334, \"ComputingNeighbors\": 0.0008833333333333333, \"TreeBuilding\": 0.003928}',13,40),(3252,31,8,'{\"Runtime\": 0.03546666666666667, \"ComputingNeighbors\": 0.014722666666666667, \"TreeBuilding\": 0.0023906666666666664}',14,40),(3253,31,8,'{\"Runtime\": 0.094757, \"ComputingNeighbors\": 0.077855, \"TreeBuilding\": 0.009251333333333334}',13,40),(3254,31,8,'{\"Runtime\": 1.0654286666666668, \"ComputingNeighbors\": 0.5517043333333334, \"TreeBuilding\": 0.49141399999999996}',5,40),(3255,31,8,'{\"Runtime\": 6.9286840000000005, \"ComputingNeighbors\": 5.849954666666666, \"TreeBuilding\": 1.0618046666666665}',15,40),(3256,31,8,'{\"Runtime\": 403.7132183333333, \"ComputingNeighbors\": 398.4965936666667, \"TreeBuilding\": 5.102584333333334}',17,40),(3257,31,8,'{\"Runtime\": 1349.274842, \"ComputingNeighbors\": 1347.2745273333333, \"TreeBuilding\": 1.8332506666666664}',20,40),(3258,31,8,'{\"Runtime\": 64.595613, \"ComputingNeighbors\": 18.457282333333335, \"TreeBuilding\": 46.09172866666666}',12,40),(3259,31,8,'{\"Runtime\": 203.6591676666667, \"ComputingNeighbors\": 148.67851399999998, \"TreeBuilding\": 54.84614333333334}',33,40),(3260,31,8,'{\"Runtime\": 49.880445666666674, \"ComputingNeighbors\": 11.766561333333334, \"TreeBuilding\": 38.06813266666666}',16,40),(3261,31,8,'{\"Runtime\": 0.010316666666666668, \"ComputingNeighbors\": 0.0009286666666666667, \"TreeBuilding\": 0.00016833333333333335}',13,36),(3262,31,8,'{\"Runtime\": 0.022706, \"ComputingNeighbors\": 0.01943133333333333, \"TreeBuilding\": 0.0024446666666666666}',14,36),(3263,31,8,'{\"Runtime\": 0.11222499999999998, \"ComputingNeighbors\": 0.09482033333333333, \"TreeBuilding\": 0.009226333333333335}',13,36),(3264,31,8,'{\"Runtime\": 0.9611936666666668, \"ComputingNeighbors\": 0.45305599999999996, \"TreeBuilding\": 0.492151}',5,36),(3265,31,8,'{\"Runtime\": 7.380764333333333, \"ComputingNeighbors\": 6.302473, \"TreeBuilding\": 1.0618616666666665}',15,36),(3266,31,8,'{\"Runtime\": 465.1672226666667, \"ComputingNeighbors\": 459.92426266666666, \"TreeBuilding\": 5.110999333333333}',17,36),(3267,31,8,'{\"Runtime\": 1366.1319083333335, \"ComputingNeighbors\": 1364.0903886666667, \"TreeBuilding\": 1.834747}',20,36),(3268,31,8,'{\"Runtime\": 63.75038533333333, \"ComputingNeighbors\": 17.47769166666667, \"TreeBuilding\": 46.22473766666667}',12,36),(3269,31,8,'{\"Runtime\": 455.0331266666667, \"ComputingNeighbors\": 399.88004, \"TreeBuilding\": 55.006745333333335}',33,36),(3270,31,8,'{\"Runtime\": 59.96258766666667, \"ComputingNeighbors\": 21.746246333333335, \"TreeBuilding\": 38.16458}',16,36),(3271,31,8,'{\"Runtime\": 0.0065383333333333335, \"ComputingNeighbors\": 0.0009333333333333333, \"TreeBuilding\": 0.00016633333333333333}',13,37),(3272,31,8,'{\"Runtime\": 0.032068000000000006, \"ComputingNeighbors\": 0.019425666666666667, \"TreeBuilding\": 0.0024056666666666666}',14,37),(3273,31,8,'{\"Runtime\": 0.105338, \"ComputingNeighbors\": 0.09471933333333334, \"TreeBuilding\": 0.009266}',13,37),(3274,31,8,'{\"Runtime\": 0.9619866666666668, \"ComputingNeighbors\": 0.45243133333333335, \"TreeBuilding\": 0.4928506666666666}',5,37),(3275,31,8,'{\"Runtime\": 7.401602999999999, \"ComputingNeighbors\": 6.313594666666667, \"TreeBuilding\": 1.0629103333333332}',15,37),(3276,31,8,'{\"Runtime\": 465.364485, \"ComputingNeighbors\": 460.1256183333333, \"TreeBuilding\": 5.116003666666667}',17,37),(3277,31,8,'{\"Runtime\": 1365.5126439999997, \"ComputingNeighbors\": 1363.4888199999998, \"TreeBuilding\": 1.8349376666666668}',20,37),(3278,31,8,'{\"Runtime\": 63.83388166666668, \"ComputingNeighbors\": 17.517418000000003, \"TreeBuilding\": 46.26779100000001}',12,37),(3279,31,8,'{\"Runtime\": 455.1002786666666, \"ComputingNeighbors\": 399.79346166666664, \"TreeBuilding\": 55.16601833333334}',33,37),(3280,31,8,'{\"Runtime\": 60.08178533333333, \"ComputingNeighbors\": 21.753176333333332, \"TreeBuilding\": 38.26357599999999}',16,37),(3281,31,8,'{}',13,38),(3282,31,8,'{}',14,38),(3283,31,8,'{}',13,38),(3284,31,8,'{}',5,38),(3285,31,8,'{}',15,38),(3286,31,8,'{\"Runtime\": \">9000\"}',17,38),(3287,31,8,'{\"Runtime\": \">9000\"}',20,38),(3288,31,8,'{}',12,38),(3289,31,8,'{\"Runtime\": \">9000\"}',33,38),(3290,31,8,'{}',16,38),(3291,31,8,'{\"Runtime\": 0.09764633333333335}',1,13),(3292,31,8,'{\"Runtime\": 0.684596}',8,13),(3293,31,8,'{\"Runtime\": 0.34245433333333336}',13,13),(3294,31,8,'{\"Runtime\": 4.800563666666666}',28,13),(3295,31,8,'{\"Runtime\": 790.99735}',31,13),(3296,31,8,'{\"Runtime\": 8374.193119666668}',11,13),(3297,31,8,'{\"Runtime\": \">9000\"}',10,13),(3298,31,8,'{\"Runtime\": \">9000\"}',11,13),(3299,31,8,'{\"Runtime\": \">9000\"}',15,13),(3300,31,8,'{\"Runtime\": \">9000\"}',5,13),(3301,31,8,'{\"Runtime\": \">9000\"}',17,13),(3302,31,8,'{\"Runtime\": \">9000\"}',20,13),(3303,31,8,'{\"Runtime\": \">9000\"}',12,13),(3304,31,8,'{\"Runtime\": \">9000\"}',33,13),(3305,31,8,'{\"Runtime\": \">9000\"}',16,13),(3306,31,8,'{\"Runtime\": \">9000\"}',34,13),(3307,31,8,'{\"Runtime\": 0.1695253333333333}',1,12),(3308,31,8,'{\"Runtime\": 2.497011}',8,12),(3309,31,8,'{\"Runtime\": 0.534963}',13,12),(3310,31,8,'{\"Runtime\": 6.790736666666667}',28,12),(3311,31,8,'{\"Runtime\": \">9000\"}',31,12),(3312,31,8,'{\"Runtime\": \">9000\"}',11,12),(3313,31,8,'{\"Runtime\": \">9000\"}',10,12),(3314,31,8,'{\"Runtime\": \">9000\"}',11,12),(3315,31,8,'{\"Runtime\": \">9000\"}',15,12),(3316,31,8,'{\"Runtime\": \">9000\"}',5,12),(3317,31,8,'{\"Runtime\": \">9000\"}',17,12),(3318,31,8,'{\"Runtime\": \">9000\"}',20,12),(3319,31,8,'{\"Runtime\": \">9000\"}',12,12),(3320,31,8,'{\"Runtime\": \">9000\"}',33,12),(3321,31,8,'{\"Runtime\": \">9000\"}',16,12),(3322,31,8,'{\"Runtime\": \">9000\"}',34,12),(3323,31,8,'{\"Runtime\": 0.15349000000000002}',1,16),(3324,31,8,'{\"Runtime\": 6.108616666666667}',8,16),(3325,31,8,'{\"Runtime\": 0.5551716666666667}',13,16),(3326,31,8,'{\"Runtime\": 14.488537666666666}',28,16),(3327,31,8,'{\"Runtime\": \">9000\"}',31,16),(3328,31,8,'{\"Runtime\": \">9000\"}',11,16),(3329,31,8,'{\"Runtime\": \">9000\"}',10,16),(3330,31,8,'{\"Runtime\": \">9000\"}',11,16),(3331,31,8,'{\"Runtime\": \">9000\"}',15,16),(3332,31,8,'{\"Runtime\": \">9000\"}',5,16),(3333,31,8,'{\"Runtime\": \">9000\"}',17,16),(3334,31,8,'{\"Runtime\": \">9000\"}',20,16),(3335,31,8,'{\"Runtime\": \">9000\"}',12,16),(3336,31,8,'{\"Runtime\": \">9000\"}',33,16),(3337,31,8,'{\"Runtime\": \">9000\"}',16,16),(3338,31,8,'{\"Runtime\": \">9000\"}',34,16),(3339,31,8,'{\"Runtime\": 0.15275266666666665}',1,11),(3340,31,8,'{\"Runtime\": 6.101510333333334}',8,11),(3341,31,8,'{\"Runtime\": 0.551937}',13,11),(3342,31,8,'{\"Runtime\": 14.475913666666665}',28,11),(3343,31,8,'{\"Runtime\": \">9000\"}',31,11),(3344,31,8,'{\"Runtime\": \">9000\"}',11,11),(3345,31,8,'{\"Runtime\": \">9000\"}',10,11),(3346,31,8,'{\"Runtime\": \">9000\"}',11,11),(3347,31,8,'{\"Runtime\": \">9000\"}',15,11),(3348,31,8,'{\"Runtime\": \">9000\"}',5,11),(3349,31,8,'{\"Runtime\": \">9000\"}',17,11),(3350,31,8,'{\"Runtime\": \">9000\"}',20,11),(3351,31,8,'{\"Runtime\": \">9000\"}',12,11),(3352,31,8,'{\"Runtime\": \">9000\"}',33,11),(3353,31,8,'{\"Runtime\": \">9000\"}',16,11),(3354,31,8,'{\"Runtime\": \">9000\"}',34,11),(3355,31,8,'{\"Runtime\": 0.10016333333333334}',1,15),(3356,31,8,'{\"Runtime\": 0.6818886666666666}',8,15),(3357,31,8,'{\"Runtime\": 0.3465196666666667}',13,15),(3358,31,8,'{\"Runtime\": 4.817093}',28,15),(3359,31,8,'{\"Runtime\": 789.3552336666667}',31,15),(3360,31,8,'{\"Runtime\": 8123.630774666667}',11,15),(3361,31,8,'{\"Runtime\": \">9000\"}',10,15),(3362,31,8,'{\"Runtime\": \">9000\"}',11,15),(3363,31,8,'{\"Runtime\": \">9000\"}',15,15),(3364,31,8,'{\"Runtime\": \">9000\"}',5,15),(3365,31,8,'{\"Runtime\": \">9000\"}',17,15),(3366,31,8,'{\"Runtime\": \">9000\"}',20,15),(3367,31,8,'{\"Runtime\": \">9000\"}',12,15),(3368,31,8,'{\"Runtime\": \">9000\"}',33,15),(3369,31,8,'{\"Runtime\": \">9000\"}',16,15),(3370,31,8,'{\"Runtime\": \">9000\"}',34,15),(3371,31,8,'{\"Runtime\": 0.16118966666666668}',1,14),(3372,31,8,'{\"Runtime\": 2.5184296666666666}',8,14),(3373,31,8,'{\"Runtime\": 0.5307483333333333}',13,14),(3374,31,8,'{\"Runtime\": 6.810791666666667}',28,14),(3375,31,8,'{\"Runtime\": \">9000\"}',31,14),(3376,31,8,'{\"Runtime\": \">9000\"}',11,14),(3377,31,8,'{}',13,86),(3378,31,8,'{}',14,86),(3379,31,8,'{}',13,86),(3380,31,8,'{}',5,86),(3381,31,8,'{}',15,86),(3382,31,8,'{\"Runtime\": \">9000\"}',17,86),(3383,31,8,'{\"Runtime\": \">9000\"}',20,86),(3384,31,8,'{}',12,86),(3385,31,8,'{\"Runtime\": \">9000\"}',33,86),(3386,31,8,'{}',16,86),(3387,31,8,'{\"Runtime\": 0.0009476666666666666, \"BaseCases\": 1445, \"ComputingNeighbors\": 0.00016799999999999996, \"TreeBuilding\": 0.00016066666666666668}',13,88),(3388,31,8,'{\"Runtime\": 0.011006999999999998, \"BaseCases\": 10313, \"ComputingNeighbors\": 0.001977333333333333, \"TreeBuilding\": 0.002389}',14,88),(3389,31,8,'{\"Runtime\": 0.023306000000000004, \"BaseCases\": 48544, \"ComputingNeighbors\": 0.008639, \"TreeBuilding\": 0.009247666666666666}',13,88),(3390,31,8,'{\"Runtime\": 24.692499333333334, \"BaseCases\": 20706012, \"ComputingNeighbors\": 24.182248333333334, \"TreeBuilding\": 0.4927066666666666}',5,88),(3391,31,8,'{\"Runtime\": 9.663378333333334, \"BaseCases\": 45979591, \"ComputingNeighbors\": 8.589202333333333, \"TreeBuilding\": 1.05393}',15,88),(3392,31,8,'{\"Runtime\": 12.110268, \"BaseCases\": 33779775, \"ComputingNeighbors\": 6.877939333333334, \"TreeBuilding\": 5.124497333333333}',17,88),(3393,31,8,'{\"Runtime\": 5773.086365333334, \"BaseCases\": 20996172448, \"ComputingNeighbors\": 5771.068722333333, \"TreeBuilding\": 1.8494723333333336}',20,88),(3394,31,8,'{\"Runtime\": 3835.4930013333337, \"BaseCases\": 3649909617, \"ComputingNeighbors\": 3789.0232033333336, \"TreeBuilding\": 46.41747466666667}',12,88),(3395,31,8,'{\"Runtime\": 56.649732666666665, \"BaseCases\": 2339839, \"ComputingNeighbors\": 1.2179323333333334, \"TreeBuilding\": 55.291067999999996}',33,88),(3396,31,8,'{\"Runtime\": 3519.0749126666665, \"BaseCases\": 5126604881, \"ComputingNeighbors\": 3480.4802799999998, \"TreeBuilding\": 38.53375233333333}',16,88),(3397,31,8,'{\"Runtime\": \"failure\"}',13,87),(3398,31,8,'{\"Runtime\": \"failure\"}',14,87),(3399,31,8,'{\"Runtime\": \"failure\"}',13,87),(3400,31,8,'{\"Runtime\": \"failure\"}',5,87),(3401,31,8,'{\"Runtime\": \"failure\"}',15,87),(3402,31,8,'{\"Runtime\": \"failure\"}',17,87),(3403,31,8,'{\"Runtime\": \"failure\"}',20,87),(3404,31,8,'{\"Runtime\": \"failure\"}',12,87),(3405,31,8,'{\"Runtime\": \"failure\"}',33,87),(3406,31,8,'{\"Runtime\": \"failure\"}',16,87),(3407,31,8,'{\"Runtime\": 0.005552666666666667, \"Training\": 0.005319333333333333}',1,83),(3408,31,8,'{\"Runtime\": 0.13864266666666666, \"Training\": 0.13835733333333333}',14,83),(3409,31,8,'{\"Testing\": 0.001726, \"Runtime\": 5.920142666666667, \"Training\": 5.916329999999999}',11,83),(3410,31,8,'{\"Runtime\": 0.0033516666666666673, \"Training\": 0.0031030000000000003}',1,84),(3411,31,8,'{\"Runtime\": 0.19903633333333334, \"Training\": 0.19873166666666667}',14,84),(3412,31,8,'{\"Testing\": 0.0017063333333333334, \"Runtime\": 8.434376666666667, \"Training\": 8.430523666666666}',11,84),(3413,31,8,'{\"Testing\": 6.366666666666666e-05, \"Runtime\": 0.011285333333333333, \"Training\": 6.366666666666666e-05}',1,95),(3414,31,8,'{\"Testing\": 6.3e-05, \"Runtime\": 0.013139333333333336, \"Training\": 6.3e-05}',43,95),(3415,31,8,'{\"Testing\": 1.1819253333333333, \"Runtime\": 1.2022723333333334, \"Training\": 1.1819253333333333}',11,95),(3416,31,8,'{\"Testing\": 6.2e-05, \"Runtime\": 0.00041133333333333327, \"Training\": 6.2e-05}',1,96),(3417,31,8,'{\"Testing\": 6.433333333333333e-05, \"Runtime\": 0.004555000000000001, \"Training\": 6.433333333333333e-05}',43,96),(3418,31,8,'{\"Testing\": 1.1819756666666665, \"Runtime\": 1.2007896666666666, \"Training\": 1.1819756666666665}',11,96),(3419,31,8,'{\"Runtime\": 1.8432953333333335}',27,76),(3420,31,8,'{\"Runtime\": 0.17026033333333332}',27,75),(3421,31,8,'{\"Testing\": 1.7e-05, \"ACC\": 0.9733333333333333, \"Runtime\": 0.17193033333333332, \"MCC\": 0.9611163282360078, \"Training\": 0.16347533333333333, \"Precision\": 0.9753086419753086, \"MSE\": 0.02666666666666667, \"Recall\": 0.9733333333333333}',1,24),(3422,31,8,'{\"Testing\": 7.2e-05, \"ACC\": 0.4966777408637874, \"Runtime\": 1.4350616666666667, \"MCC\": -0.01535490895516939, \"Training\": 1.4206713333333336, \"Precision\": 0.482258064516129, \"MSE\": 0.041666666666666664, \"Recall\": 0.4966777408637874}',2,24),(3423,31,8,'{\"Testing\": 0.0006760000000000001, \"ACC\": 0.5516660779465442, \"Runtime\": 14.005827666666667, \"MCC\": 0.07443346632940229, \"Training\": 13.992067666666665, \"Precision\": 0.5268084066471163, \"MSE\": 0.185785536159601, \"Recall\": 0.5516660779465442}',3,24),(3424,31,8,'{\"Testing\": 0.010406666666666666, \"ACC\": 0.7827353523351883, \"Runtime\": 211.27815533333333, \"MCC\": 0.6957074400335973, \"Training\": 211.22179933333334, \"Precision\": 0.9279698648581974, \"MSE\": 0.015095316139049427, \"Recall\": 0.7827353523351883}',4,24),(3425,31,8,'{\"Testing\": 0.004574333333333334, \"ACC\": 0.899249911519243, \"Runtime\": 2.115202333333333, \"MCC\": 0.8034686605808652, \"Training\": 2.083240333333333, \"Precision\": 0.9042342088938038, \"MSE\": 0.03039630627164294, \"Recall\": 0.899249911519243}',5,24),(3426,31,8,'{\"Testing\": 0.00036366666666666665, \"ACC\": 0.54183000854738, \"Runtime\": 7.793308000000001, \"MCC\": 0.25489291139105835, \"Training\": 7.777696666666667, \"Precision\": 0.8883001613770846, \"MSE\": 0.023873390557939914, \"Recall\": 0.54183000854738}',6,24),(3427,31,8,'{\"Testing\": 0.12099, \"ACC\": 0.9359641157883267, \"Runtime\": 2.4293896666666677, \"MCC\": 0.9135740204394748, \"Training\": 1.9362076666666665, \"Precision\": 0.9786044657097288, \"MSE\": 0.003518373729476153, \"Recall\": 0.9359641157883267}',7,24),(3428,31,8,'{\"Testing\": 0.00014833333333333332, \"ACC\": 0.5, \"Runtime\": 3.2085356666666662, \"MCC\": 0, \"Training\": 3.1960676666666665, \"Precision\": 0.9971264367816092, \"MSE\": 0.005747126436781609, \"Recall\": 0.5}',21,24),(3429,31,8,'{\"Testing\": 0.00021033333333333331, \"ACC\": 0.9127044025157233, \"Runtime\": 4.504318333333333, \"MCC\": 0.7643002446708497, \"Training\": 4.486010333333333, \"Precision\": 0.8538579067990831, \"MSE\": 0.04459203036053131, \"Recall\": 0.9127044025157233}',22,24),(3430,31,8,'{\"Testing\": 0.00015433333333333334, \"ACC\": 0.7227775640620783, \"Runtime\": 3.455249, \"MCC\": 0.31312250691647786, \"Training\": 3.441229, \"Precision\": 0.6100264570519528, \"MSE\": 0.21120689655172412, \"Recall\": 0.7227775640620783}',23,24),(3431,31,8,'{\"Testing\": 0.000395, \"ACC\": 0.504524886877828, \"Runtime\": 8.627377000000001, \"MCC\": 0.09013849639772625, \"Training\": 8.613952666666666, \"Precision\": 0.9489034064395708, \"MSE\": 0.1020979020979021, \"Recall\": 0.504524886877828}',24,24),(3432,31,8,'{\"Testing\": 1.3e-05, \"ACC\": 0.6, \"Runtime\": 0.25444266666666665, \"MCC\": 0.421878716429434, \"Training\": 0.24237566666666666, \"Precision\": 0.944954128440367, \"MSE\": 0.10714285714285714, \"Recall\": 0.6}',25,24),(3433,31,8,'{\"Runtime\": 0.012316666666666665}',8,29),(3434,31,8,'{\"Runtime\": 0.13245933333333332}',9,29),(3435,31,8,'{\"Runtime\": \"failure\"}',12,29),(3436,31,8,'{\"Runtime\": \"failure\"}',16,29),(3437,31,8,'{\"Runtime\": 8.988011333333333}',18,29),(3438,31,8,'{\"Runtime\": 239.499489}',19,29),(3439,31,8,'{\"Runtime\": 5.916705}',11,29),(3440,31,8,'{\"Runtime\": 0.41886266666666666}',10,29),(3441,31,8,'{\"Runtime\": 0.006090666666666667, \"HashBuilding\": 0.0041393333333333325}',13,25),(3442,31,8,'{\"Runtime\": 0.039239, \"HashBuilding\": 0.029683}',14,25),(3443,31,8,'{\"Runtime\": 0.12307266666666666, \"HashBuilding\": 0.08991566666666666}',13,25),(3444,31,8,'{\"Runtime\": 2.497063333333333, \"HashBuilding\": 1.9392743333333333}',5,25),(3445,31,8,'{\"Runtime\": 14.291663, \"HashBuilding\": 1.288342}',15,25),(3446,31,8,'{\"Runtime\": 201.9467533333333, \"HashBuilding\": 19.690978666666666}',17,25),(3447,31,8,'{\"Runtime\": 315.0536273333333, \"HashBuilding\": 16.089080666666664}',20,25),(3448,31,8,'{\"Runtime\": 38.229695666666665, \"HashBuilding\": 22.075326}',12,25),(3449,31,8,'{\"Runtime\": 300.22053033333333, \"HashBuilding\": 25.904393666666664}',33,25),(3450,31,8,'{\"Runtime\": 56.032183333333336, \"HashBuilding\": 16.029039666666666}',16,25),(3451,33,6,'{\"Runtime\": 0.0006264845530192057}',1,95),(3452,33,6,'{\"Runtime\": 0.0007921059926350912}',43,95),(3453,33,6,'{\"Runtime\": 0.16539653142293295}',11,95),(3454,33,6,'{}',8,29),(3455,33,6,'{\"Runtime\": \"failure\"}',9,29),(3456,33,6,'{\"Runtime\": \"failure\"}',12,29),(3457,33,6,'{}',16,29),(3458,33,6,'{}',18,29),(3459,33,6,'{}',19,29),(3460,33,6,'{\"Runtime\": \"failure\"}',11,29),(3461,33,6,'{\"Runtime\": \"failure\"}',10,29),(3462,33,6,'{\"Runtime\": 0.0219724178314209}',35,74),(3463,33,6,'{\"Runtime\": 3.2573867638905845}',36,74),(3464,33,6,'{\"Runtime\": 274.42544921239215}',37,74),(3465,33,6,'{\"Runtime\": \">9000\"}',29,74),(3466,33,6,'{\"Runtime\": 467.5888202190399}',38,74),(3467,33,6,'{\"Runtime\": \">9000\"}',19,74),(3468,33,6,'{\"Runtime\": 3.3997610410054526}',10,74),(3469,33,6,'{\"Runtime\": 37.05655264854431}',11,74),(3470,33,6,'{\"Runtime\": 12.093034108479818}',39,74),(3471,33,6,'{\"Runtime\": 2001.2024374008179}',5,74),(3472,33,6,'{\"Runtime\": \"failure\"}',17,74),(3473,33,6,'{\"Runtime\": 0.02129197120666504}',35,63),(3474,33,6,'{\"Runtime\": 1.1334727605183919}',36,63),(3475,33,6,'{\"Runtime\": 255.47852404912314}',37,63),(3476,33,6,'{\"Runtime\": \">9000\"}',29,63),(3477,33,6,'{\"Runtime\": 275.2184244791667}',38,63),(3478,33,6,'{\"Runtime\": \">9000\"}',19,63),(3479,33,6,'{\"Runtime\": 5.183626413345337}',10,63),(3480,33,6,'{\"Runtime\": 22.721684376398724}',11,63),(3481,33,6,'{\"Runtime\": 15.190582354863485}',39,63),(3482,33,6,'{\"Runtime\": 2378.131242672602}',5,63),(3483,33,6,'{\"Runtime\": \"failure\"}',17,63),(3484,33,6,'{\"Runtime\": 0.01821160316467285}',35,68),(3485,33,6,'{\"Runtime\": 3.565179427464803}',36,68),(3486,33,6,'{\"Runtime\": 207.90353043874106}',37,68),(3487,33,6,'{\"Runtime\": \">9000\"}',29,68),(3488,33,6,'{\"Runtime\": 402.82965183258057}',38,68),(3489,33,6,'{\"Runtime\": \">9000\"}',19,68),(3490,33,6,'{\"Runtime\": 5.050146818161011}',10,68),(3491,33,6,'{\"Runtime\": 28.01882044474284}',11,68),(3492,33,6,'{\"Runtime\": 14.23223582903544}',39,68),(3493,33,6,'{\"Runtime\": 1783.549031496048}',5,68),(3494,33,6,'{\"Runtime\": \"failure\"}',17,68),(3495,33,6,'{\"Runtime\": 0.02750992774963379}',35,70),(3496,33,6,'{\"Runtime\": 3.4710580507914224}',36,70),(3497,33,6,'{\"Runtime\": 282.6004782517751}',37,70),(3498,33,6,'{\"Runtime\": \">9000\"}',29,70),(3499,33,6,'{\"Runtime\": 469.41553378105164}',38,70),(3500,33,6,'{\"Runtime\": \">9000\"}',19,70),(3501,33,6,'{\"Runtime\": 5.105720202128093}',10,70),(3502,33,6,'{\"Runtime\": 38.02898287773132}',11,70),(3503,33,6,'{\"Runtime\": 15.236959298451742}',39,70),(3504,33,6,'{\"Runtime\": 2010.160828590393}',5,70),(3505,33,6,'{\"Runtime\": \"failure\"}',17,70),(3506,33,6,'{\"Runtime\": \"failure\"}',1,98),(3507,33,6,'{\"Runtime\": \"failure\"}',2,98),(3508,33,6,'{\"Runtime\": \"failure\"}',3,98),(3509,33,6,'{\"Runtime\": \"failure\"}',4,98),(3510,33,6,'{\"Runtime\": \"failure\"}',5,98),(3511,33,6,'{\"Runtime\": \"failure\"}',6,98),(3512,33,6,'{\"Runtime\": \"failure\"}',7,98),(3513,33,6,'{\"Runtime\": \"failure\"}',21,98),(3514,33,6,'{\"Runtime\": \"failure\"}',22,98),(3515,33,6,'{\"Runtime\": \"failure\"}',23,98),(3516,33,6,'{\"Runtime\": \"failure\"}',24,98),(3517,33,6,'{\"Runtime\": \"failure\"}',25,98),(3518,33,6,'{}',8,26),(3519,33,6,'{}',9,26),(3520,33,6,'{}',19,26),(3521,33,6,'{\"Runtime\": 0.012771924336751303}',1,79),(3522,33,6,'{\"Runtime\": 0.0006844202677408854}',13,79),(3523,33,6,'{\"Runtime\": 0.0007228851318359375}',26,79),(3524,33,6,'{\"Runtime\": 0.0007361570994059244}',8,79),(3525,33,6,'{\"Runtime\": \"failure\"}',27,79),(3526,33,6,'{\"Runtime\": 0.001454750696818034}',28,79),(3527,33,6,'{\"Runtime\": 0.0035622119903564453}',29,79),(3528,33,6,'{\"Runtime\": 0.008443355560302734}',30,79),(3529,33,6,'{\"Runtime\": 0.01567522684733073}',31,79),(3530,33,6,'{\"Runtime\": 0.09501934051513672}',32,79),(3531,33,6,'{\"Runtime\": \"failure\"}',10,79),(3532,33,6,'{\"Runtime\": 0.35286394755045575}',11,79),(3533,33,6,'{\"Runtime\": 0.13075383504231772}',15,79),(3534,33,6,'{\"Runtime\": 1.0723721981048584}',5,79),(3535,33,6,'{\"Runtime\": 2.360193649927775}',17,79),(3536,33,6,'{\"Runtime\": 0.423109769821167}',20,79),(3537,33,6,'{\"Runtime\": 10.134093840916952}',12,79),(3538,33,6,'{\"Runtime\": 2.9686758518218994}',33,79),(3539,33,6,'{\"Runtime\": 3.7381254037221274}',16,79),(3540,33,6,'{\"Runtime\": 3.080678860346476}',34,79),(3541,33,6,'{\"Runtime\": 0.0006598631540934244}',1,81),(3542,33,6,'{\"Runtime\": 0.0007348060607910156}',13,81),(3543,33,6,'{\"Runtime\": 0.0007406870524088541}',26,81),(3544,33,6,'{\"Runtime\": 0.0007543563842773438}',8,81),(3545,33,6,'{\"Runtime\": 0.0016211668650309246}',27,81),(3546,33,6,'{\"Runtime\": 0.001226186752319336}',28,81),(3547,33,6,'{\"Runtime\": 0.0028075377146402993}',29,81),(3548,33,6,'{\"Runtime\": 0.005636374155680339}',30,81),(3549,33,6,'{\"Runtime\": 0.010967095692952475}',31,81),(3550,33,6,'{\"Runtime\": 0.07393113772074382}',32,81),(3551,33,6,'{\"Runtime\": 0.8392391204833984}',10,81),(3552,33,6,'{\"Runtime\": 0.29898611704508465}',11,81),(3553,33,6,'{\"Runtime\": 0.08899219830830891}',15,81),(3554,33,6,'{\"Runtime\": 0.7988292376200358}',5,81),(3555,33,6,'{\"Runtime\": 1.5121568044026692}',17,81),(3556,33,6,'{\"Runtime\": 0.3078299363454183}',20,81),(3557,33,6,'{\"Runtime\": 5.999317169189453}',12,81),(3558,33,6,'{\"Runtime\": 1.9642133712768555}',33,81),(3559,33,6,'{\"Runtime\": 2.355127493540446}',16,81),(3560,33,6,'{\"Runtime\": 2.0601609547932944}',34,81),(3561,33,6,'{\"Runtime\": 0.0006842613220214844}',1,80),(3562,33,6,'{\"Runtime\": 0.0007498264312744141}',13,80),(3563,33,6,'{\"Runtime\": 0.0007549126942952474}',26,80),(3564,33,6,'{\"Runtime\": 0.0007811387379964193}',8,80),(3565,33,6,'{\"Runtime\": 0.001706838607788086}',27,80),(3566,33,6,'{\"Runtime\": 0.0012310345967610676}',28,80),(3567,33,6,'{\"Runtime\": 0.0027358531951904297}',29,80),(3568,33,6,'{\"Runtime\": 0.005632162094116211}',30,80),(3569,33,6,'{\"Runtime\": 0.010932207107543945}',31,80),(3570,33,6,'{\"Runtime\": 0.07371894518534343}',32,80),(3571,33,6,'{\"Runtime\": 0.7856049537658691}',10,80),(3572,33,6,'{\"Runtime\": 0.3005081017812093}',11,80),(3573,33,6,'{\"Runtime\": 0.08933774630228679}',15,80),(3574,33,6,'{\"Runtime\": 0.7972912788391113}',5,80),(3575,33,6,'{\"Runtime\": 1.5030064582824707}',17,80),(3576,33,6,'{\"Runtime\": 0.30765239397684735}',20,80),(3577,33,6,'{\"Runtime\": 6.005851586659749}',12,80),(3578,33,6,'{\"Runtime\": 1.9539833863576253}',33,80),(3579,33,6,'{\"Runtime\": 2.3515129884084067}',16,80),(3580,33,6,'{\"Runtime\": 2.0525497595469155}',34,80),(3581,33,6,'{\"Runtime\": 0.020762920379638672}',40,50),(3582,33,6,'{\"Runtime\": 0.01080791155497233}',14,52),(3583,33,6,'{\"Runtime\": 16.00661579767863}',17,46),(3584,33,6,'{\"Runtime\": 0.06471006075541179}',13,46),(3585,33,6,'{\"Runtime\": 16.023046414057415}',12,51),(3586,33,6,'{\"Runtime\": 1.110776424407959}',15,51),(3587,33,6,'{\"Runtime\": 0.0017473697662353516}',13,53),(3588,33,6,'{\"Runtime\": 0.0011841456095377605}',1,53),(3589,33,6,'{\"Runtime\": 1.0629573663075764}',5,48),(3590,33,6,'{\"Runtime\": \"failure\"}',20,47),(3591,33,6,'{\"Runtime\": 0.01349202791849772}',38,49),(3592,33,6,'{\"Runtime\": 0.002423524856567383}',27,92),(3593,33,6,'{\"Runtime\": 0.0030228296915690103}',27,92),(3594,33,6,'{\"Runtime\": 0.001577297846476237}',1,92),(3595,33,6,'{\"Runtime\": 0.001953601837158203}',13,92),(3596,33,6,'{\"Runtime\": 0.006415367126464844}',44,92),(3597,33,6,'{\"Runtime\": \"failure\"}',40,92),(3598,33,6,'{\"Runtime\": \"failure\"}',42,92),(3599,33,6,'{\"Runtime\": \"failure\"}',5,92),(3600,33,6,'{\"Runtime\": \"failure\"}',19,92),(3601,33,6,'{\"Runtime\": \"failure\"}',17,92),(3602,33,6,'{}',8,94),(3603,33,6,'{}',9,94),(3604,33,6,'{}',10,94),(3605,33,6,'{}',11,94),(3606,33,6,'{\"Runtime\": \"failure\"}',1,24),(3607,33,6,'{\"Runtime\": \"failure\"}',42,24),(3608,33,6,'{\"Runtime\": \"failure\"}',11,24),(3609,33,6,'{\"Runtime\": \"failure\"}',10,24),(3610,33,6,'{\"Runtime\": 0.009810686111450195}',13,89),(3611,33,6,'{\"Runtime\": \"failure\"}',14,89),(3612,33,6,'{\"Runtime\": 7.918222983678182}',13,89),(3613,33,6,'{\"Runtime\": 77.46855314572652}',5,89),(3614,33,6,'{\"Runtime\": \"failure\"}',15,89),(3615,33,6,'{\"Runtime\": \">9000\"}',17,89),(3616,33,6,'{\"Runtime\": \"failure\"}',20,89),(3617,33,6,'{\"Runtime\": 7808.962052901586}',12,89),(3618,33,6,'{\"Runtime\": \"failure\"}',33,89),(3619,33,6,'{\"Runtime\": \"failure\"}',16,89),(3620,33,6,'{\"MSE\": 0.035256410256410256, \"ACC\": 0.5, \"Recall\": 0.5, \"Precision\": 0.982371794871795, \"Runtime\": 0.010750611623128256, \"MCC\": 0}',2,62),(3621,33,6,'{\"MSE\": 0.07107231920199501, \"ACC\": 0.5, \"Recall\": 0.5, \"Precision\": 0.9644638403990026, \"Runtime\": 1.007550319035848, \"MCC\": 0}',3,62),(3622,33,6,'{\"MSE\": 0.029155524885706895, \"ACC\": 0.5, \"Recall\": 0.5, \"Precision\": 0.9854222375571465, \"Runtime\": 3.6705143451690674, \"MCC\": 0}',4,62),(3623,33,6,'{\"MSE\": 0.0850327048864948, \"ACC\": 0.5, \"Recall\": 0.5, \"Precision\": 0.9574836475567525, \"Runtime\": 18.806765000025432, \"MCC\": 0}',5,62),(3624,33,6,'{\"MSE\": 0.17703862660944206, \"ACC\": 0.8322830196879482, \"Recall\": 0.8322830196879482, \"Precision\": 0.5526749112956009, \"Runtime\": 0.003846247990926107, \"MCC\": 0.264597646150506}',6,62),(3625,33,6,'{\"Runtime\": \">9000\"}',7,62),(3626,33,6,'{\"MSE\": 0.18031609195402298, \"ACC\": 0.7229046242774566, \"Recall\": 0.7229046242774566, \"Precision\": 0.5085644782365781, \"Runtime\": 0.0020019213358561196, \"MCC\": 0.08738562361068085}',21,62),(3627,33,6,'{\"MSE\": 0.094876660341556, \"ACC\": 0.5, \"Recall\": 0.5, \"Precision\": 0.9525616698292221, \"Runtime\": 0.007647514343261719, \"MCC\": 0}',22,62),(3628,33,6,'{\"MSE\": 0.3771551724137931, \"ACC\": 0.7521258332519937, \"Recall\": 0.7521258332519937, \"Precision\": 0.5912400265957447, \"Runtime\": 0.0019718011220296225, \"MCC\": 0.30334117907983543}',23,62),(3629,33,6,'{\"MSE\": 0.3132867132867133, \"ACC\": 0.7853124617830499, \"Recall\": 0.7853124617830499, \"Precision\": 0.6100795226463511, \"Runtime\": 0.012537082036336264, \"MCC\": 0.35444074031145706}',24,62),(3630,33,6,'{\"MSE\": 0.13392857142857142, \"ACC\": 0.5, \"Recall\": 0.5, \"Precision\": 0.9330357142857143, \"Runtime\": 0.0003739198048909505, \"MCC\": 0}',25,62),(3631,33,6,'{\"Simple MSE\": 0.07289646055643656}',22,58),(3632,33,6,'{\"Runtime\": \">9000\"}',4,58),(3633,33,6,'{\"Simple MSE\": 0.08858679540537802}',25,59),(3634,33,6,'{\"Simple MSE\": 0.01869008303047406}',6,59),(3635,33,6,'{\"Simple MSE\": 0.08222968636973918}',23,60),(3636,33,6,'{\"Simple MSE\": 0.005701866056563021}',21,60),(3637,34,1,'{\"Runtime\": \"failure\"}',1,24),(3638,34,1,'{\"Runtime\": \"failure\"}',2,24),(3639,34,1,'{\"Runtime\": \"failure\"}',3,24),(3640,34,1,'{\"Runtime\": \"failure\"}',4,24),(3641,34,1,'{\"Runtime\": \"failure\"}',5,24),(3642,34,1,'{\"Runtime\": \"failure\"}',6,24),(3643,34,1,'{\"Runtime\": \"failure\"}',7,24),(3644,34,1,'{\"Runtime\": \"failure\"}',21,24),(3645,34,1,'{\"Runtime\": \"failure\"}',22,24),(3646,34,1,'{\"Runtime\": \"failure\"}',23,24),(3647,34,1,'{\"Runtime\": \"failure\"}',24,24),(3648,34,1,'{\"Runtime\": \"failure\"}',25,24),(3649,34,1,'{\"Runtime\": 0.09960977236429851, \"MSE\": 0.6666666666666666, \"MCC\": 0, \"Recall\": 0.3333333333333333, \"ACC\": 0.3333333333333333, \"Precision\": 0.7777777777777777}',1,97),(3650,34,1,'{\"Runtime\": \"failure\"}',2,97),(3651,34,1,'{}',3,97),(3652,34,1,'{}',4,97),(3653,34,1,'{}',5,97),(3654,34,1,'{}',6,97),(3655,34,1,'{\"Runtime\": \"failure\"}',7,97),(3656,34,1,'{}',21,97),(3657,34,1,'{\"Runtime\": \"failure\"}',22,97),(3658,34,1,'{}',23,97),(3659,34,1,'{}',24,97),(3660,34,1,'{}',25,97),(3661,34,1,'{\"Runtime\": 0.004943688710530599}',13,89),(3662,34,1,'{\"Runtime\": 0.5142749150594076}',14,89),(3663,34,1,'{\"Runtime\": 5.9089914957682295}',13,89),(3664,34,1,'{\"Runtime\": 61.53744387626648}',5,89),(3665,34,1,'{\"Runtime\": \"failure\"}',15,89),(3666,35,2,'{\"Runtime\": 0.008488734563191732}',1,95),(3667,35,2,'{\"Runtime\": 0.0022281010945638022}',43,95),(3668,35,2,'{\"Runtime\": 0.015183289845784506}',11,95),(3669,35,2,'{\"MCC\": 0.9402672577997083, \"Recall\": 0.96, \"ACC\": 0.96, \"MSE\": 0.04, \"Runtime\": 0.08787091573079427, \"Precision\": 0.9604700854700855}',1,1),(3670,35,2,'{\"MCC\": 0.5291839496365004, \"Recall\": 0.6801570522500754, \"ACC\": 0.6801570522500754, \"MSE\": 0.025641025641025644, \"Runtime\": 0.21941391626993814, \"Precision\": 0.888599348534202}',2,1),(3671,35,2,'{\"MCC\": 0.16307716904656033, \"Recall\": 0.568256210997292, \"ACC\": 0.568256210997292, \"MSE\": 0.09476309226932668, \"Runtime\": 3.746151844660441, \"Precision\": 0.597405652451524}',3,1),(3672,35,2,'{\"MCC\": 0.6732735555963355, \"Recall\": 0.7693328934674661, \"ACC\": 0.7693328934674661, \"MSE\": 0.01604416458207539, \"Runtime\": 7.6019660631815595, \"Precision\": 0.9207593016484704}',4,1),(3673,35,2,'{\"MCC\": 0.7837188291964307, \"Recall\": 0.8795187027389075, \"ACC\": 0.8795187027389076, \"MSE\": 0.03270488649480569, \"Runtime\": 21.661340792973835, \"Precision\": 0.9046014062049911}',5,1),(3674,35,2,'{\"MCC\": 0.5993616724292224, \"Recall\": 0.7652556246106595, \"ACC\": 0.7652556246106595, \"MSE\": 0.017972103004291844, \"Runtime\": 0.4068365891774495, \"Precision\": 0.8385737954703472}',6,1),(3675,35,2,'{\"MCC\": 0.8716023788113075, \"Recall\": 0.8818181818181818, \"ACC\": 0.8818181818181818, \"MSE\": 0.0050820953870211105, \"Runtime\": 138.9432169596354, \"Precision\": 0.99741653418124}',7,1),(3676,35,2,'{\"MCC\": 0.173460718548069, \"Recall\": 0.5614161849710982, \"ACC\": 0.5614161849710982, \"MSE\": 0.007183908045977012, \"Runtime\": 0.23794404665629068, \"Precision\": 0.622478386167147}',21,1),(3677,35,2,'{\"MCC\": 0.8075299259488347, \"Recall\": 0.905566037735849, \"ACC\": 0.905566037735849, \"MSE\": 0.03320683111954459, \"Runtime\": 0.21423848470052084, \"Precision\": 0.9019718865905477}',22,1),(3678,35,2,'{\"MCC\": 0.05123826734915941, \"Recall\": 0.5055980754103819, \"ACC\": 0.5055980754103819, \"MSE\": 0.10129310344827586, \"Runtime\": 0.23816768328348795, \"Precision\": 0.6172438672438673}',23,1),(3679,35,2,'{\"MCC\": 0.5687055455609639, \"Recall\": 0.767656230891525, \"ACC\": 0.767656230891525, \"MSE\": 0.07552447552447553, \"Runtime\": 0.6154415607452393, \"Precision\": 0.8020908540728785}',24,1),(3680,35,2,'{\"MCC\": 0.438810221029756, \"Recall\": 0.7254295532646048, \"ACC\": 0.7254295532646049, \"MSE\": 0.13392857142857142, \"Runtime\": 0.08675074577331543, \"Precision\": 0.7135416666666666}',25,1),(3681,35,2,'{\"MCC\": 0.9700708921921396, \"Recall\": 0.98, \"ACC\": 0.98, \"MSE\": 0.02, \"Runtime\": 0.014594793319702148, \"Precision\": 0.980125383486728}',1,23),(3682,35,2,'{\"MCC\": 0.6558961270597227, \"Recall\": 0.8553307157958322, \"ACC\": 0.8553307157958322, \"MSE\": 0.025641025641025644, \"Runtime\": 0.01150965690612793, \"Precision\": 0.802675585284281}',2,23),(3683,35,2,'{\"MCC\": 0.22222607434542593, \"Recall\": 0.5952431414105734, \"ACC\": 0.5952431414105734, \"MSE\": 0.08977556109725686, \"Runtime\": 0.7511403560638428, \"Precision\": 0.6296272555366815}',3,23),(3684,35,2,'{\"MCC\": 0.7188773311217073, \"Recall\": 0.8457361488253742, \"ACC\": 0.8457361488253742, \"MSE\": 0.015354092987147417, \"Runtime\": 9.907418568929037, \"Precision\": 0.873684252396246}',4,23),(3685,35,2,'{\"MCC\": 0.8170198919963921, \"Recall\": 0.9085099459981962, \"ACC\": 0.9085099459981961, \"MSE\": 0.028472489419007308, \"Runtime\": 9.711346626281738, \"Precision\": 0.9085099459981962}',5,23),(3686,35,2,'{\"MCC\": 0.47897771489778473, \"Recall\": 0.735774407116056, \"ACC\": 0.735774407116056, \"MSE\": 0.025482832618025753, \"Runtime\": 0.007889350255330404, \"Precision\": 0.7432618261826183}',6,23),(3687,34,1,'{\"Runtime\": \">9000\"}',17,89),(3688,35,2,'{\"MCC\": 0.06320729130523672, \"Recall\": 0.6022300512112737, \"ACC\": 0.6022300512112737, \"MSE\": 0.32603596559812353, \"Runtime\": 2602.279731988907, \"Precision\": 0.5097700275672572}',7,23),(3689,35,2,'{\"MCC\": -0.007663309352096424, \"Recall\": 0.4949421965317919, \"ACC\": 0.4949421965317919, \"MSE\": 0.015804597701149427, \"Runtime\": 0.0056760311126708984, \"Precision\": 0.49709724238026126}',21,23),(3690,35,2,'{\"MCC\": 0.27538775577744434, \"Recall\": 0.5742348008385744, \"ACC\": 0.5742348008385744, \"MSE\": 0.09013282732447818, \"Runtime\": 0.02231605847676595, \"Precision\": 0.7554004832485846}',22,23),(3691,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.09985632183908046, \"Runtime\": 0.005686044692993164, \"Precision\": 0.9500718390804598}',23,23),(3692,35,2,'{\"MCC\": 0.0637226761495691, \"Recall\": 0.502262443438914, \"ACC\": 0.502262443438914, \"MSE\": 0.10256410256410257, \"Runtime\": 0.03470627466837565, \"Precision\": 0.9486940298507461}',24,23),(3693,35,2,'{\"MCC\": 0.56479954607449, \"Recall\": 0.7742268041237113, \"ACC\": 0.7742268041237114, \"MSE\": 0.09821428571428571, \"Runtime\": 0.0023984909057617188, \"Precision\": 0.7908163265306123}',25,23),(3694,35,2,'{\"MCC\": 1, \"Recall\": 1, \"ACC\": 1, \"MSE\": 0, \"Runtime\": 0.08025439580281575, \"Precision\": 1}',1,31),(3695,35,2,'{\"MCC\": 0.5154283388236321, \"Recall\": 0.6363636363636364, \"ACC\": 0.6363636363636364, \"MSE\": 0.025641025641025644, \"Runtime\": 0.1560819943745931, \"Precision\": 0.9870550161812298}',2,31),(3696,35,2,'{\"MCC\": 0.25595832444484784, \"Recall\": 0.5350877192982456, \"ACC\": 0.5350877192982456, \"MSE\": 0.06608478802992519, \"Runtime\": 1.2810153166453044, \"Precision\": 0.9667919799498748}',3,31),(3697,35,2,'{\"MCC\": 0.7418035094817276, \"Recall\": 0.8437104876465161, \"ACC\": 0.8437104876465161, \"MSE\": 0.013715172949193478, \"Runtime\": 10.06951371828715, \"Precision\": 0.9002441491146227}',4,31),(3698,35,2,'{\"MCC\": 0.6491212579123568, \"Recall\": 0.742241284169746, \"ACC\": 0.7422412841697459, \"MSE\": 0.04732589457483647, \"Runtime\": 3.653343359629313, \"Precision\": 0.9348540432712342}',5,31),(3699,35,2,'{\"MCC\": 0.622492727786932, \"Recall\": 0.7203644950526605, \"ACC\": 0.7203644950526606, \"MSE\": 0.01555793991416309, \"Runtime\": 0.4840272267659505, \"Precision\": 0.9396093799672846}',6,31),(3700,35,2,'{\"MCC\": 0.4631380933618143, \"Recall\": 0.6090909090909091, \"ACC\": 0.609090909090909, \"MSE\": 0.016810007818608287, \"Runtime\": 19.41284163792928, \"Precision\": 0.9915553809897878}',7,31),(3701,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.005747126436781609, \"Runtime\": 0.1902040640513102, \"Precision\": 0.9971264367816092}',21,31),(3702,35,2,'{\"MCC\": 0.8457241860153822, \"Recall\": 0.9052830188679245, \"ACC\": 0.9052830188679245, \"MSE\": 0.025616698292220113, \"Runtime\": 0.17530353864034018, \"Precision\": 0.9412036561569272}',22,31),(3703,35,2,'{\"MCC\": 0.16125651126762125, \"Recall\": 0.5443798193687668, \"ACC\": 0.5443798193687668, \"MSE\": 0.10632183908045977, \"Runtime\": 0.27763160069783527, \"Precision\": 0.6464835977031099}',23,31),(3704,35,2,'{\"MCC\": 0.6423338941860416, \"Recall\": 0.7474929680812034, \"ACC\": 0.7474929680812034, \"MSE\": 0.05780885780885781, \"Runtime\": 0.49911777178446454, \"Precision\": 0.9167722772277228}',24,31),(3705,35,2,'{\"MCC\": 0.6266257206773698, \"Recall\": 0.7845360824742268, \"ACC\": 0.7845360824742268, \"MSE\": 0.08035714285714286, \"Runtime\": 0.08129684130350749, \"Precision\": 0.8450000000000001}',25,31),(3706,35,2,'{\"Runtime\": \"failure\"}',28,20),(3707,35,2,'{\"Runtime\": 0.4054415225982666}',41,20),(3708,35,2,'{\"Runtime\": 2.780041535695394}',42,20),(3709,35,2,'{\"Runtime\": \"failure\"}',38,20),(3710,35,2,'{\"Runtime\": 679.0958233674368}',19,20),(3711,35,2,'{\"Runtime\": 7.978147983551025}',39,20),(3712,35,2,'{\"Runtime\": \"failure\"}',5,20),(3713,34,1,'{\"Runtime\": \">9000\"}',20,89),(3714,34,1,'{\"Runtime\": \"failure\"}',12,89),(3715,35,2,'{\"Runtime\": 3292.3039751847587}',12,20),(3716,34,1,'{\"Runtime\": \">9000\"}',33,89),(3717,34,1,'{\"Runtime\": \"failure\"}',16,89),(3718,34,1,'{\"Runtime\": 0.02770694096883138}',35,68),(3719,34,1,'{\"Runtime\": 3.808598438898722}',36,68),(3720,34,1,'{\"Runtime\": 265.7916271686554}',37,68),(3721,35,2,'{\"Runtime\": 1668.9648207028706}',16,20),(3722,35,2,'{\"Runtime\": \"failure\"}',34,20),(3723,35,2,'{\"MCC\": 0.9500681414622171, \"Recall\": 0.9666666666666667, \"ACC\": 0.9666666666666667, \"MSE\": 0.03333333333333333, \"Runtime\": 0.0026702880859375, \"Precision\": 0.9667867146858743}',1,98),(3724,35,2,'{\"MCC\": -0.010840090307394688, \"Recall\": 0.4983388704318937, \"ACC\": 0.4983388704318938, \"MSE\": 0.038461538461538464, \"Runtime\": 0.007831652959187826, \"Precision\": 0.48231511254019294}',2,98),(3725,35,2,'{\"MCC\": 0.24694147195106161, \"Recall\": 0.5506181561285765, \"ACC\": 0.5506181561285765, \"MSE\": 0.06733167082294264, \"Runtime\": 0.8564741611480713, \"Precision\": 0.8011769651113912}',3,98),(3726,35,2,'{\"MCC\": 0.6644233079500657, \"Recall\": 0.7434608944348206, \"ACC\": 0.7434608944348206, \"MSE\": 0.016130423531441385, \"Runtime\": 181.29111742973328, \"Precision\": 0.9533154422726966}',4,98),(3727,35,2,'{\"MCC\": 0.8686798475908203, \"Recall\": 0.9334472483436022, \"ACC\": 0.9334472483436023, \"MSE\": 0.020392458637937667, \"Runtime\": 21.496166626612347, \"Precision\": 0.9352344376934539}',5,98),(3728,35,2,'{\"MCC\": 0.6391030304734503, \"Recall\": 0.7613687397684964, \"ACC\": 0.7613687397684964, \"MSE\": 0.01555793991416309, \"Runtime\": 0.12217974662780762, \"Precision\": 0.8906862426644145}',6,98),(3729,34,1,'{\"Runtime\": 1969.132743358612}',29,68),(3730,34,1,'{\"Runtime\": 515.8078317642212}',38,68),(3731,34,1,'{\"Runtime\": \"failure\"}',19,68),(3732,34,1,'{\"Runtime\": 0.31253806749979657}',10,68),(3733,34,1,'{\"Runtime\": 33.15638939539591}',11,68),(3734,34,1,'{\"Runtime\": 0.5165578524271647}',39,68),(3735,35,2,'{\"MCC\": 0.48214410689199605, \"Recall\": 0.6181818181818182, \"ACC\": 0.6181818181818182, \"MSE\": 0.01641907740422205, \"Runtime\": 455.3918855190277, \"Precision\": 0.9917485265225934}',7,98),(3736,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.005747126436781609, \"Runtime\": 0.029664278030395508, \"Precision\": 0.9971264367816092}',21,98),(3737,35,2,'{\"MCC\": 0.22432371387479666, \"Recall\": 0.569517819706499, \"ACC\": 0.569517819706499, \"MSE\": 0.09867172675521822, \"Runtime\": 0.056138833363850914, \"Precision\": 0.6809648548351888}',22,98),(3738,35,2,'{\"MCC\": 0.17310041792693143, \"Recall\": 0.567581688838873, \"ACC\": 0.567581688838873, \"MSE\": 0.12212643678160921, \"Runtime\": 0.028713464736938477, \"Precision\": 0.6108427267847557}',23,98),(3739,35,2,'{\"MCC\": 0.6847180697468859, \"Recall\": 0.8303778892014186, \"ACC\": 0.8303778892014186, \"MSE\": 0.05641025641025641, \"Runtime\": 0.3532119592030843, \"Precision\": 0.8547746764857411}',24,98),(3740,35,2,'{\"MCC\": 0.5941139850215877, \"Recall\": 0.7793814432989691, \"ACC\": 0.7793814432989693, \"MSE\": 0.08928571428571429, \"Runtime\": 0.0026796658833821616, \"Precision\": 0.8158508158508159}',25,98),(3741,35,2,'{\"Runtime\": 0.011936187744140625, \"Simple MSE\": 0.13392857142857142}',25,59),(3742,35,2,'{\"Runtime\": 0.0027234554290771484, \"Simple MSE\": 0.022800429184549355}',6,59),(3743,35,2,'{\"Runtime\": 0.002239227294921875, \"Simple MSE\": 0.09985632183908046}',23,60),(3744,35,2,'{\"Runtime\": 0.002222776412963867, \"Simple MSE\": 0.005747126436781609}',21,60),(3745,35,2,'{\"Runtime\": 0.005417585372924805, \"Simple MSE\": 0.094876660341556}',22,58),(3746,35,2,'{\"Runtime\": 1.9435023466746013, \"Simple MSE\": 0.012766324506167515}',4,58),(3747,35,2,'{\"Runtime\": 0.02002398173014323}',35,74),(3748,35,2,'{\"Runtime\": 0.7169206937154134}',36,74),(3749,35,2,'{\"Runtime\": 1.1426085631052654}',37,74),(3750,35,2,'{\"Runtime\": \"failure\"}',29,74),(3751,35,2,'{\"Runtime\": 96.83739074071248}',38,74),(3752,35,2,'{\"Runtime\": \"failure\"}',19,74),(3753,35,2,'{\"Runtime\": 0.14810673395792642}',10,74),(3754,35,2,'{\"Runtime\": 13.233193079630533}',11,74),(3755,35,2,'{\"Runtime\": 0.2497408390045166}',39,74),(3756,35,2,'{\"Runtime\": 451.40449055035907}',5,74),(3757,35,2,'{\"Runtime\": \"failure\"}',17,74),(3758,35,2,'{\"Runtime\": 0.006719191869099935}',35,70),(3759,35,2,'{\"Runtime\": 0.7223067283630371}',36,70),(3760,35,2,'{\"Runtime\": 1.224428415298462}',37,70),(3761,35,2,'{\"Runtime\": \"failure\"}',29,70),(3762,35,2,'{\"Runtime\": 96.96761107444763}',38,70),(3763,35,2,'{\"Runtime\": \"failure\"}',19,70),(3764,35,2,'{\"Runtime\": 0.14919169743855795}',10,70),(3765,35,2,'{\"Runtime\": 13.899282296498617}',11,70),(3766,35,2,'{\"Runtime\": 0.2802703380584717}',39,70),(3767,35,2,'{\"Runtime\": 452.1482268969218}',5,70),(3768,35,2,'{\"Runtime\": \"failure\"}',17,70),(3769,35,2,'{\"Runtime\": 0.009980201721191406}',35,63),(3770,35,2,'{\"Runtime\": 0.4329233964284261}',36,63),(3771,35,2,'{\"Runtime\": 4.627360264460246}',37,63),(3772,35,2,'{\"Runtime\": \"failure\"}',29,63),(3773,35,2,'{\"Runtime\": 98.1379029750824}',38,63),(3774,35,2,'{\"Runtime\": \"failure\"}',19,63),(3775,35,2,'{\"Runtime\": 0.14334654808044434}',10,63),(3776,35,2,'{\"Runtime\": 8.763850688934326}',11,63),(3777,35,2,'{\"Runtime\": 0.2897472381591797}',39,63),(3778,34,1,'{\"Runtime\": 1961.7005402247112}',5,68),(3779,34,1,'{\"Runtime\": \"failure\"}',17,68),(3780,34,1,'{\"Runtime\": 0.024170557657877605}',35,63),(3781,34,1,'{\"Runtime\": 2.7545506954193115}',36,63),(3782,35,2,'{\"Runtime\": 455.1758453845978}',5,63),(3783,35,2,'{\"Runtime\": \"failure\"}',17,63),(3784,35,2,'{\"Runtime\": \"failure\"}',20,47),(3785,35,2,'{\"Runtime\": 0.017759164174397785}',14,52),(3786,35,2,'{\"Runtime\": 23.318177143732708}',17,46),(3787,35,2,'{\"Runtime\": 0.05364688237508138}',13,46),(3788,34,1,'{\"Runtime\": 263.4346570968628}',37,63),(3789,35,2,'{\"Runtime\": 46.130853732426964}',12,51),(3790,35,2,'{\"Runtime\": 0.733801523844401}',15,51),(3791,35,2,'{\"Runtime\": 0.010558525721232096}',38,49),(3792,35,2,'{\"Runtime\": 0.010945796966552734}',13,53),(3793,35,2,'{\"Runtime\": 0.0016382535298665364}',1,53),(3794,35,2,'{\"Runtime\": 0.019423484802246094}',40,50),(3795,35,2,'{\"Runtime\": 6.578184366226196}',5,48),(3796,35,2,'{\"Runtime\": \"failure\"}',27,92),(3797,35,2,'{\"Runtime\": \"failure\"}',27,92),(3798,35,2,'{\"Runtime\": \"failure\"}',1,92),(3799,35,2,'{\"Runtime\": \"failure\"}',13,92),(3800,35,2,'{\"Runtime\": \"failure\"}',44,92),(3801,35,2,'{\"Runtime\": \"failure\"}',40,92),(3802,35,2,'{\"Runtime\": \"failure\"}',42,92),(3803,35,2,'{\"Runtime\": \"failure\"}',5,92),(3804,35,2,'{\"Runtime\": \"failure\"}',19,92),(3805,35,2,'{\"Runtime\": \"failure\"}',17,92),(3806,35,2,'{\"Runtime\": 0.021165768305460613}',8,29),(3807,35,2,'{\"Runtime\": 0.07989740371704102}',9,29),(3808,35,2,'{\"Runtime\": 69.25885057449341}',12,29),(3809,35,2,'{\"Runtime\": 25.207823355992634}',16,29),(3810,35,2,'{\"Runtime\": 0.08555102348327637}',18,29),(3811,35,2,'{\"Runtime\": 0.5422631104787191}',19,29),(3812,35,2,'{\"Runtime\": 1.0027849674224854}',11,29),(3813,35,2,'{\"Runtime\": 0.2442657152811686}',10,29),(3814,35,2,'{\"MCC\": 1, \"Recall\": 1, \"ACC\": 1, \"MSE\": 0, \"Runtime\": 0.019778331120808918, \"Precision\": 1}',1,45),(3815,35,2,'{\"MCC\": 0.29545357457740323, \"Recall\": 0.7006946541830262, \"ACC\": 0.7006946541830262, \"MSE\": 0.07051282051282051, \"Runtime\": 0.016450881958007812, \"Precision\": 0.6087383406971035}',2,45),(3816,35,2,'{\"MCC\": 0.12211500605544547, \"Recall\": 0.5704109266454728, \"ACC\": 0.5704109266454727, \"MSE\": 0.13591022443890274, \"Runtime\": 0.7500176429748535, \"Precision\": 0.5529465930018417}',3,45),(3817,35,2,'{\"MCC\": 0.6376700673435486, \"Recall\": 0.8573437446604929, \"ACC\": 0.8573437446604929, \"MSE\": 0.023462434227551107, \"Runtime\": 5.56355881690979, \"Precision\": 0.7844761667594411}',4,45),(3818,35,2,'{\"MCC\": 0.5016246048391471, \"Recall\": 0.7379942078403464, \"ACC\": 0.7379942078403464, \"MSE\": 0.07387456714120816, \"Runtime\": 3.452526410420736, \"Precision\": 0.764320764844863}',5,45),(3819,35,2,'{\"MCC\": 0.5435188941516556, \"Recall\": 0.7483651324843902, \"ACC\": 0.7483651324843902, \"MSE\": 0.020922746781115876, \"Runtime\": 0.04114095369974772, \"Precision\": 0.7973573477734494}',6,45),(3820,35,2,'{\"MCC\": 0.7461247855780851, \"Recall\": 0.8525478516689065, \"ACC\": 0.8525478516689061, \"MSE\": 0.010164190774042221, \"Runtime\": 35.87979698181152, \"Precision\": 0.8947706623502331}',7,45),(3821,35,2,'{\"MCC\": 0.08411268046554826, \"Recall\": 0.557442196531792, \"ACC\": 0.5574421965317918, \"MSE\": 0.015086206896551725, \"Runtime\": 0.009916067123413086, \"Precision\": 0.5307915758896151}',21,45),(3822,35,2,'{\"MCC\": 0.7725442483679897, \"Recall\": 0.9013731656184486, \"ACC\": 0.9013731656184487, \"MSE\": 0.04079696394686907, \"Runtime\": 0.010925372441609701, \"Precision\": 0.8717392359594194}',22,45),(3823,35,2,'{\"MCC\": 0.20803012885216612, \"Recall\": 0.6059816153461908, \"ACC\": 0.6059816153461908, \"MSE\": 0.14511494252873564, \"Runtime\": 0.018090248107910156, \"Precision\": 0.6020850040096231}',23,45),(3824,35,2,'{\"MCC\": 0.4899023141469343, \"Recall\": 0.7549223431576374, \"ACC\": 0.7549223431576374, \"MSE\": 0.09836829836829837, \"Runtime\": 0.0638264815012614, \"Precision\": 0.735369989967993}',24,45),(3825,35,2,'{\"MCC\": 0.5011565884945975, \"Recall\": 0.781786941580756, \"ACC\": 0.781786941580756, \"MSE\": 0.13392857142857142, \"Runtime\": 0.007216056187947591, \"Precision\": 0.7228260869565218}',25,45),(3826,35,2,'{\"MCC\": 0.9802892811798277, \"Recall\": 0.9866666666666667, \"ACC\": 0.9866666666666667, \"MSE\": 0.013333333333333334, \"Runtime\": 0.04589517911275228, \"Precision\": 0.9871794871794872}',1,82),(3827,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.035256410256410256, \"Runtime\": 0.12003660202026367, \"Precision\": 0.982371794871795}',2,82),(3828,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.07107231920199501, \"Runtime\": 0.45881040891011554, \"Precision\": 0.9644638403990026}',3,82),(3829,35,2,'{\"MCC\": 0.24582148302127002, \"Recall\": 0.5310650887573964, \"ACC\": 0.5310650887573964, \"MSE\": 0.027344086949020963, \"Runtime\": 24.65028444925944, \"Precision\": 0.9863031455236778}',4,82),(3830,35,2,'{\"MCC\": 0.8315819943079771, \"Recall\": 0.8695688989188223, \"ACC\": 0.8695688989188223, \"MSE\": 0.024624855713736054, \"Runtime\": 5.322560946146647, \"Precision\": 0.9677941077295106}',5,82),(3831,35,2,'{\"MCC\": 0.5878463519535916, \"Recall\": 0.7145508279368943, \"ACC\": 0.7145508279368943, \"MSE\": 0.01689914163090129, \"Runtime\": 0.32924413681030273, \"Precision\": 0.9026590538336053}',6,82),(3832,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.021501172791243157, \"Runtime\": 61.53305101394653, \"Precision\": 0.9892494136043783}',7,82),(3833,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.005747126436781609, \"Runtime\": 0.03911964098612467, \"Precision\": 0.9971264367816092}',21,82),(3834,35,2,'{\"MCC\": 0.2704258518184107, \"Recall\": 0.5489517819706499, \"ACC\": 0.5489517819706499, \"MSE\": 0.0872865275142315, \"Runtime\": 0.9848865667978922, \"Precision\": 0.8734804862444019}',22,82),(3835,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.09985632183908046, \"Runtime\": 0.16265185674031576, \"Precision\": 0.9500718390804598}',23,82),(3836,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.10303030303030303, \"Runtime\": 5.181752284367879, \"Precision\": 0.9484848484848486}',24,82),(3837,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.13392857142857142, \"Runtime\": 0.002564112345377604, \"Precision\": 0.9330357142857143}',25,82),(3838,35,2,'{\"Runtime\": 0.04349025090535482}',8,27),(3839,35,2,'{\"Runtime\": 0.5328167279561361}',9,27),(3840,35,2,'{\"Runtime\": 0.7546695868174235}',10,27),(3841,35,2,'{\"Runtime\": 0.9297021230061849}',11,27),(3842,35,2,'{\"Runtime\": 0.004809220631917317}',1,79),(3843,35,2,'{\"Runtime\": 0.0019126733144124348}',13,79),(3844,35,2,'{\"Runtime\": 0.001833518346150716}',26,79),(3845,35,2,'{\"Runtime\": 0.002021630605061849}',8,79),(3846,35,2,'{\"Runtime\": 0.0025078455607096353}',27,79),(3847,35,2,'{\"Runtime\": 0.00493168830871582}',28,79),(3848,35,2,'{\"Runtime\": \"failure\"}',29,79),(3849,35,2,'{\"Runtime\": 0.03036657969156901}',30,79),(3850,35,2,'{\"Runtime\": 0.04300769170125326}',31,79),(3851,35,2,'{\"Runtime\": 1.1606953938802083}',32,79),(3852,35,2,'{\"Runtime\": 0.6323057015736898}',10,79),(3853,35,2,'{\"Runtime\": 3.417896270751953}',11,79),(3854,35,2,'{\"Runtime\": 0.488936980565389}',15,79),(3855,35,2,'{\"Runtime\": 17.80749773979187}',5,79),(3856,35,2,'{\"Runtime\": 12.442284742991129}',17,79),(3857,35,2,'{\"Runtime\": 1.1553813616434734}',20,79),(3858,35,2,'{\"Runtime\": 259.4569348494212}',12,79),(3859,35,2,'{\"Runtime\": 25.637008905410767}',33,79),(3860,35,2,'{\"Runtime\": 90.13234996795654}',16,79),(3861,35,2,'{\"Runtime\": 28.7539705435435}',34,79),(3862,35,2,'{\"Runtime\": 0.0016455650329589844}',1,80),(3863,35,2,'{\"Runtime\": 0.005225817362467448}',13,80),(3864,35,2,'{\"Runtime\": 0.005469163258870442}',26,80),(3865,35,2,'{\"Runtime\": 0.0021268526713053384}',8,80),(3866,35,2,'{\"Runtime\": 0.002535740534464518}',27,80),(3867,35,2,'{\"Runtime\": 0.004671732584635417}',28,80),(3868,35,2,'{\"Runtime\": \"failure\"}',29,80),(3869,35,2,'{\"Runtime\": 0.027393897374471027}',30,80),(3870,35,2,'{\"Runtime\": 0.0401458740234375}',31,80),(3871,35,2,'{\"Runtime\": 0.9229035377502441}',32,80),(3872,35,2,'{\"Runtime\": 0.4929421742757161}',10,80),(3873,35,2,'{\"Runtime\": 2.777518351872762}',11,80),(3874,35,2,'{\"Runtime\": 0.4331673781077067}',15,80),(3875,35,2,'{\"Runtime\": 13.955179135004679}',5,80),(3876,35,2,'{\"Runtime\": 10.936043818791708}',17,80),(3877,35,2,'{\"Runtime\": 1.0909501711527507}',20,80),(3878,34,1,'{\"Runtime\": 1964.813528617223}',29,63),(3879,35,2,'{\"Runtime\": 203.76019295056662}',12,80),(3880,35,2,'{\"Runtime\": 21.298103094100952}',33,80),(3881,35,2,'{\"Runtime\": 71.20932078361511}',16,80),(3882,34,1,'{\"Runtime\": 451.04424420992535}',38,63),(3883,35,2,'{\"Runtime\": 23.333282709121704}',34,80),(3884,35,2,'{\"Runtime\": 0.0016210079193115234}',1,81),(3885,35,2,'{\"Runtime\": 0.0019175211588541667}',13,81),(3886,35,2,'{\"Runtime\": 0.0018451213836669922}',26,81),(3887,35,2,'{\"Runtime\": 0.002010901769002279}',8,81),(3888,35,2,'{\"Runtime\": 0.002510229746500651}',27,81),(3889,35,2,'{\"Runtime\": 0.0046151479085286455}',28,81),(3890,35,2,'{\"Runtime\": \"failure\"}',29,81),(3891,35,2,'{\"Runtime\": 0.027086973190307617}',30,81),(3892,35,2,'{\"Runtime\": 0.039346536000569664}',31,81),(3893,35,2,'{\"Runtime\": 0.9227766990661621}',32,81),(3894,35,2,'{\"Runtime\": 0.4905408223470052}',10,81),(3895,35,2,'{\"Runtime\": 2.776456038157145}',11,81),(3896,35,2,'{\"Runtime\": 0.43119152386983234}',15,81),(3897,34,1,'{\"Runtime\": \"failure\"}',19,63),(3898,34,1,'{\"Runtime\": 0.322967529296875}',10,63),(3899,35,2,'{\"Runtime\": 13.952905893325806}',5,81),(3900,34,1,'{\"Runtime\": 29.098748683929443}',11,63),(3901,34,1,'{\"Runtime\": 0.5057377020517985}',39,63),(3902,35,2,'{\"Runtime\": 10.964109182357788}',17,81),(3903,35,2,'{\"Runtime\": 1.0707502365112305}',20,81),(3904,35,2,'{\"Runtime\": 203.75137591362}',12,81),(3905,35,2,'{\"Runtime\": 21.126554250717163}',33,81),(3906,35,2,'{\"Runtime\": 71.19412724177043}',16,81),(3907,35,2,'{\"Runtime\": 23.32141423225403}',34,81),(3908,35,2,'{}',1,97),(3909,35,2,'{}',2,97),(3910,35,2,'{}',3,97),(3911,35,2,'{}',4,97),(3912,35,2,'{}',5,97),(3913,35,2,'{}',6,97),(3914,35,2,'{}',7,97),(3915,35,2,'{}',21,97),(3916,35,2,'{}',22,97),(3917,35,2,'{}',23,97),(3918,35,2,'{}',24,97),(3919,35,2,'{}',25,97),(3920,35,2,'{\"Runtime\": 0.06449635823567708}',13,89),(3921,35,2,'{\"Runtime\": 0.017784595489501953}',14,89),(3922,35,2,'{\"Runtime\": 0.07914320627848308}',13,89),(3923,35,2,'{\"Runtime\": 49.61485846837362}',5,89),(3924,35,2,'{\"Runtime\": 55.50152850151062}',15,89),(3925,35,2,'{\"Runtime\": 51.00092077255249}',17,89),(3926,34,1,'{\"Runtime\": 1748.0903975963593}',5,63),(3927,34,1,'{\"Runtime\": \"failure\"}',17,63),(3928,34,1,'{\"Runtime\": 0.019847710927327473}',35,74),(3929,34,1,'{\"Runtime\": 3.1404219468434653}',36,74),(3930,34,1,'{\"Runtime\": 263.2722465991974}',37,74),(3931,35,2,'{\"Runtime\": 1082.1022439797719}',20,89),(3932,34,1,'{\"Runtime\": 1964.2097520828247}',29,74),(3933,34,1,'{\"Runtime\": 450.2822228272756}',38,74),(3934,34,1,'{\"Runtime\": \"failure\"}',19,74),(3935,34,1,'{\"Runtime\": 0.31090251604715985}',10,74),(3936,34,1,'{\"Runtime\": 32.67593495051066}',11,74),(3937,34,1,'{\"Runtime\": 0.5078865687052408}',39,74),(3938,35,2,'{\"Runtime\": \">9000\"}',12,89),(3939,34,1,'{\"Runtime\": 1748.1041514078777}',5,74),(3940,34,1,'{\"Runtime\": \"failure\"}',17,74),(3941,34,1,'{\"Runtime\": 0.011260588963826498}',8,27),(3942,34,1,'{\"Runtime\": 1.356934626897176}',9,27),(3943,34,1,'{\"Runtime\": 0.8464861710866293}',10,27),(3944,34,1,'{\"Runtime\": 88.45643059412639}',11,27),(3945,34,1,'{\"Runtime\": 0.004781484603881836, \"MSE\": 0.02, \"MCC\": 0.9700708921921396, \"Recall\": 0.98, \"ACC\": 0.98, \"Precision\": 0.980125383486728}',1,23),(3946,34,1,'{\"Runtime\": \"failure\"}',2,23),(3947,34,1,'{\"Runtime\": 0.1478571891784668, \"MSE\": 0.08977556109725686, \"MCC\": 0.22222607434542593, \"Recall\": 0.5952431414105734, \"ACC\": 0.5952431414105734, \"Precision\": 0.6296272555366815}',3,23),(3948,34,1,'{\"Runtime\": \"failure\"}',4,23),(3949,34,1,'{\"Runtime\": 2.0528191725413003, \"MSE\": 0.028472489419007308, \"MCC\": 0.8170198919963921, \"Recall\": 0.9085099459981962, \"ACC\": 0.9085099459981961, \"Precision\": 0.9085099459981962}',5,23),(3950,34,1,'{\"Runtime\": 0.0024575392405192056, \"MSE\": 0.025482832618025753, \"MCC\": 0.47897771489778473, \"Recall\": 0.735774407116056, \"ACC\": 0.735774407116056, \"Precision\": 0.7432618261826183}',6,23),(3951,34,1,'{\"Runtime\": \"failure\"}',7,23),(3952,34,1,'{\"Runtime\": 0.011960983276367188, \"MSE\": 0.015804597701149427, \"MCC\": -0.007663309352096424, \"Recall\": 0.4949421965317919, \"ACC\": 0.4949421965317919, \"Precision\": 0.49709724238026126}',21,23),(3953,34,1,'{\"Runtime\": \"failure\"}',22,23),(3954,34,1,'{\"Runtime\": 0.0017580191294352214, \"MSE\": 0.09985632183908046, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9500718390804598}',23,23),(3955,34,1,'{\"Runtime\": 0.007695833841959636, \"MSE\": 0.10256410256410257, \"MCC\": 0.0637226761495691, \"Recall\": 0.502262443438914, \"ACC\": 0.502262443438914, \"Precision\": 0.9486940298507461}',24,23),(3956,34,1,'{\"Runtime\": 0.006300449371337891, \"MSE\": 0.09821428571428571, \"MCC\": 0.56479954607449, \"Recall\": 0.7742268041237113, \"ACC\": 0.7742268041237114, \"Precision\": 0.7908163265306123}',25,23),(3957,34,1,'{\"Runtime\": \"failure\"}',1,30),(3958,34,1,'{\"MSE\": 0.035256410256410256, \"Precision\": 0.982371794871795, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5}',2,30),(3959,34,1,'{\"MSE\": 0.30423940149625933, \"Precision\": 0.5590185165739088, \"MCC\": 0.21648870496190487, \"Recall\": 0.6985281996938655, \"ACC\": 0.6985281996938656}',3,30),(3960,34,1,'{\"MSE\": 0.20339860260502027, \"Precision\": 0.5577487642226022, \"MCC\": 0.2881212097228311, \"Recall\": 0.8593749260683614, \"ACC\": 0.8593749260683614}',4,30),(3961,34,1,'{\"MSE\": 0.25740669488264717, \"Precision\": 0.6059821820691386, \"MCC\": 0.3540668274961511, \"Recall\": 0.7957179119302505, \"ACC\": 0.7957179119302507}',5,30),(3962,34,1,'{\"MSE\": 0.07430257510729614, \"Precision\": 0.6109733979301267, \"MCC\": 0.4022384018775811, \"Recall\": 0.8644921552436003, \"ACC\": 0.8644921552436001}',6,30),(3963,34,1,'{\"MSE\": 0.021501172791243157, \"Precision\": 0.9892494136043783, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5}',7,30),(3964,34,1,'{\"MSE\": 0.38362068965517243, \"Precision\": 0.504405247991085, \"MCC\": 0.05675542656300192, \"Recall\": 0.6828034682080926, \"ACC\": 0.6828034682080926}',21,30),(3965,34,1,'{\"MSE\": 0.094876660341556, \"Precision\": 0.9525616698292221, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5}',22,30),(3966,34,1,'{\"MSE\": 0.30387931034482757, \"Precision\": 0.5927981552981553, \"MCC\": 0.29751451193822337, \"Recall\": 0.7384607876348562, \"ACC\": 0.7384607876348562}',23,30),(3967,34,1,'{\"MSE\": 0.4358974358974359, \"Precision\": 0.5826001955034213, \"MCC\": 0.27142299946428006, \"Recall\": 0.7229729729729731, \"ACC\": 0.7229729729729729}',24,30),(3968,34,1,'{\"MSE\": 0.22321428571428573, \"Precision\": 0.6774537695590327, \"MCC\": 0.49339118545333194, \"Recall\": 0.8429553264604811, \"ACC\": 0.8429553264604812}',25,30),(3969,34,1,'{\"Runtime\": 0.03961785634358724}',8,29),(3970,34,1,'{\"Runtime\": 0.13447205225626627}',9,29),(3971,34,1,'{\"Runtime\": 69.14955719312032}',12,29),(3972,34,1,'{\"Runtime\": 25.213642199834187}',16,29),(3973,34,1,'{\"Runtime\": 0.08647855122884114}',18,29),(3974,34,1,'{\"Runtime\": 0.5311670303344727}',19,29),(3975,34,1,'{\"Runtime\": \"failure\"}',11,29),(3976,34,1,'{\"Runtime\": \"failure\"}',10,29),(3977,34,1,'{\"Runtime\": 0.03145043055216471, \"MSE\": 1.6666666666666667, \"MCC\": 0, \"Recall\": 0.3333333333333333, \"ACC\": 0.3333333333333333, \"Precision\": 0.7777777777777778}',1,82),(3978,34,1,'{\"Runtime\": 0.020437161127726238, \"MSE\": 0.035256410256410256, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.982371794871795}',2,82),(3979,34,1,'{\"Runtime\": 0.5652183691660563, \"MSE\": 0.07107231920199501, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9644638403990026}',3,82),(3980,34,1,'{\"Runtime\": 7.437715848286946, \"MSE\": 0.029155524885706895, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9854222375571465}',4,82),(3981,34,1,'{\"Runtime\": 10.880485455195108, \"MSE\": 0.0850327048864948, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9574836475567525}',5,82),(3982,34,1,'{\"Runtime\": 0.22436094284057617, \"MSE\": 0.025482832618025753, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9872585836909872}',6,82),(3983,34,1,'{\"Runtime\": 2.5350073973337808, \"MSE\": 0.021501172791243157, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9892494136043783}',7,82),(3984,34,1,'{\"Runtime\": 0.04150724411010742, \"MSE\": 0.005747126436781609, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9971264367816092}',21,82),(3985,34,1,'{\"Runtime\": 0.1773980458577474, \"MSE\": 0.094876660341556, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9525616698292221}',22,82),(3986,34,1,'{\"Runtime\": 0.14121294021606445, \"MSE\": 0.09985632183908046, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9500718390804598}',23,82),(3987,34,1,'{\"Runtime\": 0.650572141011556, \"MSE\": 0.10303030303030303, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9484848484848486}',24,82),(3988,34,1,'{\"Runtime\": 0.0033899943033854165, \"MSE\": 0.13392857142857142, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9330357142857143}',25,82),(3989,34,1,'{\"Runtime\": 0.013466993967692057, \"MSE\": 0.03333333333333333, \"MCC\": 0.9500681414622171, \"Recall\": 0.9666666666666667, \"ACC\": 0.9666666666666667, \"Precision\": 0.9667867146858743}',1,98),(3990,34,1,'{\"Runtime\": 0.03297773996988932, \"MSE\": 0.038461538461538464, \"MCC\": -0.010840090307394688, \"Recall\": 0.4983388704318937, \"ACC\": 0.4983388704318938, \"Precision\": 0.48231511254019294}',2,98),(3991,34,1,'{\"Runtime\": 0.6457082430521647, \"MSE\": 0.06733167082294264, \"MCC\": 0.24694147195106161, \"Recall\": 0.5506181561285765, \"ACC\": 0.5506181561285765, \"Precision\": 0.8011769651113912}',3,98),(3992,34,1,'{\"Runtime\": 146.78936823209128, \"MSE\": 0.01707927197446735, \"MCC\": 0.6413605499859582, \"Recall\": 0.7343630312891838, \"ACC\": 0.7343630312891838, \"Precision\": 0.9387886528173555}',4,98),(3993,34,1,'{\"Runtime\": 13.6508842309316, \"MSE\": 0.020392458637937667, \"MCC\": 0.8686798475908203, \"Recall\": 0.9334472483436022, \"ACC\": 0.9334472483436023, \"Precision\": 0.9352344376934539}',5,98),(3994,34,1,'{\"Runtime\": 3.30273429552714, \"MSE\": 0.01555793991416309, \"MCC\": 0.6391030304734503, \"Recall\": 0.7613687397684964, \"ACC\": 0.7613687397684964, \"Precision\": 0.8906862426644145}',6,98),(3995,35,2,'{\"Runtime\": 4321.754327138265}',33,89),(3996,34,1,'{\"Runtime\": 330.3257110118866, \"MSE\": 0.01641907740422205, \"MCC\": 0.48214410689199605, \"Recall\": 0.6181818181818182, \"ACC\": 0.6181818181818182, \"Precision\": 0.9917485265225934}',7,98),(3997,34,1,'{\"Runtime\": 0.5006690820058187, \"MSE\": 0.005747126436781609, \"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"Precision\": 0.9971264367816092}',21,98),(3998,34,1,'{\"Runtime\": 0.3758969306945801, \"MSE\": 0.09867172675521822, \"MCC\": 0.22432371387479666, \"Recall\": 0.569517819706499, \"ACC\": 0.569517819706499, \"Precision\": 0.6809648548351888}',22,98),(3999,34,1,'{\"Runtime\": 0.5030415058135986, \"MSE\": 0.12212643678160921, \"MCC\": 0.17310041792693143, \"Recall\": 0.567581688838873, \"ACC\": 0.567581688838873, \"Precision\": 0.6108427267847557}',23,98),(4000,34,1,'{\"Runtime\": 1.5670477549235027, \"MSE\": 0.05641025641025641, \"MCC\": 0.6847180697468859, \"Recall\": 0.8303778892014186, \"ACC\": 0.8303778892014186, \"Precision\": 0.8547746764857411}',24,98),(4001,34,1,'{\"Runtime\": 0.0030903021494547525, \"MSE\": 0.08928571428571429, \"MCC\": 0.5941139850215877, \"Recall\": 0.7793814432989691, \"ACC\": 0.7793814432989693, \"Precision\": 0.8158508158508159}',25,98),(4002,34,1,'{\"Runtime\": 119.82636594772339}',12,51),(4003,34,1,'{\"Runtime\": 3.590036710103353}',15,51),(4004,34,1,'{\"Runtime\": 0.0074075063069661455}',14,52),(4005,34,1,'{\"Runtime\": 32.603887716929115}',17,46),(4006,34,1,'{\"Runtime\": 0.08393422762552898}',13,46),(4007,34,1,'{\"Runtime\": 4.005751132965088}',5,48),(4008,34,1,'{\"Runtime\": 0.0257265567779541}',38,49),(4009,34,1,'{\"Runtime\": 0.044680277506510414}',40,50),(4010,34,1,'{\"Runtime\": 1455.5961168607075}',20,47),(4011,34,1,'{\"Runtime\": 0.00020702679951985678}',13,53),(4012,34,1,'{\"Runtime\": 0.00015465418497721353}',1,53),(4013,34,1,'{\"Runtime\": 0.0009516874949137369}',1,79),(4014,34,1,'{\"Runtime\": 0.0013050238291422527}',13,79),(4015,34,1,'{\"Runtime\": 0.0012825330098470051}',26,79),(4016,34,1,'{\"Runtime\": 0.0014810562133789062}',8,79),(4017,34,1,'{\"Runtime\": \"failure\"}',27,79),(4018,34,1,'{\"Runtime\": 0.004781325658162435}',28,79),(4019,34,1,'{\"Runtime\": \"failure\"}',29,79),(4020,34,1,'{\"Runtime\": 0.03605222702026367}',30,79),(4021,34,1,'{\"Runtime\": 0.05364044507344564}',31,79),(4022,34,1,'{\"Runtime\": 1.228573481241862}',32,79),(4023,34,1,'{\"Runtime\": \"failure\"}',10,79),(4024,34,1,'{\"Runtime\": 3.536226511001587}',11,79),(4025,34,1,'{\"Runtime\": 0.6545279820760092}',15,79),(4026,34,1,'{\"Runtime\": 18.810255130132038}',5,79),(4027,34,1,'{\"Runtime\": 13.929045995076498}',17,79),(4028,34,1,'{\"Runtime\": 1.4440686702728271}',20,79),(4029,34,1,'{\"Runtime\": 267.3523006439209}',12,79),(4030,34,1,'{\"Runtime\": 27.423089901606243}',33,79),(4031,34,1,'{\"Runtime\": 102.27303115526836}',16,79),(4032,34,1,'{\"Runtime\": 31.76917878786723}',34,79),(4033,34,1,'{\"Runtime\": 0.0010551611582438152}',1,80),(4034,34,1,'{\"Runtime\": 0.0015073617299397786}',13,80),(4035,34,1,'{\"Runtime\": 0.0014418760935465496}',26,80),(4036,34,1,'{\"Runtime\": 0.0016140143076578777}',8,80),(4037,34,1,'{\"Runtime\": 0.0023816426595052085}',27,80),(4038,34,1,'{\"Runtime\": 0.004672447840372722}',28,80),(4039,34,1,'{\"Runtime\": \"failure\"}',29,80),(4040,34,1,'{\"Runtime\": 0.0312802791595459}',30,80),(4041,34,1,'{\"Runtime\": 0.04882955551147461}',31,80),(4042,34,1,'{\"Runtime\": 0.9975985685984293}',32,80),(4043,34,1,'{\"Runtime\": 0.48015157381693524}',10,80),(4044,34,1,'{\"Runtime\": 2.9039374192555747}',11,80),(4045,34,1,'{\"Runtime\": 0.5564974149068197}',15,80),(4046,34,1,'{\"Runtime\": 14.945471366246542}',5,80),(4047,34,1,'{\"Runtime\": 11.783835490544638}',17,80),(4048,34,1,'{\"Runtime\": 1.3316136201222737}',20,80),(4049,35,2,'{\"Runtime\": \">9000\"}',16,89),(4050,35,2,'{\"MCC\": 0.82838215464777, \"Recall\": 0.88, \"ACC\": 0.88, \"MSE\": 0.12, \"LFT\": 2.1999999999999997, \"Runtime\": 0.23841094970703125, \"Precision\": 0.8933706816059757}',1,24),(4051,35,2,'{\"MCC\": 0.19119895316461966, \"Recall\": 0.6946541830262761, \"ACC\": 0.6946541830262761, \"MSE\": 0.16666666666666666, \"LFT\": 0.8368034946108033, \"Runtime\": 0.8109281857808431, \"Precision\": 0.546951263932396}',2,24),(4052,35,2,'{\"MCC\": 0.11661504139302807, \"Recall\": 0.5806664311786177, \"ACC\": 0.5806664311786176, \"MSE\": 0.1770573566084788, \"LFT\": 0.6818367171379962, \"Runtime\": 8.201527754465738, \"Precision\": 0.5421459945618071}',3,24),(4053,34,1,'{\"Runtime\": 210.75553242365518}',12,80),(4054,34,1,'{\"Runtime\": 22.60824449857076}',33,80),(4055,35,2,'{\"MCC\": 0.700039350007866, \"Recall\": 0.8281623683359665, \"ACC\": 0.8281623683359663, \"MSE\": 0.01604416458207539, \"LFT\": 0.8498615859182843, \"Runtime\": 178.0883751710256, \"Precision\": 0.87333279105431}',4,24),(4056,34,1,'{\"Runtime\": 83.15117065111797}',16,80),(4057,35,2,'{\"MCC\": 0.81777775807185, \"Recall\": 0.9105621287138131, \"ACC\": 0.9105621287138134, \"MSE\": 0.028472489419007308, \"LFT\": 0.9960231365855222, \"Runtime\": 54.16548283894857, \"Precision\": 0.9072224487022694}',5,24),(4058,35,2,'{\"MCC\": 0.462161876694525, \"Recall\": 0.6860330015790922, \"ACC\": 0.6860330015790922, \"MSE\": 0.022532188841201718, \"LFT\": 0.6974450586001787, \"Runtime\": 4.034652312596639, \"Precision\": 0.7870372440061336}',6,24),(4059,34,1,'{\"Runtime\": 26.18417501449585}',34,80),(4060,34,1,'{\"Runtime\": 0.0009572505950927734}',1,81),(4061,34,1,'{\"Runtime\": 0.0012946128845214844}',13,81),(4062,34,1,'{\"Runtime\": 0.0012768109639485676}',26,81),(4063,34,1,'{\"Runtime\": 0.0014386971791585286}',8,81),(4064,34,1,'{\"Runtime\": 0.0019653638203938804}',27,81),(4065,34,1,'{\"Runtime\": 0.0041476090749104815}',28,81),(4066,34,1,'{\"Runtime\": \"failure\"}',29,81),(4067,34,1,'{\"Runtime\": 0.031010548273722332}',30,81),(4068,34,1,'{\"Runtime\": 0.04859034220377604}',31,81),(4069,34,1,'{\"Runtime\": 0.9908087253570557}',32,81),(4070,34,1,'{\"Runtime\": 0.4618278344472249}',10,81),(4071,34,1,'{\"Runtime\": 2.8987462520599365}',11,81),(4072,34,1,'{\"Runtime\": 0.5564200083414713}',15,81),(4073,34,1,'{\"Runtime\": 14.9267528851827}',5,81),(4074,34,1,'{\"Runtime\": 11.784166018168131}',17,81),(4075,34,1,'{\"Runtime\": 1.3309949239095051}',20,81),(4076,34,1,'{\"Runtime\": 210.71213539441428}',12,81),(4077,34,1,'{\"Runtime\": 22.603586594263714}',33,81),(4078,34,1,'{\"Runtime\": 83.1482888062795}',16,81),(4079,34,1,'{\"Runtime\": 26.188570658365887}',34,81),(4080,35,2,'{\"MCC\": 0.8931703954993351, \"Recall\": 0.9177822976065085, \"ACC\": 0.9177822976065085, \"MSE\": 0.004300234558248631, \"LFT\": 0.9353335128595414, \"Runtime\": 1456.040781577428, \"Precision\": 0.9773738379814075}',7,24),(4081,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.005747126436781609, \"LFT\": 0.5, \"Runtime\": 1.5733497142791748, \"Precision\": 0.9971264367816092}',21,24),(4082,35,2,'{\"MCC\": 0.27755612149772924, \"Recall\": 0.5579035639412998, \"ACC\": 0.5579035639412998, \"MSE\": 0.0872865275142315, \"LFT\": 0.5665032335203564, \"Runtime\": 2.526155869166056, \"Precision\": 0.8326107899807322}',22,24),(4083,35,2,'{\"MCC\": 0.06321433277671083, \"Recall\": 0.5140009301417605, \"ACC\": 0.5140009301417604, \"MSE\": 0.10919540229885057, \"LFT\": 0.523401093458179, \"Runtime\": 1.7912821769714355, \"Precision\": 0.571353328456474}',23,24),(4084,35,2,'{\"MCC\": 0.2350246791924883, \"Recall\": 0.6704628836981779, \"ACC\": 0.6704628836981777, \"MSE\": 0.24988344988344988, \"LFT\": 0.9113706498939109, \"Runtime\": 5.235518455505371, \"Precision\": 0.5810097169412758}',24,24),(4085,35,2,'{\"MCC\": 0.6633982151391192, \"Recall\": 0.8869415807560137, \"ACC\": 0.8869415807560138, \"MSE\": 0.09821428571428571, \"LFT\": 1.1037495227185947, \"Runtime\": 0.11268162727355957, \"Precision\": 0.7843434343434343}',25,24),(4086,35,2,'{\"Runtime\": 0.0012360413869222004}',8,94),(4087,35,2,'{\"Runtime\": 0.004912376403808594}',9,94),(4088,35,2,'{\"Runtime\": 1.521147886912028}',10,94),(4089,35,2,'{\"Runtime\": 0.11289644241333008}',11,94),(4090,35,2,'{\"Runtime\": 0.03742384910583496}',8,26),(4091,35,2,'{\"Runtime\": 0.014104207356770834}',9,26),(4092,35,2,'{\"Runtime\": 217.4392499923706}',19,26),(4093,35,2,'{\"Runtime\": \"failure\"}',39,44),(4094,35,2,'{\"Runtime\": \"failure\"}',39,43),(4095,35,2,'{\"Runtime\": \"failure\"}',39,42),(4096,35,2,'{\"MCC\": 0.9700708921921396, \"Recall\": 0.98, \"ACC\": 0.98, \"MSE\": 0.02, \"Runtime\": 0.031206607818603516, \"Precision\": 0.980125383486728}',1,62),(4097,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.035256410256410256, \"Runtime\": 0.012532472610473633, \"Precision\": 0.982371794871795}',2,62),(4098,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.07107231920199501, \"Runtime\": 0.8526275157928467, \"Precision\": 0.9644638403990026}',3,62),(4099,35,2,'{\"MCC\": 0.26714012775644336, \"Recall\": 0.8422494670350323, \"ACC\": 0.8422494670350323, \"MSE\": 0.22272060726300355, \"Runtime\": 12.560184637705484, \"Precision\": 0.5521285310361229}',4,62),(4100,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.0850327048864948, \"Runtime\": 11.726355393727621, \"Precision\": 0.9574836475567525}',5,62),(4101,35,2,'{\"MCC\": 0.43620816317303274, \"Recall\": 0.8125863792429048, \"ACC\": 0.812586379242905, \"MSE\": 0.04560085836909871, \"Runtime\": 0.006911913553873698, \"Precision\": 0.6521799846810743}',6,62),(4102,35,2,'{\"MCC\": 0.04725805177064731, \"Recall\": 0.5471434278865361, \"ACC\": 0.5471434278865361, \"MSE\": 0.8862392494136043, \"Runtime\": 2789.9510146776834, \"Precision\": 0.5118432385874246}',7,62),(4103,35,2,'{\"MCC\": 0, \"Recall\": 0.5, \"ACC\": 0.5, \"MSE\": 0.005747126436781609, \"Runtime\": 0.015908002853393555, \"Precision\": 0.9971264367816092}',21,62),(4104,35,2,'{\"MCC\": 0.195677871946535, \"Recall\": 0.6477987421383647, \"ACC\": 0.6477987421383647, \"MSE\": 0.6375711574952562, \"Runtime\": 0.027226924896240234, \"Precision\": 0.5647668393782384}',22,62),(4105,35,2,'{\"MCC\": 0.29813756997608887, \"Recall\": 0.7396636561461127, \"ACC\": 0.7396636561461126, \"MSE\": 0.3074712643678161, \"Runtime\": 0.005314191182454427, \"Precision\": 0.5927195345975375}',23,62),(4106,35,2,'{\"MCC\": 0.4019395409599171, \"Recall\": 0.7944233826586768, \"ACC\": 0.7944233826586767, \"MSE\": 0.2107226107226107, \"Runtime\": 0.04009024302164713, \"Precision\": 0.6371794871794871}',24,62),(4107,35,2,'{\"MCC\": 0.32090612406050256, \"Recall\": 0.7147766323024053, \"ACC\": 0.7147766323024055, \"MSE\": 0.25, \"Runtime\": 0.0019422372182210286, \"Precision\": 0.6198695818948984}',25,62),(4108,36,7,'{\"Runtime\": 0.7819436666666667}',38,49),(4109,36,7,'{\"Runtime\": 0.423427}',13,53),(4110,36,7,'{\"Runtime\": 0.41312299999999996}',1,53),(4111,36,7,'{\"Runtime\": 33.01271066666667}',17,46),(4112,36,7,'{\"Runtime\": 1.1565396666666665}',13,46),(4113,36,7,'{\"Runtime\": \">9000\"}',20,47),(4114,36,7,'{\"Runtime\": 37.71354}',5,48),(4115,36,7,'{\"Runtime\": 1558.071889}',12,51),(4116,36,7,'{\"Runtime\": 19.433101333333337}',15,51),(4117,36,7,'{\"Runtime\": 0.535338}',14,52),(4118,36,7,'{\"Runtime\": 1.2811986666666666}',40,50),(4119,36,7,'{\"Runtime\": 1.3353016666666668}',8,29),(4120,36,7,'{\"Runtime\": 17.418085333333334}',9,29),(4121,36,7,'{}',12,29),(4122,36,7,'{}',16,29),(4123,36,7,'{\"Runtime\": 6.664582333333333}',18,29),(4124,36,7,'{\"Runtime\": \">9000\"}',19,29),(4125,36,7,'{\"Runtime\": 10.304935333333333}',11,29),(4126,36,7,'{\"Runtime\": 3.160766666666667}',10,29),(4127,36,7,'{\"Runtime\": 0.07194766666666666}',1,95),(4128,36,7,'{\"Runtime\": 0.05669866666666667}',43,95),(4129,36,7,'{\"Runtime\": 1.3751936666666669}',11,95),(4130,36,7,'{\"Runtime\": \"failure\"}',1,79),(4131,36,7,'{\"Runtime\": \"failure\"}',13,79),(4132,36,7,'{\"Runtime\": \"failure\"}',26,79),(4133,36,7,'{\"Runtime\": \"failure\"}',8,79),(4134,36,7,'{\"Runtime\": \"failure\"}',27,79),(4135,36,7,'{\"Runtime\": \"failure\"}',28,79),(4136,36,7,'{}',29,79),(4137,36,7,'{\"Runtime\": \"failure\"}',30,79),(4138,36,7,'{\"Runtime\": \"failure\"}',31,79),(4139,36,7,'{\"Runtime\": \"failure\"}',32,79),(4140,36,7,'{\"Runtime\": \"failure\"}',10,79),(4141,36,7,'{\"Runtime\": \"failure\"}',11,79),(4142,36,7,'{\"Runtime\": \"failure\"}',15,79),(4143,36,7,'{\"Runtime\": \"failure\"}',5,79),(4144,36,7,'{\"Runtime\": \"failure\"}',17,79),(4145,36,7,'{\"Runtime\": \"failure\"}',20,79),(4146,36,7,'{\"Runtime\": \"failure\"}',12,79),(4147,36,7,'{\"Runtime\": \"failure\"}',33,79),(4148,36,7,'{\"Runtime\": \"failure\"}',16,79),(4149,36,7,'{\"Runtime\": \"failure\"}',34,79),(4150,36,7,'{\"Runtime\": \"failure\"}',1,80),(4151,36,7,'{\"Runtime\": \"failure\"}',13,80),(4152,36,7,'{\"Runtime\": \"failure\"}',26,80),(4153,36,7,'{\"Runtime\": \"failure\"}',8,80),(4154,36,7,'{\"Runtime\": \"failure\"}',27,80),(4155,36,7,'{\"Runtime\": \"failure\"}',28,80),(4156,36,7,'{}',29,80),(4157,36,7,'{\"Runtime\": \"failure\"}',30,80),(4158,36,7,'{\"Runtime\": \"failure\"}',31,80),(4159,36,7,'{\"Runtime\": \"failure\"}',32,80),(4160,36,7,'{\"Runtime\": \"failure\"}',10,80),(4161,36,7,'{\"Runtime\": \"failure\"}',11,80),(4162,36,7,'{\"Runtime\": \"failure\"}',15,80),(4163,36,7,'{\"Runtime\": \"failure\"}',5,80),(4164,36,7,'{\"Runtime\": \"failure\"}',17,80),(4165,36,7,'{\"Runtime\": \"failure\"}',20,80),(4166,36,7,'{\"Runtime\": \"failure\"}',12,80),(4167,36,7,'{\"Runtime\": \"failure\"}',33,80),(4168,36,7,'{\"Runtime\": \"failure\"}',16,80),(4169,36,7,'{\"Runtime\": \"failure\"}',34,80),(4170,36,7,'{\"Runtime\": \"failure\"}',1,81),(4171,36,7,'{\"Runtime\": \"failure\"}',13,81),(4172,36,7,'{\"Runtime\": \"failure\"}',26,81),(4173,36,7,'{\"Runtime\": \"failure\"}',8,81),(4174,36,7,'{\"Runtime\": \"failure\"}',27,81),(4175,36,7,'{\"Runtime\": \"failure\"}',28,81),(4176,36,7,'{}',29,81),(4177,36,7,'{\"Runtime\": \"failure\"}',30,81),(4178,36,7,'{\"Runtime\": \"failure\"}',31,81),(4179,36,7,'{\"Runtime\": \"failure\"}',32,81),(4180,36,7,'{\"Runtime\": \"failure\"}',10,81),(4181,36,7,'{\"Runtime\": \"failure\"}',11,81),(4182,36,7,'{\"Runtime\": \"failure\"}',15,81),(4183,36,7,'{\"Runtime\": \"failure\"}',5,81),(4184,36,7,'{\"Runtime\": \"failure\"}',17,81),(4185,36,7,'{\"Runtime\": \"failure\"}',20,81),(4186,36,7,'{\"Runtime\": \"failure\"}',12,81),(4187,36,7,'{\"Runtime\": \"failure\"}',33,81),(4188,36,7,'{\"Runtime\": \"failure\"}',16,81),(4189,36,7,'{\"Runtime\": \"failure\"}',34,81),(4190,36,7,'{\"Runtime\": 0.03703533333333334}',13,89),(4191,36,7,'{\"Runtime\": 0.10912333333333334}',14,89),(4192,36,7,'{\"Runtime\": 0.9088553333333333}',13,89),(4193,36,7,'{\"Runtime\": 257.8174956666666}',5,89),(4194,36,7,'{\"Runtime\": 29.391749666666666}',15,89),(4195,36,7,'{\"Runtime\": 42.396129666666674}',17,89),(4196,36,7,'{\"Runtime\": 1685.9406343333333}',20,89),(4197,36,7,'{\"Runtime\": \"failure\"}',12,89),(4198,36,7,'{\"Runtime\": \">9000\"}',33,89),(4199,36,7,'{\"Runtime\": \"failure\"}',16,89);
/*!40000 ALTER TABLE `metrics` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `results`
--

DROP TABLE IF EXISTS `results`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `results` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `build_id` int(11) NOT NULL,
  `libary_id` int(11) NOT NULL,
  `time` double NOT NULL,
  `var` double NOT NULL,
  `dataset_id` int(11) NOT NULL,
  `method_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `build_id` (`build_id`),
  KEY `libary_id` (`libary_id`),
  KEY `dataset_id` (`dataset_id`),
  KEY `method_id` (`method_id`),
  CONSTRAINT `results_ibfk_1` FOREIGN KEY (`build_id`) REFERENCES `builds` (`id`) ON DELETE CASCADE,
  CONSTRAINT `results_ibfk_2` FOREIGN KEY (`libary_id`) REFERENCES `libraries` (`id`) ON DELETE CASCADE,
  CONSTRAINT `results_ibfk_3` FOREIGN KEY (`dataset_id`) REFERENCES `datasets` (`id`) ON DELETE CASCADE,
  CONSTRAINT `results_ibfk_4` FOREIGN KEY (`method_id`) REFERENCES `methods` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=4200 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `results`
--

LOCK TABLES `results` WRITE;
/*!40000 ALTER TABLE `results` DISABLE KEYS */;
INSERT INTO `results` VALUES (1,1,1,0,0,1,23),(2,1,1,0,0,2,23),(3,1,1,0,0,3,23),(4,1,1,0,0,4,23),(5,1,1,0,0,5,23),(6,1,1,0,0,6,23),(7,2,2,0.23273,0,1,24),(8,2,2,0.799062,0,2,24),(9,3,1,0.003451,0,8,27),(10,3,1,1.343872,0,9,27),(11,3,1,0.824595,0,10,27),(12,3,1,88.310083,0,11,27),(13,3,1,0.000713,0,8,29),(14,3,1,0.134044,0,9,29),(15,4,3,0.008376,0,13,35),(16,4,3,0.163681,0,14,35),(17,4,3,0.664372,0,13,35),(18,4,3,13.270063,0,5,35),(19,3,1,69.470008,0,12,29),(20,4,3,91.405888,0,15,35),(21,3,1,25.442022,0,16,29),(22,3,1,0.0835,0,18,29),(23,3,1,0.546096,0,19,29),(24,3,1,0,0,11,29),(25,3,1,0,0,10,29),(26,3,1,0,0,1,30),(27,3,1,0,0,2,30),(28,3,1,0,0,3,30),(29,3,1,0,0,4,30),(30,3,1,0,0,5,30),(31,3,1,0,0,6,30),(32,5,4,0.000244,0,13,85),(33,5,4,0.005239,0,14,85),(34,5,4,0.018076,0,13,85),(35,5,4,12.039796,0,5,85),(36,5,4,4.022054,0,15,85),(37,5,4,3.443868,0,17,85),(38,4,3,150.982198,0,17,35),(39,6,5,0.000219,0,13,90),(40,6,5,0.005939,0,14,90),(41,6,5,0.022813,0,13,90),(42,3,1,0,0,7,30),(43,3,1,0,0,21,30),(44,3,1,0,0,22,30),(45,3,1,0,0,23,30),(46,3,1,0,0,24,30),(47,3,1,0,0,25,30),(48,6,5,16.867599,0,5,90),(49,3,1,0.000825,0,1,23),(50,3,1,0,0,2,23),(51,3,1,0.147937,0,3,23),(52,3,1,0,0,4,23),(53,6,5,5.610196,0,15,90),(54,5,4,188.073553,0,20,85),(55,3,1,2.058999,0,5,23),(56,3,1,0.002551,0,6,23),(57,6,5,4.399532,0,17,90),(58,6,5,400.885677,0,20,90),(59,7,1,0.012429,0,1,79),(60,7,1,0.000992,0,13,79),(61,7,1,0.000955,0,26,79),(62,7,1,0.00114,0,8,79),(63,7,1,0,0,27,79),(64,7,1,0.004162,0,28,79),(65,7,1,0,0,29,79),(66,7,1,0.035228,0,30,79),(67,7,1,0.052796,0,31,79),(68,7,1,1.228454,0,32,79),(69,7,1,0,0,10,79),(70,7,1,3.55341,0,11,79),(71,7,1,0.664401,0,15,79),(72,8,3,0.008282,0,13,102),(73,8,3,0.162153,0,14,102),(74,8,3,0.671735,0,13,102),(75,7,1,18.785206,0,5,79),(76,8,3,13.282096,0,5,102),(77,7,1,14.205126,0,17,79),(78,7,1,1.479404,0,20,79),(79,8,3,91.255164,0,15,102),(80,9,5,0.000221,0,13,34),(81,9,5,0.006292,0,14,34),(82,9,5,0.024336,0,13,34),(83,9,5,18.412948,0,5,34),(84,9,5,7.001241,0,15,34),(85,9,5,4.68421,0,17,34),(86,8,3,151.217629,0,17,102),(87,10,4,0.000241,0,13,100),(88,10,4,0.004994,0,14,100),(89,10,4,0.016722,0,13,100),(90,10,4,10.849948,0,5,100),(91,10,4,3.056157,0,15,100),(92,10,4,3.235272,0,17,100),(93,7,1,270.580507,0,12,79),(94,7,1,27.776928,0,33,79),(95,10,4,132.682689,0,20,100),(96,7,1,102.644514,0,16,79),(97,7,1,32.270099,0,34,79),(98,7,1,0.000657,0,1,81),(99,7,1,0.000989,0,13,81),(100,7,1,0.000938,0,26,81),(101,7,1,0.001096,0,8,81),(102,7,1,0.001498,0,27,81),(103,7,1,0.00367,0,28,81),(104,7,1,0,0,29,81),(105,7,1,0.030052,0,30,81),(106,7,1,0.047181,0,31,81),(107,7,1,0.995782,0,32,81),(108,7,1,0.467696,0,10,81),(109,7,1,2.915699,0,11,81),(110,7,1,0.574138,0,15,81),(111,7,1,14.909868,0,5,81),(112,7,1,11.994435,0,17,81),(113,7,1,1.351226,0,20,81),(114,9,5,533.391703,0,20,34),(115,7,1,215.107518,0,12,81),(116,7,1,22.918807,0,33,81),(117,7,1,83.095095,0,16,81),(118,7,1,26.591095,0,34,81),(119,7,1,0.000733,0,1,80),(120,7,1,0.001177,0,13,80),(121,7,1,0.001077,0,26,80),(122,7,1,0.001287,0,8,80),(123,7,1,0.001778,0,27,80),(124,7,1,0.004127,0,28,80),(125,7,1,0,0,29,80),(126,7,1,0.030363,0,30,80),(127,7,1,0.047413,0,31,80),(128,7,1,0.993413,0,32,80),(129,7,1,0.487778,0,10,80),(130,7,1,2.916806,0,11,80),(131,7,1,0.575265,0,15,80),(132,7,1,14.929938,0,5,80),(133,7,1,11.988784,0,17,80),(134,7,1,1.351917,0,20,80),(135,7,1,214.786491,0,12,80),(136,7,1,22.915788,0,33,80),(137,7,1,83.131579,0,16,80),(138,7,1,26.594125,0,34,80),(139,7,1,0.004645,0,13,89),(140,7,1,0.51252,0,14,89),(141,7,1,5.913371,0,13,89),(142,7,1,61.360771,0,5,89),(143,7,1,0,0,15,89),(144,11,4,0.000243,0,13,100),(145,11,4,0.004942,0,14,100),(146,11,4,0.016772,0,13,100),(147,11,4,10.86592,0,5,100),(148,11,4,3.058934,0,15,100),(149,11,4,3.24031,0,17,100),(150,11,4,132.826074,0,20,100),(151,12,4,0.000242,0,13,85),(152,12,4,0.005269,0,14,85),(153,12,4,0.018012,0,13,85),(154,12,4,12.040768,0,5,85),(155,12,4,4.023746,0,15,85),(156,12,4,3.438158,0,17,85),(157,12,4,188.002118,0,20,85),(158,13,4,0.00024,0,13,101),(159,13,4,0.005117,0,14,101),(160,13,4,0.017435,0,13,101),(161,13,4,11.540443,0,5,101),(162,13,4,3.568048,0,15,101),(163,13,4,3.346651,0,17,101),(164,13,4,161.866067,0,20,101),(165,13,4,2271.314958,0,12,101),(166,13,4,688.872812,0,33,101),(167,14,4,0.000256,0,13,104),(168,14,4,0.004933,0,14,104),(169,14,4,0.016963,0,13,104),(170,14,4,11.068466,0,5,104),(171,14,4,3.210155,0,15,104),(172,14,4,3.267208,0,17,104),(173,14,4,141.21608,0,20,104),(174,14,4,2263.903767,0,12,104),(175,14,4,617.403293,0,33,104),(176,14,4,2869.681907,0,16,104),(177,14,4,0.000242,0,13,100),(178,14,4,0.004905,0,14,100),(179,14,4,0.016951,0,13,100),(180,14,4,10.872974,0,5,100),(181,14,4,3.054179,0,15,100),(182,14,4,3.235772,0,17,100),(183,14,4,132.771313,0,20,100),(184,14,4,2261.694675,0,12,100),(185,14,4,587.109639,0,33,100),(186,14,4,2867.63876,0,16,100),(187,14,4,0.000269,0,13,101),(188,14,4,0.005161,0,14,101),(189,14,4,0.017497,0,13,101),(190,14,4,11.562434,0,5,101),(191,14,4,3.563084,0,15,101),(192,14,4,3.348833,0,17,101),(193,14,4,161.721166,0,20,101),(194,14,4,2270.538292,0,12,101),(195,14,4,688.957729,0,33,101),(196,14,4,2875.828793,0,16,101),(197,14,4,0.000242,0,13,90),(198,14,4,0.005008,0,14,90),(199,14,4,0.017228,0,13,90),(200,14,4,11.340549,0,5,90),(201,14,4,3.378146,0,15,90),(202,14,4,3.30571,0,17,90),(203,14,4,150.836657,0,20,90),(204,14,4,2268.673175,0,12,90),(205,14,4,651.682977,0,33,90),(206,14,4,2874.877511,0,16,90),(207,14,4,0.000244,0,13,34),(208,14,4,0.005109,0,14,34),(209,14,4,0.01781,0,13,34),(210,14,4,11.854897,0,5,34),(211,14,4,3.782746,0,15,34),(212,14,4,3.391268,0,17,34),(213,14,4,174.766426,0,20,34),(214,14,4,2275.081794,0,12,34),(215,14,4,730.216654,0,33,34),(216,14,4,2880.970445,0,16,34),(217,14,4,0.000242,0,13,85),(218,14,4,0.005228,0,14,85),(219,14,4,0.018209,0,13,85),(220,14,4,12.148498,0,5,85),(221,14,4,4.019375,0,15,85),(222,14,4,3.439922,0,17,85),(223,14,4,188.378602,0,20,85),(224,14,4,2278.759334,0,12,85),(225,14,4,777.852537,0,33,85),(226,14,4,2884.671207,0,16,85),(227,15,3,0.008379,0,13,35),(228,15,3,0.162178,0,14,35),(229,15,3,0.664747,0,13,35),(230,16,1,0.004543,0,13,89),(231,16,1,0.51065,0,14,89),(232,15,3,13.243242,0,5,35),(233,16,1,5.848034,0,13,89),(234,16,1,61.574854,0,5,89),(235,16,1,0,0,15,89),(236,15,3,91.230271,0,15,35),(237,17,5,0.000219,0,13,101),(238,17,5,0.006187,0,14,101),(239,17,5,0.023583,0,13,101),(240,17,5,17.551676,0,5,101),(241,17,5,6.336695,0,15,101),(242,17,5,4.519001,0,17,101),(243,15,3,151.312747,0,17,35),(244,17,5,459.864393,0,20,101),(245,18,6,0,0,8,26),(246,18,6,0,0,9,26),(247,16,1,0,0,17,89),(248,18,6,0,0,19,26),(249,18,6,0.036757,0,35,70),(250,18,6,3.467529,0,36,70),(251,18,6,282.397224,0,37,70),(252,17,5,4377.280144,0,12,101),(253,15,3,-23806.338696,0,20,35),(254,16,1,0,0,20,89),(255,16,1,0,0,12,89),(256,17,5,1105.668829,0,33,101),(257,18,6,0,0,29,70),(258,18,6,469.159149,0,38,70),(259,15,3,1635.23145,0,12,35),(260,16,1,0,0,33,89),(261,16,1,0,0,16,89),(262,16,1,0.017951,0,8,29),(263,16,1,0.1344,0,9,29),(264,16,1,69.49083,0,12,29),(265,16,1,25.509756,0,16,29),(266,16,1,0.084476,0,18,29),(267,16,1,0.540478,0,19,29),(268,16,1,0,0,11,29),(269,16,1,0,0,10,29),(270,16,1,0.091105,0,1,97),(271,16,1,0,0,2,97),(272,16,1,0,0,3,97),(273,16,1,0,0,4,97),(274,16,1,0,0,5,97),(275,16,1,0,0,6,97),(276,16,1,0,0,7,97),(277,16,1,0,0,21,97),(278,16,1,0,0,22,97),(279,16,1,0,0,23,97),(280,16,1,0,0,24,97),(281,16,1,0,0,25,97),(282,16,1,0.010646,0,8,27),(283,16,1,1.346563,0,9,27),(284,16,1,0.838042,0,10,27),(285,16,1,88.453524,0,11,27),(286,16,1,0,0,1,30),(287,16,1,0,0,2,30),(288,16,1,0,0,3,30),(289,16,1,0,0,4,30),(290,16,1,0,0,5,30),(291,16,1,0,0,6,30),(292,18,6,0,0,19,70),(293,18,6,5.163125,0,10,70),(294,18,6,38.011229,0,11,70),(295,18,6,15.363181,0,39,70),(296,16,1,0,0,7,30),(297,16,1,0,0,21,30),(298,16,1,0,0,22,30),(299,16,1,0,0,23,30),(300,16,1,0,0,24,30),(301,16,1,0,0,25,30),(302,16,1,0.006451,0,1,79),(303,16,1,0.001383,0,13,79),(304,16,1,0.001317,0,26,79),(305,16,1,0.001511,0,8,79),(306,16,1,0,0,27,79),(307,16,1,0.004642,0,28,79),(308,16,1,0,0,29,79),(309,16,1,0.035326,0,30,79),(310,16,1,0.05388,0,31,79),(311,16,1,1.229398,0,32,79),(312,16,1,0,0,10,79),(313,16,1,3.540579,0,11,79),(314,16,1,0.653473,0,15,79),(315,16,1,18.803387,0,5,79),(316,15,3,3003.470628,0,33,35),(317,16,1,14.204279,0,17,79),(318,16,1,1.453329,0,20,79),(319,16,1,267.226085,0,12,79),(320,16,1,27.449899,0,33,79),(321,16,1,101.826615,0,16,79),(322,15,3,512.414699,0,16,35),(323,15,3,0.008173,0,13,102),(324,15,3,0.162066,0,14,102),(325,15,3,0.668783,0,13,102),(326,15,3,13.279247,0,5,102),(327,16,1,31.677177,0,34,79),(328,16,1,0.001113,0,1,80),(329,16,1,0.001527,0,13,80),(330,16,1,0.001467,0,26,80),(331,16,1,0.001686,0,8,80),(332,16,1,0.00218,0,27,80),(333,16,1,0.004588,0,28,80),(334,16,1,0,0,29,80),(335,16,1,0.030648,0,30,80),(336,16,1,0.048936,0,31,80),(337,16,1,0.993947,0,32,80),(338,16,1,0.483449,0,10,80),(339,16,1,2.904286,0,11,80),(340,16,1,0.570529,0,15,80),(341,16,1,14.944255,0,5,80),(342,15,3,91.446866,0,15,102),(343,16,1,12.008694,0,17,80),(344,16,1,1.336805,0,20,80),(345,15,3,150.822851,0,17,102),(346,16,1,212.260025,0,12,80),(347,16,1,22.656355,0,33,80),(348,16,1,82.761366,0,16,80),(349,16,1,26.072605,0,34,80),(350,16,1,0.001064,0,1,81),(351,16,1,0.001372,0,13,81),(352,16,1,0.001322,0,26,81),(353,16,1,0.001536,0,8,81),(354,16,1,0.001868,0,27,81),(355,16,1,0.004108,0,28,81),(356,16,1,0,0,29,81),(357,16,1,0.030641,0,30,81),(358,16,1,0.048802,0,31,81),(359,16,1,0.988328,0,32,81),(360,16,1,0.464566,0,10,81),(361,16,1,2.891813,0,11,81),(362,16,1,0.569614,0,15,81),(363,16,1,14.924305,0,5,81),(364,16,1,12.009613,0,17,81),(365,16,1,1.336304,0,20,81),(366,16,1,211.451068,0,12,81),(367,16,1,22.649281,0,33,81),(368,18,6,2009.70462,0,5,70),(369,18,6,0,0,17,70),(370,18,6,0.024726,0,35,63),(371,18,6,1.132733,0,36,63),(372,16,1,82.741735,0,16,81),(373,16,1,26.066984,0,34,81),(374,16,1,0.002661,0,1,98),(375,16,1,0.032742,0,2,98),(376,16,1,0.643554,0,3,98),(377,18,6,255.386952,0,37,63),(378,16,1,146.744237,0,4,98),(379,16,1,13.661704,0,5,98),(380,16,1,3.311127,0,6,98),(381,17,5,6257.037842,0,16,101),(382,17,5,0.000248,0,13,104),(383,17,5,0.005948,0,14,104),(384,17,5,0.022245,0,13,104),(385,17,5,16.105228,0,5,104),(386,17,5,5.128248,0,15,104),(387,17,5,4.271874,0,17,104),(388,17,5,350.414084,0,20,104),(389,16,1,329.93059,0,7,98),(390,16,1,0.499989,0,21,98),(391,16,1,0.374884,0,22,98),(392,16,1,0.501904,0,23,98),(393,16,1,1.56733,0,24,98),(394,16,1,0.003042,0,25,98),(395,16,1,0.010047,0,13,53),(396,16,1,0.000166,0,1,53),(397,16,1,1456.286242,0,20,47),(398,16,1,0.025846,0,38,49),(399,16,1,0.007413,0,14,52),(400,16,1,32.607215,0,17,46),(401,16,1,0.084075,0,13,46),(402,16,1,119.598477,0,12,51),(403,16,1,3.596698,0,15,51),(404,16,1,4.00513,0,5,48),(405,16,1,0.044632,0,40,50),(406,16,1,0,0,1,24),(407,16,1,0,0,2,24),(408,16,1,0,0,3,24),(409,16,1,0,0,4,24),(410,16,1,0,0,5,24),(411,16,1,0,0,6,24),(412,16,1,0,0,7,24),(413,16,1,0,0,21,24),(414,16,1,0,0,22,24),(415,16,1,0,0,23,24),(416,16,1,0,0,24,24),(417,16,1,0,0,25,24),(418,16,1,0.025251,0,1,82),(419,16,1,0.020722,0,2,82),(420,16,1,0.570572,0,3,82),(421,18,6,0,0,29,63),(422,16,1,7.447891,0,4,82),(423,16,1,10.945213,0,5,82),(424,16,1,0.222435,0,6,82),(425,16,1,2.531961,0,7,82),(426,16,1,0.042148,0,21,82),(427,16,1,0.178072,0,22,82),(428,16,1,0.141984,0,23,82),(429,16,1,0.651166,0,24,82),(430,16,1,0.003372,0,25,82),(431,16,1,0.012965,0,1,23),(432,16,1,0,0,2,23),(433,16,1,0.149272,0,3,23),(434,18,6,275.147227,0,38,63),(435,16,1,0,0,4,23),(436,16,1,2.058711,0,5,23),(437,16,1,0.002675,0,6,23),(438,15,3,4998.580252,0,20,102),(439,16,1,0,0,7,23),(440,16,1,0.049041,0,21,23),(441,16,1,0,0,22,23),(442,16,1,0.010785,0,23,23),(443,16,1,0.014287,0,24,23),(444,16,1,0.00108,0,25,23),(445,16,1,0.133299,0,35,74),(446,16,1,3.386765,0,36,74),(447,16,1,269.632623,0,37,74),(448,17,5,4354.799262,0,12,104),(449,15,3,1636.924333,0,12,102),(450,17,5,903.211274,0,33,104),(451,18,6,0,0,19,63),(452,18,6,5.204623,0,10,63),(453,18,6,22.794543,0,11,63),(454,18,6,15.279955,0,39,63),(455,16,1,1965.141636,0,29,74),(456,16,1,452.172424,0,38,74),(457,16,1,0,0,19,74),(458,16,1,0.211649,0,10,74),(459,16,1,35.231729,0,11,74),(460,16,1,0.511554,0,39,74),(461,15,3,3002.519694,0,33,102),(462,18,6,2376.968069,0,5,63),(463,18,6,0,0,17,63),(464,18,6,0.018268,0,35,68),(465,18,6,3.567375,0,36,68),(466,18,6,207.874974,0,37,68),(467,16,1,1759.956693,0,5,74),(468,16,1,0,0,17,74),(469,16,1,0.031305,0,35,63),(470,16,1,2.822645,0,36,63),(471,15,3,512.282915,0,16,102),(472,16,1,263.47006,0,37,63),(473,16,1,1965.520351,0,29,63),(474,16,1,453.060064,0,38,63),(475,16,1,0,0,19,63),(476,16,1,0.227427,0,10,63),(477,16,1,31.502959,0,11,63),(478,16,1,0.512104,0,39,63),(479,18,6,0,0,29,68),(480,17,5,6223.22637,0,16,104),(481,17,5,0.000224,0,13,34),(482,17,5,0.006341,0,14,34),(483,17,5,0.02441,0,13,34),(484,18,6,402.941704,0,38,68),(485,17,5,18.332969,0,5,34),(486,17,5,7.137737,0,15,34),(487,17,5,4.671862,0,17,34),(488,19,2,0,0,28,20),(489,19,2,0.463412,0,41,20),(490,19,2,2.897436,0,42,20),(491,19,2,0,0,38,20),(492,17,5,532.820127,0,20,34),(493,19,2,717.15048,0,19,20),(494,19,2,5.312635,0,39,20),(495,19,2,0,0,5,20),(496,16,1,1760.35158,0,5,63),(497,16,1,0,0,17,63),(498,16,1,0.022908,0,35,68),(499,16,1,3.894616,0,36,68),(500,16,1,265.756618,0,37,68),(501,19,2,1240.717247,0,12,20),(502,18,6,0,0,19,68),(503,18,6,4.777447,0,10,68),(504,18,6,28.003629,0,11,68),(505,18,6,14.10019,0,39,68),(506,16,1,1970.151679,0,29,68),(507,16,1,517.831337,0,38,68),(508,16,1,0,0,19,68),(509,16,1,0.234239,0,10,68),(510,19,2,1679.583901,0,16,20),(511,16,1,35.667495,0,11,68),(512,16,1,0.521682,0,39,68),(513,19,2,0,0,34,20),(514,19,2,0.00683,0,35,63),(515,19,2,0.417828,0,36,63),(516,19,2,4.552044,0,37,63),(517,19,2,0,0,29,63),(518,19,2,102.06799,0,38,63),(519,19,2,0,0,19,63),(520,19,2,0.101007,0,10,63),(521,19,2,7.475235,0,11,63),(522,19,2,0.289003,0,39,63),(523,18,6,1781.292424,0,5,68),(524,18,6,0,0,17,68),(525,18,6,0.02588,0,35,74),(526,18,6,3.23811,0,36,74),(527,19,2,465.688505,0,5,63),(528,19,2,0,0,17,63),(529,19,2,0.005771,0,35,74),(530,19,2,0.746179,0,36,74),(531,19,2,1.103914,0,37,74),(532,19,2,0,0,29,74),(533,17,5,4390.870628,0,12,34),(534,19,2,100.809827,0,38,74),(535,19,2,0,0,19,74),(536,19,2,0.111933,0,10,74),(537,19,2,12.805334,0,11,74),(538,19,2,0.267548,0,39,74),(539,18,6,274.315411,0,37,74),(540,19,2,462.816288,0,5,74),(541,19,2,0,0,17,74),(542,19,2,0.005964,0,35,70),(543,19,2,0.748498,0,36,70),(544,19,2,1.1437,0,37,70),(545,19,2,0,0,29,70),(546,19,2,100.868643,0,38,70),(547,19,2,0,0,19,70),(548,19,2,0.114642,0,10,70),(549,19,2,12.80519,0,11,70),(550,19,2,0.279859,0,39,70),(551,16,1,1973.550508,0,5,68),(552,19,2,462.943657,0,5,70),(553,16,1,0,0,17,68),(554,17,5,1229.445293,0,33,34),(555,19,2,0,0,17,70),(556,19,2,0.089764,0,1,31),(557,19,2,0.155805,0,2,31),(558,19,2,1.267216,0,3,31),(559,19,2,10.071935,0,4,31),(560,19,2,3.620644,0,5,31),(561,19,2,0.480714,0,6,31),(562,19,2,19.410562,0,7,31),(563,19,2,0.190419,0,21,31),(564,19,2,0.176729,0,22,31),(565,19,2,0.278117,0,23,31),(566,19,2,0.503692,0,24,31),(567,19,2,0.081484,0,25,31),(568,19,2,0.03305,0,8,27),(569,19,2,0.531247,0,9,27),(570,19,2,0.752494,0,10,27),(571,19,2,0.916376,0,11,27),(572,19,2,0.002084,0,1,95),(573,19,2,0.002201,0,43,95),(574,19,2,0.015498,0,11,95),(575,19,2,0.041664,0,1,82),(576,19,2,0.118484,0,2,82),(577,19,2,0.463889,0,3,82),(578,19,2,24.664485,0,4,82),(579,19,2,5.321665,0,5,82),(580,19,2,0.329178,0,6,82),(581,19,2,61.495514,0,7,82),(582,19,2,0.038857,0,21,82),(583,19,2,0.977518,0,22,82),(584,19,2,0.16206,0,23,82),(585,19,2,5.136879,0,24,82),(586,19,2,0.002474,0,25,82),(587,19,2,0.002634,0,1,98),(588,19,2,0.007833,0,2,98),(589,19,2,0.865394,0,3,98),(590,19,2,180.29923,0,4,98),(591,19,2,21.466552,0,5,98),(592,19,2,0.122438,0,6,98),(593,18,6,0,0,29,74),(594,19,2,456.814103,0,7,98),(595,19,2,0.030643,0,21,98),(596,19,2,0.056427,0,22,98),(597,19,2,0.029611,0,23,98),(598,19,2,0.3532,0,24,98),(599,19,2,0.002603,0,25,98),(600,19,2,0,0,39,44),(601,19,2,0,0,39,43),(602,20,7,0.036323,0,13,89),(603,19,2,0,0,39,42),(604,20,7,0.110974,0,14,89),(605,19,2,0.013141,0,1,79),(606,19,2,0.001856,0,13,79),(607,19,2,0.00178,0,26,79),(608,19,2,0.001978,0,8,79),(609,19,2,0.002564,0,27,79),(610,20,7,0.906094,0,13,89),(611,19,2,0.005086,0,28,79),(612,19,2,0,0,29,79),(613,19,2,0.03213,0,30,79),(614,19,2,0.044743,0,31,79),(615,19,2,1.16697,0,32,79),(616,19,2,0.66594,0,10,79),(617,19,2,3.444023,0,11,79),(618,19,2,0.516836,0,15,79),(619,19,2,17.902846,0,5,79),(620,18,6,467.519576,0,38,74),(621,19,2,13.236227,0,17,79),(622,19,2,1.185328,0,20,79),(623,20,7,257.793799,0,5,89),(624,20,7,29.296742,0,15,89),(625,20,7,42.364069,0,17,89),(626,19,2,261.312242,0,12,79),(627,19,2,26.246359,0,33,79),(628,19,2,90.357447,0,16,79),(629,19,2,28.828118,0,34,79),(630,19,2,0.00158,0,1,80),(631,19,2,0.001866,0,13,80),(632,19,2,0.001798,0,26,80),(633,19,2,0.002031,0,8,80),(634,19,2,0.002471,0,27,80),(635,19,2,0.004612,0,28,80),(636,19,2,0,0,29,80),(637,19,2,0.027351,0,30,80),(638,19,2,0.040335,0,31,80),(639,19,2,0.92436,0,32,80),(640,19,2,0.527294,0,10,80),(641,19,2,2.782836,0,11,80),(642,19,2,0.43256,0,15,80),(643,19,2,13.986329,0,5,80),(644,19,2,11.085171,0,17,80),(645,19,2,1.085732,0,20,80),(646,19,2,203.518317,0,12,80),(647,19,2,21.415736,0,33,80),(648,19,2,71.21748,0,16,80),(649,19,2,23.230799,0,34,80),(650,19,2,0.00155,0,1,81),(651,19,2,0.001833,0,13,81),(652,19,2,0.001774,0,26,81),(653,19,2,0.001983,0,8,81),(654,19,2,0.002435,0,27,81),(655,19,2,0.004582,0,28,81),(656,19,2,0,0,29,81),(657,19,2,0.027263,0,30,81),(658,19,2,0.039609,0,31,81),(659,19,2,0.924273,0,32,81),(660,19,2,0.516215,0,10,81),(661,19,2,2.783873,0,11,81),(662,19,2,0.431418,0,15,81),(663,19,2,13.98166,0,5,81),(664,19,2,11.083957,0,17,81),(665,19,2,1.070099,0,20,81),(666,19,2,203.475932,0,12,81),(667,19,2,21.349684,0,33,81),(668,19,2,71.237307,0,16,81),(669,20,7,1663.126481,0,20,89),(670,19,2,23.176813,0,34,81),(671,19,2,0.021259,0,40,50),(672,19,2,0.001523,0,13,53),(673,19,2,0.001466,0,1,53),(674,19,2,0,0,20,47),(675,20,7,0,0,12,89),(676,19,2,46.064763,0,12,51),(677,19,2,0.744295,0,15,51),(678,19,2,6.61337,0,5,48),(679,19,2,0.01019,0,38,49),(680,19,2,23.862895,0,17,46),(681,19,2,0.053134,0,13,46),(682,19,2,0.010086,0,14,52),(683,19,2,0.020574,0,8,94),(684,19,2,0.003865,0,9,94),(685,19,2,1.531663,0,10,94),(686,19,2,0.113124,0,11,94),(687,19,2,0,0,27,92),(688,19,2,0,0,27,92),(689,19,2,0,0,1,92),(690,19,2,0,0,13,92),(691,19,2,0,0,44,92),(692,19,2,0,0,40,92),(693,19,2,0,0,42,92),(694,19,2,0,0,5,92),(695,19,2,0,0,19,92),(696,19,2,0,0,17,92),(697,19,2,0.002333,0,1,23),(698,19,2,0.014698,0,2,23),(699,19,2,0.741476,0,3,23),(700,19,2,9.959774,0,4,23),(701,19,2,9.744212,0,5,23),(702,19,2,0.00801,0,6,23),(703,18,6,0,0,19,74),(704,18,6,3.602398,0,10,74),(705,18,6,37.106617,0,11,74),(706,18,6,12.19731,0,39,74),(707,17,5,6272.816192,0,16,34),(708,17,5,0.000223,0,13,85),(709,17,5,0.006501,0,14,85),(710,17,5,0.025191,0,13,85),(711,17,5,19.217119,0,5,85),(712,17,5,8.080425,0,15,85),(713,17,5,4.849812,0,17,85),(714,17,5,623.725455,0,20,85),(715,20,7,0,0,33,89),(716,20,7,0,0,16,89),(717,18,6,2000.765828,0,5,74),(718,20,7,32.913884,0,17,46),(719,20,7,0.855643,0,13,46),(720,18,6,0,0,17,74),(721,18,6,0,0,1,98),(722,18,6,0,0,2,98),(723,18,6,0,0,3,98),(724,18,6,0,0,4,98),(725,18,6,0,0,5,98),(726,18,6,0,0,6,98),(727,20,7,37.399956,0,5,48),(728,20,7,0.114855,0,13,53),(729,20,7,0.105061,0,1,53),(730,20,7,1.001449,0,40,50),(731,20,7,0.226202,0,14,52),(732,18,6,0,0,7,98),(733,18,6,0,0,21,98),(734,18,6,0,0,22,98),(735,18,6,0,0,23,98),(736,18,6,0,0,24,98),(737,18,6,0,0,25,98),(738,18,6,0,0,8,29),(739,18,6,0,0,9,29),(740,18,6,0,0,12,29),(741,18,6,0,0,16,29),(742,18,6,0,0,18,29),(743,18,6,0,0,19,29),(744,18,6,0,0,11,29),(745,18,6,0,0,10,29),(746,18,6,0.022513,0,2,62),(747,18,6,1.004236,0,3,62),(748,18,6,3.71529,0,4,62),(749,18,6,18.899455,0,5,62),(750,18,6,0.003774,0,6,62),(751,19,2,2603.408919,0,7,23),(752,19,2,0.005685,0,21,23),(753,19,2,0.022592,0,22,23),(754,19,2,0.005964,0,23,23),(755,19,2,0.034553,0,24,23),(756,19,2,0.002433,0,25,23),(757,19,2,0.020486,0,22,58),(758,19,2,1.988109,0,4,58),(759,19,2,0.002237,0,23,60),(760,19,2,0.002226,0,21,60),(761,19,2,0.00148,0,25,59),(762,19,2,0.002723,0,6,59),(763,19,2,0,0,1,97),(764,19,2,0,0,2,97),(765,19,2,0,0,3,97),(766,19,2,0,0,4,97),(767,19,2,0,0,5,97),(768,19,2,0,0,6,97),(769,19,2,0,0,7,97),(770,19,2,0,0,21,97),(771,19,2,0,0,22,97),(772,19,2,0,0,23,97),(773,19,2,0,0,24,97),(774,19,2,0,0,25,97),(775,19,2,0.013897,0,13,89),(776,19,2,0.017869,0,14,89),(777,19,2,0.07929,0,13,89),(778,19,2,49.57805,0,5,89),(779,19,2,57.262412,0,15,89),(780,19,2,50.910692,0,17,89),(781,20,7,1557.539631,0,12,51),(782,20,7,18.871623,0,15,51),(783,19,2,1080.442079,0,20,89),(784,18,6,0,0,7,62),(785,18,6,0.001953,0,21,62),(786,18,6,0.007774,0,22,62),(787,18,6,0.001923,0,23,62),(788,18,6,0.012581,0,24,62),(789,18,6,0.000369,0,25,62),(790,18,6,0.024557,0,1,79),(791,18,6,0.000956,0,13,79),(792,18,6,0.000845,0,26,79),(793,18,6,0.000894,0,8,79),(794,18,6,0,0,27,79),(795,18,6,0.001615,0,28,79),(796,18,6,0.003903,0,29,79),(797,18,6,0.009057,0,30,79),(798,18,6,0.016699,0,31,79),(799,17,5,4393.946655,0,12,85),(800,20,7,0,0,20,47),(801,20,7,0.474061,0,38,49),(802,20,7,0.078747,0,1,95),(803,20,7,0.05891,0,43,95),(804,20,7,1.374909,0,11,95),(805,20,7,1.354981,0,8,29),(806,20,7,17.423621,0,9,29),(807,20,7,0,0,12,29),(808,20,7,0,0,16,29),(809,20,7,6.705738,0,18,29),(810,17,5,1375.97263,0,33,85),(811,19,2,0,0,12,89),(812,18,6,0,0,32,79),(813,18,6,0,0,10,79),(814,20,7,0,0,19,29),(815,20,7,10.358494,0,11,29),(816,20,7,3.180527,0,10,29),(817,20,7,0.281371,0,1,79),(818,20,7,0.327892,0,13,79),(819,20,7,0.307987,0,26,79),(820,20,7,0.320106,0,8,79),(821,20,7,10.243632,0,27,79),(822,20,7,0.424445,0,28,79),(823,20,7,0,0,29,79),(824,20,7,0.73659,0,30,79),(825,20,7,0.888615,0,31,79),(826,20,7,4.713231,0,32,79),(827,20,7,0,0,10,79),(828,20,7,11.186644,0,11,79),(829,20,7,2.59705,0,15,79),(830,20,7,76.262121,0,5,79),(831,20,7,45.234017,0,17,79),(832,20,7,8.536932,0,20,79),(833,20,7,0,0,12,79),(834,20,7,87.8241,0,33,79),(835,20,7,413.939859,0,16,79),(836,20,7,114.726093,0,34,79),(837,20,7,0.277092,0,1,81),(838,20,7,0.328408,0,13,81),(839,20,7,0.308978,0,26,81),(840,20,7,0.324626,0,8,81),(841,20,7,10.079823,0,27,81),(842,20,7,0.426466,0,28,81),(843,20,7,0,0,29,81),(844,20,7,0.736708,0,30,81),(845,20,7,0.885216,0,31,81),(846,20,7,4.693515,0,32,81),(847,20,7,0,0,10,81),(848,20,7,11.253553,0,11,81),(849,20,7,2.583657,0,15,81),(850,20,7,78.147922,0,5,81),(851,18,6,0,0,11,79),(852,18,6,0.133996,0,15,79),(853,20,7,43.531126,0,17,81),(854,20,7,8.931749,0,20,81),(855,19,2,4278.439659,0,33,89),(856,20,7,1331.641755,0,12,81),(857,20,7,87.920622,0,33,81),(858,20,7,414.45069,0,16,81),(859,20,7,110.793221,0,34,81),(860,20,7,0.274793,0,1,80),(861,20,7,0.323794,0,13,80),(862,20,7,0.308371,0,26,80),(863,20,7,0.322276,0,8,80),(864,20,7,10.12487,0,27,80),(865,20,7,0.420573,0,28,80),(866,20,7,0,0,29,80),(867,20,7,0.690614,0,30,80),(868,20,7,0.826213,0,31,80),(869,20,7,4.701927,0,32,80),(870,20,7,0,0,10,80),(871,20,7,11.07566,0,11,80),(872,20,7,2.439744,0,15,80),(873,20,7,74.958672,0,5,80),(874,20,7,43.720488,0,17,80),(875,20,7,8.32089,0,20,80),(876,17,5,6287.209281,0,16,85),(877,17,5,0.000219,0,13,90),(878,17,5,0.005965,0,14,90),(879,17,5,0.02298,0,13,90),(880,17,5,16.786744,0,5,90),(881,17,5,5.682272,0,15,90),(882,17,5,4.39393,0,17,90),(883,17,5,400.229824,0,20,90),(884,18,6,0,0,5,79),(885,18,6,2.357704,0,17,79),(886,18,6,0.427311,0,20,79),(887,19,2,0,0,16,89),(888,19,2,0.011295,0,8,29),(889,19,2,0.080932,0,9,29),(890,20,7,1361.855634,0,12,80),(891,19,2,69.265659,0,12,29),(892,20,7,85.623173,0,33,80),(893,19,2,25.415216,0,16,29),(894,19,2,0.085386,0,18,29),(895,19,2,0.544181,0,19,29),(896,19,2,1.000172,0,11,29),(897,19,2,0.245597,0,10,29),(898,19,2,0.009834,0,1,45),(899,19,2,0.016393,0,2,45),(900,19,2,0.743453,0,3,45),(901,19,2,5.463202,0,4,45),(902,19,2,3.413055,0,5,45),(903,19,2,0.040975,0,6,45),(904,19,2,35.883106,0,7,45),(905,19,2,0.009733,0,21,45),(906,19,2,0.010816,0,22,45),(907,19,2,0.018159,0,23,45),(908,19,2,0.063677,0,24,45),(909,19,2,0.001508,0,25,45),(910,19,2,0.246485,0,1,24),(911,19,2,0.814911,0,2,24),(912,19,2,8.188101,0,3,24),(913,20,7,414.918042,0,16,80),(914,20,7,106.183617,0,34,80),(915,19,2,177.240035,0,4,24),(916,19,2,54.275555,0,5,24),(917,19,2,4.049712,0,6,24),(918,18,6,0,0,12,79),(919,19,2,1459.216745,0,7,24),(920,19,2,1.573701,0,21,24),(921,19,2,2.531748,0,22,24),(922,19,2,1.820269,0,23,24),(923,19,2,5.27208,0,24,24),(924,19,2,0.112481,0,25,24),(925,19,2,0.088917,0,1,1),(926,19,2,0.219551,0,2,1),(927,19,2,3.713917,0,3,1),(928,19,2,7.634324,0,4,1),(929,19,2,21.557691,0,5,1),(930,19,2,0.406474,0,6,1),(931,19,2,139.575517,0,7,1),(932,19,2,0.236967,0,21,1),(933,19,2,0.213401,0,22,1),(934,19,2,0.237082,0,23,1),(935,19,2,0.617126,0,24,1),(936,19,2,0.087123,0,25,1),(937,19,2,0.037589,0,8,26),(938,19,2,0.014105,0,9,26),(939,19,2,216.132579,0,19,26),(940,17,5,4360.44003,0,12,90),(941,17,5,997.124686,0,33,90),(942,18,6,0,0,33,79),(943,21,2,0.001331,0,25,59),(944,21,2,0.00239,0,6,59),(945,21,2,0.002111,0,23,60),(946,21,2,0.002122,0,21,60),(947,21,2,0.005003,0,22,58),(948,21,2,2.007061,0,4,58),(949,21,2,0.001232,0,1,45),(950,21,2,0.016353,0,2,45),(951,21,2,0.741642,0,3,45),(952,21,2,5.470027,0,4,45),(953,21,2,3.41562,0,5,45),(954,21,2,0.041042,0,6,45),(955,21,2,35.864515,0,7,45),(956,21,2,0.009787,0,21,45),(957,21,2,0,0,22,45),(958,21,2,0,0,23,45),(959,21,2,0,0,24,45),(960,21,2,0,0,25,45),(961,21,2,0,0,39,42),(962,21,2,0,0,39,44),(963,21,2,0,0,39,43),(964,21,2,0,0,1,31),(965,21,2,0,0,2,31),(966,21,2,0,0,3,31),(967,21,2,0,0,4,31),(968,21,2,0,0,5,31),(969,21,2,0,0,6,31),(970,21,2,0,0,7,31),(971,21,2,0,0,21,31),(972,21,2,0,0,22,31),(973,21,2,0,0,23,31),(974,21,2,0,0,24,31),(975,21,2,0,0,25,31),(976,21,2,0,0,1,79),(977,21,2,0,0,13,79),(978,21,2,0,0,26,79),(979,21,2,0,0,8,79),(980,21,2,0,0,27,79),(981,21,2,0,0,28,79),(982,21,2,0,0,29,79),(983,21,2,0,0,30,79),(984,21,2,0,0,31,79),(985,21,2,0,0,32,79),(986,21,2,0,0,10,79),(987,21,2,0,0,11,79),(988,21,2,0,0,15,79),(989,21,2,0,0,5,79),(990,21,2,0,0,17,79),(991,21,2,0,0,20,79),(992,21,2,0,0,12,79),(993,21,2,0,0,33,79),(994,21,2,0,0,16,79),(995,21,2,0,0,34,79),(996,21,2,0,0,1,80),(997,21,2,0,0,13,80),(998,21,2,0,0,26,80),(999,21,2,0,0,8,80),(1000,21,2,0,0,27,80),(1001,21,2,0,0,28,80),(1002,21,2,0,0,29,80),(1003,21,2,0,0,30,80),(1004,21,2,0,0,31,80),(1005,21,2,0,0,32,80),(1006,21,2,0,0,10,80),(1007,21,2,0,0,11,80),(1008,21,2,0,0,15,80),(1009,21,2,0,0,5,80),(1010,21,2,0,0,17,80),(1011,21,2,0,0,20,80),(1012,21,2,0,0,12,80),(1013,21,2,0,0,33,80),(1014,21,2,0,0,16,80),(1015,21,2,0,0,34,80),(1016,21,2,0,0,1,81),(1017,21,2,0,0,13,81),(1018,21,2,0,0,26,81),(1019,21,2,0,0,8,81),(1020,21,2,0,0,27,81),(1021,21,2,0,0,28,81),(1022,21,2,0,0,29,81),(1023,21,2,0,0,30,81),(1024,21,2,0,0,31,81),(1025,21,2,0,0,32,81),(1026,21,2,0,0,10,81),(1027,21,2,0,0,11,81),(1028,21,2,0,0,15,81),(1029,21,2,0,0,5,81),(1030,21,2,0,0,17,81),(1031,21,2,0,0,20,81),(1032,21,2,0,0,12,81),(1033,21,2,0,0,33,81),(1034,21,2,0,0,16,81),(1035,21,2,0,0,34,81),(1036,21,2,0,0,8,94),(1037,21,2,0,0,9,94),(1038,21,2,0,0,10,94),(1039,21,2,0,0,11,94),(1040,21,2,0,0,1,24),(1041,21,2,0,0,2,24),(1042,21,2,0,0,3,24),(1043,21,2,0,0,4,24),(1044,21,2,0,0,5,24),(1045,21,2,0,0,6,24),(1046,21,2,0,0,7,24),(1047,21,2,0,0,21,24),(1048,21,2,0,0,22,24),(1049,21,2,0,0,23,24),(1050,21,2,0,0,24,24),(1051,21,2,0,0,25,24),(1052,21,2,0,0,8,29),(1053,21,2,0,0,9,29),(1054,21,2,0,0,12,29),(1055,21,2,0,0,16,29),(1056,21,2,0,0,18,29),(1057,21,2,0,0,19,29),(1058,21,2,0,0,11,29),(1059,21,2,0,0,10,29),(1060,21,2,0,0,27,92),(1061,21,2,0,0,27,92),(1062,21,2,0,0,1,92),(1063,21,2,0,0,13,92),(1064,21,2,0,0,44,92),(1065,21,2,0,0,40,92),(1066,21,2,0,0,42,92),(1067,21,2,0,0,5,92),(1068,21,2,0,0,19,92),(1069,21,2,0,0,17,92),(1070,21,2,0,0,8,26),(1071,21,2,0,0,9,26),(1072,21,2,0,0,19,26),(1073,21,2,0,0,1,98),(1074,21,2,0,0,2,98),(1075,21,2,0,0,3,98),(1076,21,2,0,0,4,98),(1077,21,2,0,0,5,98),(1078,21,2,0,0,6,98),(1079,21,2,0,0,7,98),(1080,21,2,0,0,21,98),(1081,21,2,0,0,22,98),(1082,21,2,0,0,23,98),(1083,21,2,0,0,24,98),(1084,21,2,0,0,25,98),(1085,21,2,0,0,1,1),(1086,21,2,0,0,2,1),(1087,21,2,0,0,3,1),(1088,21,2,0,0,4,1),(1089,21,2,0,0,5,1),(1090,21,2,0,0,6,1),(1091,21,2,0,0,7,1),(1092,21,2,0,0,21,1),(1093,21,2,0,0,22,1),(1094,21,2,0,0,23,1),(1095,21,2,0,0,24,1),(1096,21,2,0,0,25,1),(1097,21,2,0,0,13,89),(1098,21,2,0,0,14,89),(1099,21,2,0,0,13,89),(1100,21,2,0,0,5,89),(1101,21,2,0,0,15,89),(1102,21,2,0,0,17,89),(1103,21,2,0,0,20,89),(1104,21,2,0,0,12,89),(1105,21,2,0,0,33,89),(1106,21,2,0,0,16,89),(1107,21,2,0,0,14,52),(1108,21,2,0,0,17,46),(1109,21,2,0,0,13,46),(1110,21,2,0,0,12,51),(1111,21,2,0,0,15,51),(1112,21,2,0,0,40,50),(1113,21,2,0,0,20,47),(1114,21,2,0,0,5,48),(1115,21,2,0,0,13,53),(1116,21,2,0,0,1,53),(1117,21,2,0,0,38,49),(1118,21,2,0,0,35,70),(1119,21,2,0,0,36,70),(1120,21,2,0,0,37,70),(1121,21,2,0,0,29,70),(1122,21,2,0,0,38,70),(1123,21,2,0,0,19,70),(1124,21,2,0,0,10,70),(1125,21,2,0,0,11,70),(1126,21,2,0,0,39,70),(1127,21,2,0,0,5,70),(1128,21,2,0,0,17,70),(1129,21,2,0,0,35,63),(1130,21,2,0,0,36,63),(1131,21,2,0,0,37,63),(1132,21,2,0,0,29,63),(1133,21,2,0,0,38,63),(1134,21,2,0,0,19,63),(1135,21,2,0,0,10,63),(1136,21,2,0,0,11,63),(1137,21,2,0,0,39,63),(1138,21,2,0,0,5,63),(1139,21,2,0,0,17,63),(1140,21,2,0,0,35,74),(1141,21,2,0,0,36,74),(1142,21,2,0,0,37,74),(1143,21,2,0,0,29,74),(1144,21,2,0,0,38,74),(1145,21,2,0,0,19,74),(1146,21,2,0,0,10,74),(1147,21,2,0,0,11,74),(1148,21,2,0,0,39,74),(1149,21,2,0,0,5,74),(1150,21,2,0,0,17,74),(1151,21,2,0,0,1,97),(1152,21,2,0,0,2,97),(1153,21,2,0,0,3,97),(1154,21,2,0,0,4,97),(1155,21,2,0,0,5,97),(1156,21,2,0,0,6,97),(1157,21,2,0,0,7,97),(1158,21,2,0,0,21,97),(1159,21,2,0,0,22,97),(1160,21,2,0,0,23,97),(1161,21,2,0,0,24,97),(1162,21,2,0,0,25,97),(1163,21,2,0,0,1,82),(1164,21,2,0,0,2,82),(1165,21,2,0,0,3,82),(1166,21,2,0,0,4,82),(1167,21,2,0,0,5,82),(1168,21,2,0,0,6,82),(1169,21,2,0,0,7,82),(1170,21,2,0,0,21,82),(1171,21,2,0,0,22,82),(1172,21,2,0,0,23,82),(1173,21,2,0,0,24,82),(1174,21,2,0,0,25,82),(1175,21,2,0,0,1,62),(1176,21,2,0,0,2,62),(1177,21,2,0,0,3,62),(1178,21,2,0,0,4,62),(1179,21,2,0,0,5,62),(1180,21,2,0,0,6,62),(1181,21,2,0,0,7,62),(1182,21,2,0,0,21,62),(1183,21,2,0,0,22,62),(1184,21,2,0,0,23,62),(1185,21,2,0,0,24,62),(1186,21,2,0,0,25,62),(1187,21,2,0,0,1,23),(1188,21,2,0,0,2,23),(1189,21,2,0,0,3,23),(1190,21,2,0,0,4,23),(1191,21,2,0,0,5,23),(1192,21,2,0,0,6,23),(1193,21,2,0,0,7,23),(1194,21,2,0,0,21,23),(1195,21,2,0,0,22,23),(1196,21,2,0,0,23,23),(1197,21,2,0,0,24,23),(1198,21,2,0,0,25,23),(1199,21,2,0,0,1,95),(1200,21,2,0,0,43,95),(1201,21,2,0,0,11,95),(1202,21,2,0,0,8,27),(1203,21,2,0,0,9,27),(1204,21,2,0,0,10,27),(1205,21,2,0,0,11,27),(1206,21,2,0,0,28,20),(1207,21,2,0,0,41,20),(1208,21,2,0,0,42,20),(1209,21,2,0,0,38,20),(1210,21,2,0,0,19,20),(1211,21,2,0,0,39,20),(1212,21,2,0,0,5,20),(1213,21,2,0,0,12,20),(1214,21,2,0,0,16,20),(1215,21,2,0,0,34,20),(1216,18,6,0,0,16,79),(1217,18,6,0,0,34,79),(1218,18,6,0,0,1,81),(1219,18,6,0,0,13,81),(1220,18,6,0,0,26,81),(1221,18,6,0,0,8,81),(1222,18,6,0,0,27,81),(1223,18,6,0,0,28,81),(1224,18,6,0,0,29,81),(1225,18,6,0,0,30,81),(1226,18,6,0,0,31,81),(1227,18,6,0,0,32,81),(1228,18,6,0,0,10,81),(1229,18,6,0,0,11,81),(1230,18,6,0,0,15,81),(1231,18,6,0,0,5,81),(1232,18,6,0,0,17,81),(1233,18,6,0,0,20,81),(1234,18,6,0,0,12,81),(1235,18,6,0,0,33,81),(1236,18,6,0,0,16,81),(1237,18,6,0,0,34,81),(1238,18,6,0,0,1,80),(1239,18,6,0,0,13,80),(1240,18,6,0,0,26,80),(1241,18,6,0,0,8,80),(1242,18,6,0,0,27,80),(1243,18,6,0,0,28,80),(1244,18,6,0,0,29,80),(1245,18,6,0,0,30,80),(1246,18,6,0,0,31,80),(1247,18,6,0,0,32,80),(1248,18,6,0,0,10,80),(1249,18,6,0,0,11,80),(1250,18,6,0,0,15,80),(1251,18,6,0,0,5,80),(1252,18,6,0,0,17,80),(1253,18,6,0,0,20,80),(1254,18,6,0,0,12,80),(1255,18,6,0,0,33,80),(1256,18,6,0,0,16,80),(1257,18,6,0,0,34,80),(1258,18,6,0,0,27,92),(1259,18,6,0,0,27,92),(1260,18,6,0,0,1,92),(1261,18,6,0,0,13,92),(1262,18,6,0,0,44,92),(1263,18,6,0,0,40,92),(1264,18,6,0,0,42,92),(1265,18,6,0,0,5,92),(1266,18,6,0,0,19,92),(1267,18,6,0,0,17,92),(1268,18,6,0,0,1,95),(1269,18,6,0,0,43,95),(1270,18,6,0,0,11,95),(1271,18,6,0,0,20,47),(1272,18,6,0,0,13,53),(1273,18,6,0,0,1,53),(1274,18,6,0,0,38,49),(1275,18,6,0,0,14,52),(1276,18,6,0,0,12,51),(1277,18,6,0,0,15,51),(1278,18,6,0,0,5,48),(1279,18,6,0,0,17,46),(1280,18,6,0,0,13,46),(1281,18,6,0,0,40,50),(1282,18,6,0,0,8,94),(1283,18,6,0,0,9,94),(1284,18,6,0,0,10,94),(1285,18,6,0,0,11,94),(1286,18,6,0,0,13,89),(1287,18,6,0,0,14,89),(1288,18,6,0,0,13,89),(1289,18,6,0,0,5,89),(1290,18,6,0,0,15,89),(1291,18,6,0,0,17,89),(1292,18,6,0,0,20,89),(1293,18,6,0,0,12,89),(1294,18,6,0,0,33,89),(1295,18,6,0,0,16,89),(1296,18,6,0,0,1,24),(1297,18,6,0,0,42,24),(1298,18,6,0,0,11,24),(1299,18,6,0,0,10,24),(1300,18,6,0,0,25,59),(1301,18,6,0,0,6,59),(1302,18,6,0,0,23,60),(1303,18,6,0,0,21,60),(1304,18,6,0,0,22,58),(1305,18,6,0,0,4,58),(1306,22,2,0,0,28,20),(1307,22,2,0.455121,0,41,20),(1308,22,2,6.746853,0,42,20),(1309,22,2,0,0,38,20),(1310,23,5,0.000222,0,13,104),(1311,23,5,0.005922,0,14,104),(1312,23,5,0.022834,0,13,104),(1313,23,5,19.350148,0,5,104),(1314,23,5,6.313186,0,15,104),(1315,23,5,4.994854,0,17,104),(1316,24,6,0,0,1,24),(1317,24,6,0,0,42,24),(1318,24,6,0,0,11,24),(1319,24,6,0,0,10,24),(1320,24,6,0.019902,0,35,63),(1321,24,6,1.130508,0,36,63),(1322,23,5,375.589995,0,20,104),(1323,22,2,717.055047,0,19,20),(1324,22,2,8.085204,0,39,20),(1325,22,2,0,0,5,20),(1326,24,6,255.431882,0,37,63),(1327,22,2,930.651344,0,12,20),(1328,17,5,6456.076826,0,16,90),(1329,17,5,0.000224,0,13,100),(1330,17,5,0.005799,0,14,100),(1331,17,5,0.022457,0,13,100),(1332,17,5,19.180256,0,5,100),(1333,17,5,6.032245,0,15,100),(1334,17,5,5.023526,0,17,100),(1335,17,5,336.391322,0,20,100),(1336,22,2,1763.086951,0,16,20),(1337,22,2,0,0,34,20),(1338,22,2,0,0,1,1),(1339,22,2,0,0,2,1),(1340,22,2,0,0,3,1),(1341,22,2,0,0,4,1),(1342,22,2,0,0,5,1),(1343,22,2,0,0,6,1),(1344,22,2,0,0,7,1),(1345,22,2,0,0,21,1),(1346,22,2,0,0,22,1),(1347,22,2,0,0,23,1),(1348,22,2,0,0,24,1),(1349,22,2,0,0,25,1),(1350,22,2,0,0,1,97),(1351,22,2,0,0,2,97),(1352,22,2,0,0,3,97),(1353,22,2,0,0,4,97),(1354,22,2,0,0,5,97),(1355,22,2,0,0,6,97),(1356,22,2,0,0,7,97),(1357,22,2,0,0,21,97),(1358,22,2,0,0,22,97),(1359,22,2,0,0,23,97),(1360,22,2,0,0,24,97),(1361,22,2,0,0,25,97),(1362,22,2,0,0,1,79),(1363,22,2,0,0,13,79),(1364,22,2,0,0,26,79),(1365,22,2,0,0,8,79),(1366,22,2,0,0,27,79),(1367,22,2,0,0,28,79),(1368,22,2,0,0,29,79),(1369,22,2,0,0,30,79),(1370,22,2,0,0,31,79),(1371,22,2,0,0,32,79),(1372,22,2,0,0,10,79),(1373,22,2,0,0,11,79),(1374,22,2,0,0,15,79),(1375,22,2,0,0,5,79),(1376,22,2,0,0,17,79),(1377,22,2,0,0,20,79),(1378,22,2,0,0,12,79),(1379,22,2,0,0,33,79),(1380,22,2,0,0,16,79),(1381,22,2,0,0,34,79),(1382,22,2,0,0,1,81),(1383,22,2,0,0,13,81),(1384,22,2,0,0,26,81),(1385,22,2,0,0,8,81),(1386,22,2,0,0,27,81),(1387,22,2,0,0,28,81),(1388,22,2,0,0,29,81),(1389,22,2,0,0,30,81),(1390,22,2,0,0,31,81),(1391,22,2,0,0,32,81),(1392,22,2,0,0,10,81),(1393,22,2,0,0,11,81),(1394,22,2,0,0,15,81),(1395,22,2,0,0,5,81),(1396,22,2,0,0,17,81),(1397,22,2,0,0,20,81),(1398,22,2,0,0,12,81),(1399,22,2,0,0,33,81),(1400,22,2,0,0,16,81),(1401,22,2,0,0,34,81),(1402,22,2,0,0,1,80),(1403,22,2,0,0,13,80),(1404,22,2,0,0,26,80),(1405,22,2,0,0,8,80),(1406,22,2,0,0,27,80),(1407,22,2,0,0,28,80),(1408,22,2,0,0,29,80),(1409,22,2,0,0,30,80),(1410,22,2,0,0,31,80),(1411,22,2,0,0,32,80),(1412,22,2,0,0,10,80),(1413,22,2,0,0,11,80),(1414,22,2,0,0,15,80),(1415,22,2,0,0,5,80),(1416,22,2,0,0,17,80),(1417,22,2,0,0,20,80),(1418,22,2,0,0,12,80),(1419,22,2,0,0,33,80),(1420,22,2,0,0,16,80),(1421,22,2,0,0,34,80),(1422,22,2,0,0,1,62),(1423,22,2,0,0,2,62),(1424,22,2,0,0,3,62),(1425,22,2,0,0,4,62),(1426,22,2,0,0,5,62),(1427,22,2,0,0,6,62),(1428,22,2,0,0,7,62),(1429,22,2,0,0,21,62),(1430,22,2,0,0,22,62),(1431,22,2,0,0,23,62),(1432,22,2,0,0,24,62),(1433,22,2,0,0,25,62),(1434,22,2,0,0,39,42),(1435,22,2,0,0,39,44),(1436,22,2,0,0,39,43),(1437,22,2,0,0,8,94),(1438,22,2,0,0,9,94),(1439,22,2,0,0,10,94),(1440,22,2,0,0,11,94),(1441,22,2,0,0,8,27),(1442,22,2,0,0,9,27),(1443,22,2,0,0,10,27),(1444,22,2,0,0,11,27),(1445,22,2,0,0,27,92),(1446,22,2,0,0,27,92),(1447,22,2,0,0,1,92),(1448,22,2,0,0,13,92),(1449,22,2,0,0,44,92),(1450,22,2,0,0,40,92),(1451,22,2,0,0,42,92),(1452,22,2,0,0,5,92),(1453,22,2,0,0,19,92),(1454,22,2,0,0,17,92),(1455,22,2,0,0,1,45),(1456,22,2,0,0,2,45),(1457,22,2,0,0,3,45),(1458,22,2,0,0,4,45),(1459,22,2,0,0,5,45),(1460,22,2,0,0,6,45),(1461,22,2,0,0,7,45),(1462,22,2,0,0,21,45),(1463,22,2,0,0,22,45),(1464,22,2,0,0,23,45),(1465,22,2,0,0,24,45),(1466,22,2,0,0,25,45),(1467,22,2,0,0,8,29),(1468,22,2,0,0,9,29),(1469,22,2,0,0,12,29),(1470,22,2,0,0,16,29),(1471,22,2,0,0,18,29),(1472,22,2,0,0,19,29),(1473,22,2,0,0,11,29),(1474,22,2,0,0,10,29),(1475,22,2,0,0,1,24),(1476,22,2,0,0,2,24),(1477,22,2,0,0,3,24),(1478,22,2,0,0,4,24),(1479,22,2,0,0,5,24),(1480,22,2,0,0,6,24),(1481,22,2,0,0,7,24),(1482,22,2,0,0,21,24),(1483,22,2,0,0,22,24),(1484,22,2,0,0,23,24),(1485,22,2,0,0,24,24),(1486,22,2,0,0,25,24),(1487,22,2,0,0,1,95),(1488,22,2,0,0,43,95),(1489,22,2,0,0,11,95),(1490,22,2,0,0,1,98),(1491,22,2,0,0,2,98),(1492,22,2,0,0,3,98),(1493,22,2,0,0,4,98),(1494,22,2,0,0,5,98),(1495,22,2,0,0,6,98),(1496,22,2,0,0,7,98),(1497,22,2,0,0,21,98),(1498,22,2,0,0,22,98),(1499,22,2,0,0,23,98),(1500,22,2,0,0,24,98),(1501,22,2,0,0,25,98),(1502,22,2,0,0,1,23),(1503,22,2,0,0,2,23),(1504,22,2,0,0,3,23),(1505,22,2,0,0,4,23),(1506,22,2,0,0,5,23),(1507,22,2,0,0,6,23),(1508,22,2,0,0,7,23),(1509,22,2,0,0,21,23),(1510,22,2,0,0,22,23),(1511,22,2,0,0,23,23),(1512,22,2,0,0,24,23),(1513,22,2,0,0,25,23),(1514,22,2,0,0,40,50),(1515,22,2,0,0,14,52),(1516,22,2,0,0,5,48),(1517,22,2,0,0,17,46),(1518,22,2,0,0,13,46),(1519,22,2,0,0,38,49),(1520,22,2,0,0,12,51),(1521,22,2,0,0,15,51),(1522,22,2,0,0,20,47),(1523,22,2,0,0,13,53),(1524,22,2,0,0,1,53),(1525,22,2,0,0,8,26),(1526,22,2,0,0,9,26),(1527,22,2,0,0,19,26),(1528,22,2,0,0,22,58),(1529,22,2,0,0,4,58),(1530,22,2,0,0,23,60),(1531,22,2,0,0,21,60),(1532,22,2,0,0,25,59),(1533,22,2,0,0,6,59),(1534,22,2,0,0,35,63),(1535,22,2,0,0,36,63),(1536,22,2,0,0,37,63),(1537,22,2,0,0,29,63),(1538,22,2,0,0,38,63),(1539,22,2,0,0,19,63),(1540,22,2,0,0,10,63),(1541,22,2,0,0,11,63),(1542,22,2,0,0,39,63),(1543,22,2,0,0,5,63),(1544,22,2,0,0,17,63),(1545,22,2,0,0,35,70),(1546,22,2,0,0,36,70),(1547,22,2,0,0,37,70),(1548,22,2,0,0,29,70),(1549,22,2,0,0,38,70),(1550,22,2,0,0,19,70),(1551,22,2,0,0,10,70),(1552,22,2,0,0,11,70),(1553,22,2,0,0,39,70),(1554,22,2,0,0,5,70),(1555,22,2,0,0,17,70),(1556,22,2,0,0,35,74),(1557,22,2,0,0,36,74),(1558,22,2,0,0,37,74),(1559,22,2,0,0,29,74),(1560,22,2,0,0,38,74),(1561,22,2,0,0,19,74),(1562,22,2,0,0,10,74),(1563,22,2,0,0,11,74),(1564,22,2,0,0,39,74),(1565,22,2,0,0,5,74),(1566,22,2,0,0,17,74),(1567,22,2,0,0,1,82),(1568,22,2,0,0,2,82),(1569,22,2,0,0,3,82),(1570,22,2,0,0,4,82),(1571,22,2,0,0,5,82),(1572,22,2,0,0,6,82),(1573,22,2,0,0,7,82),(1574,22,2,0,0,21,82),(1575,22,2,0,0,22,82),(1576,22,2,0,0,23,82),(1577,22,2,0,0,24,82),(1578,22,2,0,0,25,82),(1579,22,2,0,0,1,31),(1580,22,2,0,0,2,31),(1581,22,2,0,0,3,31),(1582,22,2,0,0,4,31),(1583,22,2,0,0,5,31),(1584,22,2,0,0,6,31),(1585,22,2,0,0,7,31),(1586,22,2,0,0,21,31),(1587,22,2,0,0,22,31),(1588,22,2,0,0,23,31),(1589,22,2,0,0,24,31),(1590,22,2,0,0,25,31),(1591,22,2,0,0,13,89),(1592,22,2,0,0,14,89),(1593,22,2,0,0,13,89),(1594,22,2,0,0,5,89),(1595,22,2,0,0,15,89),(1596,22,2,0,0,17,89),(1597,22,2,0,0,20,89),(1598,22,2,0,0,12,89),(1599,22,2,0,0,33,89),(1600,22,2,0,0,16,89),(1601,24,6,0,0,29,63),(1602,24,6,0,0,38,63),(1603,24,6,0,0,19,63),(1604,24,6,0,0,10,63),(1605,24,6,0,0,11,63),(1606,24,6,0,0,39,63),(1607,24,6,0,0,5,63),(1608,24,6,0,0,17,63),(1609,24,6,0,0,35,68),(1610,24,6,0,0,36,68),(1611,24,6,0,0,37,68),(1612,24,6,0,0,29,68),(1613,24,6,0,0,38,68),(1614,24,6,0,0,19,68),(1615,24,6,0,0,10,68),(1616,24,6,0,0,11,68),(1617,24,6,0,0,39,68),(1618,24,6,0,0,5,68),(1619,24,6,0,0,17,68),(1620,24,6,0,0,35,74),(1621,24,6,0,0,36,74),(1622,24,6,0,0,37,74),(1623,24,6,0,0,29,74),(1624,24,6,0,0,38,74),(1625,24,6,0,0,19,74),(1626,24,6,0,0,10,74),(1627,24,6,0,0,11,74),(1628,24,6,0,0,39,74),(1629,24,6,0,0,5,74),(1630,24,6,0,0,17,74),(1631,24,6,0,0,35,70),(1632,24,6,0,0,36,70),(1633,24,6,0,0,37,70),(1634,24,6,0,0,29,70),(1635,24,6,0,0,38,70),(1636,24,6,0,0,19,70),(1637,24,6,0,0,10,70),(1638,24,6,0,0,11,70),(1639,24,6,0,0,39,70),(1640,24,6,0,0,5,70),(1641,24,6,0,0,17,70),(1642,24,6,0,0,27,92),(1643,24,6,0,0,27,92),(1644,24,6,0,0,1,92),(1645,24,6,0,0,13,92),(1646,24,6,0,0,44,92),(1647,24,6,0,0,40,92),(1648,24,6,0,0,42,92),(1649,24,6,0,0,5,92),(1650,24,6,0,0,19,92),(1651,24,6,0,0,17,92),(1652,24,6,0,0,13,89),(1653,24,6,0,0,14,89),(1654,24,6,0,0,13,89),(1655,24,6,0,0,5,89),(1656,24,6,0,0,15,89),(1657,24,6,0,0,17,89),(1658,24,6,0,0,20,89),(1659,24,6,0,0,12,89),(1660,24,6,0,0,33,89),(1661,24,6,0,0,16,89),(1662,24,6,0,0,1,98),(1663,24,6,0,0,2,98),(1664,24,6,0,0,3,98),(1665,24,6,0,0,4,98),(1666,24,6,0,0,5,98),(1667,24,6,0,0,6,98),(1668,24,6,0,0,7,98),(1669,24,6,0,0,21,98),(1670,24,6,0,0,22,98),(1671,24,6,0,0,23,98),(1672,24,6,0,0,24,98),(1673,24,6,0,0,25,98),(1674,24,6,0,0,8,94),(1675,24,6,0,0,9,94),(1676,24,6,0,0,10,94),(1677,24,6,0,0,11,94),(1678,24,6,0,0,8,26),(1679,24,6,0,0,9,26),(1680,24,6,0,0,19,26),(1681,24,6,0,0,1,79),(1682,24,6,0,0,13,79),(1683,24,6,0,0,26,79),(1684,24,6,0,0,8,79),(1685,24,6,0,0,27,79),(1686,24,6,0,0,28,79),(1687,24,6,0,0,29,79),(1688,24,6,0,0,30,79),(1689,24,6,0,0,31,79),(1690,24,6,0,0,32,79),(1691,24,6,0,0,10,79),(1692,24,6,0,0,11,79),(1693,24,6,0,0,15,79),(1694,24,6,0,0,5,79),(1695,24,6,0,0,17,79),(1696,24,6,0,0,20,79),(1697,24,6,0,0,12,79),(1698,24,6,0,0,33,79),(1699,24,6,0,0,16,79),(1700,24,6,0,0,34,79),(1701,24,6,0,0,1,81),(1702,24,6,0,0,13,81),(1703,24,6,0,0,26,81),(1704,24,6,0,0,8,81),(1705,24,6,0,0,27,81),(1706,24,6,0,0,28,81),(1707,24,6,0,0,29,81),(1708,24,6,0,0,30,81),(1709,24,6,0,0,31,81),(1710,24,6,0,0,32,81),(1711,24,6,0,0,10,81),(1712,24,6,0,0,11,81),(1713,24,6,0,0,15,81),(1714,24,6,0,0,5,81),(1715,24,6,0,0,17,81),(1716,24,6,0,0,20,81),(1717,24,6,0,0,12,81),(1718,24,6,0,0,33,81),(1719,24,6,0,0,16,81),(1720,24,6,0,0,34,81),(1721,24,6,0,0,1,80),(1722,24,6,0,0,13,80),(1723,24,6,0,0,26,80),(1724,24,6,0,0,8,80),(1725,24,6,0,0,27,80),(1726,24,6,0,0,28,80),(1727,24,6,0,0,29,80),(1728,24,6,0,0,30,80),(1729,24,6,0,0,31,80),(1730,24,6,0,0,32,80),(1731,24,6,0,0,10,80),(1732,24,6,0,0,11,80),(1733,24,6,0,0,15,80),(1734,24,6,0,0,5,80),(1735,24,6,0,0,17,80),(1736,24,6,0,0,20,80),(1737,24,6,0,0,12,80),(1738,24,6,0,0,33,80),(1739,24,6,0,0,16,80),(1740,24,6,0,0,34,80),(1741,24,6,0,0,1,95),(1742,24,6,0,0,43,95),(1743,24,6,0,0,11,95),(1744,24,6,0,0,13,53),(1745,24,6,0,0,1,53),(1746,24,6,0,0,14,52),(1747,24,6,0,0,5,48),(1748,24,6,0,0,38,49),(1749,24,6,0,0,12,51),(1750,24,6,0,0,15,51),(1751,24,6,0,0,40,50),(1752,24,6,0,0,17,46),(1753,24,6,0,0,13,46),(1754,24,6,0,0,20,47),(1755,24,6,0,0,2,62),(1756,24,6,0,0,3,62),(1757,24,6,0,0,4,62),(1758,24,6,0,0,5,62),(1759,24,6,0,0,6,62),(1760,24,6,0,0,7,62),(1761,24,6,0,0,21,62),(1762,24,6,0,0,22,62),(1763,24,6,0,0,23,62),(1764,24,6,0,0,24,62),(1765,24,6,0,0,25,62),(1766,24,6,0,0,23,60),(1767,24,6,0,0,21,60),(1768,24,6,0,0,22,58),(1769,24,6,0,0,4,58),(1770,24,6,0,0,25,59),(1771,24,6,0,0,6,59),(1772,24,6,0,0,8,29),(1773,24,6,0,0,9,29),(1774,24,6,0,0,12,29),(1775,24,6,0,0,16,29),(1776,24,6,0,0,18,29),(1777,24,6,0,0,19,29),(1778,24,6,0,0,11,29),(1779,24,6,0,0,10,29),(1780,23,5,4587.623311,0,12,104),(1781,23,5,1143.920709,0,33,104),(1782,17,5,4573.131613,0,12,100),(1783,17,5,1002.432231,0,33,100),(1784,23,5,6654.961573,0,16,104),(1785,23,5,0.000227,0,13,90),(1786,23,5,0.006091,0,14,90),(1787,23,5,0.023478,0,13,90),(1788,23,5,20.086183,0,5,90),(1789,23,5,7.012112,0,15,90),(1790,23,5,5.124415,0,17,90),(1791,23,5,428.640988,0,20,90),(1792,17,5,6648.276634,0,16,100),(1793,25,2,0,0,27,92),(1794,25,2,0,0,27,92),(1795,25,2,0,0,1,92),(1796,25,2,0,0,13,92),(1797,25,2,0,0,44,92),(1798,25,2,0,0,40,92),(1799,25,2,0,0,42,92),(1800,25,2,0,0,5,92),(1801,25,2,0,0,19,92),(1802,25,2,0,0,17,92),(1803,25,2,0.015635,0,14,52),(1804,25,2,0.009548,0,38,49),(1805,25,2,0,0,20,47),(1806,25,2,46.15032,0,12,51),(1807,25,2,0.743269,0,15,51),(1808,25,2,0.011074,0,40,50),(1809,25,2,23.811394,0,17,46),(1810,25,2,0.052142,0,13,46),(1811,25,2,6.607389,0,5,48),(1812,25,2,0.001377,0,13,53),(1813,25,2,0.001283,0,1,53),(1814,25,2,0.001712,0,1,62),(1815,25,2,0.015004,0,2,62),(1816,25,2,0.851825,0,3,62),(1817,25,2,12.583497,0,4,62),(1818,25,2,11.737845,0,5,62),(1819,25,2,0.006501,0,6,62),(1820,26,5,0.000224,0,13,101),(1821,26,5,0.006195,0,14,101),(1822,26,5,0.024463,0,13,101),(1823,26,5,21.224087,0,5,101),(1824,26,5,8.258844,0,15,101),(1825,26,5,5.431457,0,17,101),(1826,27,6,0.005844,0,13,89),(1827,27,6,0,0,14,89),(1828,27,6,7.890672,0,13,89),(1829,27,6,77.315854,0,5,89),(1830,27,6,0,0,15,89),(1831,26,5,498.192291,0,20,101),(1832,23,5,4619.00837,0,12,90),(1833,27,6,0,0,17,89),(1834,27,6,0,0,20,89),(1835,27,6,0,0,12,89),(1836,27,6,0,0,33,89),(1837,27,6,0,0,16,89),(1838,27,6,0,0,1,95),(1839,27,6,0,0,43,95),(1840,27,6,0,0,11,95),(1841,27,6,0,0,27,92),(1842,27,6,0,0,27,92),(1843,27,6,0,0,1,92),(1844,27,6,0,0,13,92),(1845,27,6,0,0,44,92),(1846,27,6,0,0,40,92),(1847,27,6,0,0,42,92),(1848,27,6,0,0,5,92),(1849,27,6,0,0,19,92),(1850,27,6,0,0,17,92),(1851,27,6,0,0,8,29),(1852,27,6,0,0,9,29),(1853,27,6,0,0,12,29),(1854,27,6,0,0,16,29),(1855,27,6,0,0,18,29),(1856,27,6,0,0,19,29),(1857,27,6,0,0,11,29),(1858,27,6,0,0,10,29),(1859,27,6,0,0,8,26),(1860,27,6,0,0,9,26),(1861,27,6,0,0,19,26),(1862,27,6,0,0,1,98),(1863,27,6,0,0,2,98),(1864,27,6,0,0,3,98),(1865,27,6,0,0,4,98),(1866,27,6,0,0,5,98),(1867,27,6,0,0,6,98),(1868,27,6,0,0,7,98),(1869,27,6,0,0,21,98),(1870,27,6,0,0,22,98),(1871,27,6,0,0,23,98),(1872,27,6,0,0,24,98),(1873,27,6,0,0,25,98),(1874,27,6,0,0,1,24),(1875,27,6,0,0,42,24),(1876,27,6,0,0,11,24),(1877,27,6,0,0,10,24),(1878,27,6,0,0,22,58),(1879,27,6,0,0,4,58),(1880,27,6,0,0,23,60),(1881,27,6,0,0,21,60),(1882,27,6,0,0,25,59),(1883,27,6,0,0,6,59),(1884,27,6,0,0,2,62),(1885,27,6,0,0,3,62),(1886,27,6,0,0,4,62),(1887,27,6,0,0,5,62),(1888,27,6,0,0,6,62),(1889,27,6,0,0,7,62),(1890,27,6,0,0,21,62),(1891,27,6,0,0,22,62),(1892,27,6,0,0,23,62),(1893,27,6,0,0,24,62),(1894,27,6,0,0,25,62),(1895,27,6,0,0,35,68),(1896,27,6,0,0,36,68),(1897,27,6,0,0,37,68),(1898,27,6,0,0,29,68),(1899,27,6,0,0,38,68),(1900,27,6,0,0,19,68),(1901,27,6,0,0,10,68),(1902,27,6,0,0,11,68),(1903,27,6,0,0,39,68),(1904,27,6,0,0,5,68),(1905,27,6,0,0,17,68),(1906,27,6,0,0,35,63),(1907,27,6,0,0,36,63),(1908,27,6,0,0,37,63),(1909,27,6,0,0,29,63),(1910,27,6,0,0,38,63),(1911,27,6,0,0,19,63),(1912,27,6,0,0,10,63),(1913,27,6,0,0,11,63),(1914,27,6,0,0,39,63),(1915,27,6,0,0,5,63),(1916,27,6,0,0,17,63),(1917,27,6,0,0,35,70),(1918,27,6,0,0,36,70),(1919,27,6,0,0,37,70),(1920,27,6,0,0,29,70),(1921,27,6,0,0,38,70),(1922,27,6,0,0,19,70),(1923,27,6,0,0,10,70),(1924,27,6,0,0,11,70),(1925,27,6,0,0,39,70),(1926,27,6,0,0,5,70),(1927,27,6,0,0,17,70),(1928,27,6,0,0,35,74),(1929,27,6,0,0,36,74),(1930,27,6,0,0,37,74),(1931,27,6,0,0,29,74),(1932,27,6,0,0,38,74),(1933,27,6,0,0,19,74),(1934,27,6,0,0,10,74),(1935,27,6,0,0,11,74),(1936,27,6,0,0,39,74),(1937,27,6,0,0,5,74),(1938,27,6,0,0,17,74),(1939,27,6,0,0,17,46),(1940,27,6,0,0,13,46),(1941,27,6,0,0,5,48),(1942,27,6,0,0,13,53),(1943,27,6,0,0,1,53),(1944,27,6,0,0,38,49),(1945,27,6,0,0,12,51),(1946,27,6,0,0,15,51),(1947,27,6,0,0,14,52),(1948,27,6,0,0,20,47),(1949,27,6,0,0,40,50),(1950,27,6,0,0,8,94),(1951,27,6,0,0,9,94),(1952,27,6,0,0,10,94),(1953,27,6,0,0,11,94),(1954,27,6,0,0,1,79),(1955,27,6,0,0,13,79),(1956,27,6,0,0,26,79),(1957,27,6,0,0,8,79),(1958,27,6,0,0,27,79),(1959,27,6,0,0,28,79),(1960,27,6,0,0,29,79),(1961,27,6,0,0,30,79),(1962,27,6,0,0,31,79),(1963,27,6,0,0,32,79),(1964,27,6,0,0,10,79),(1965,27,6,0,0,11,79),(1966,27,6,0,0,15,79),(1967,27,6,0,0,5,79),(1968,27,6,0,0,17,79),(1969,27,6,0,0,20,79),(1970,27,6,0,0,12,79),(1971,27,6,0,0,33,79),(1972,27,6,0,0,16,79),(1973,23,5,1262.852453,0,33,90),(1974,27,6,0,0,34,79),(1975,27,6,0,0,1,80),(1976,27,6,0,0,13,80),(1977,27,6,0,0,26,80),(1978,27,6,0,0,8,80),(1979,27,6,0,0,27,80),(1980,27,6,0,0,28,80),(1981,27,6,0,0,29,80),(1982,27,6,0,0,30,80),(1983,27,6,0,0,31,80),(1984,27,6,0,0,32,80),(1985,27,6,0,0,10,80),(1986,27,6,0,0,11,80),(1987,27,6,0,0,15,80),(1988,27,6,0,0,5,80),(1989,27,6,0,0,17,80),(1990,27,6,0,0,20,80),(1991,27,6,0,0,12,80),(1992,27,6,0,0,33,80),(1993,27,6,0,0,16,80),(1994,27,6,0,0,34,80),(1995,27,6,0,0,1,81),(1996,27,6,0,0,13,81),(1997,27,6,0,0,26,81),(1998,27,6,0,0,8,81),(1999,27,6,0,0,27,81),(2000,27,6,0,0,28,81),(2001,27,6,0,0,29,81),(2002,27,6,0,0,30,81),(2003,27,6,0,0,31,81),(2004,27,6,0,0,32,81),(2005,27,6,0,0,10,81),(2006,27,6,0,0,11,81),(2007,27,6,0,0,15,81),(2008,27,6,0,0,5,81),(2009,27,6,0,0,17,81),(2010,27,6,0,0,20,81),(2011,27,6,0,0,12,81),(2012,27,6,0,0,33,81),(2013,27,6,0,0,16,81),(2014,27,6,0,0,34,81),(2015,25,2,2788.321883,0,7,62),(2016,25,2,0,0,21,62),(2017,25,2,0,0,22,62),(2018,25,2,0,0,23,62),(2019,25,2,0,0,24,62),(2020,25,2,0,0,25,62),(2021,25,2,0,0,1,23),(2022,25,2,0,0,2,23),(2023,25,2,0,0,3,23),(2024,25,2,0,0,4,23),(2025,25,2,0,0,5,23),(2026,25,2,0,0,6,23),(2027,25,2,0,0,7,23),(2028,25,2,0,0,21,23),(2029,25,2,0,0,22,23),(2030,25,2,0,0,23,23),(2031,25,2,0,0,24,23),(2032,25,2,0,0,25,23),(2033,25,2,0,0,1,82),(2034,25,2,0,0,2,82),(2035,25,2,0,0,3,82),(2036,25,2,0,0,4,82),(2037,25,2,0,0,5,82),(2038,25,2,0,0,6,82),(2039,25,2,0,0,7,82),(2040,25,2,0,0,21,82),(2041,25,2,0,0,22,82),(2042,25,2,0,0,23,82),(2043,25,2,0,0,24,82),(2044,25,2,0,0,25,82),(2045,25,2,0,0,28,20),(2046,25,2,0,0,41,20),(2047,25,2,0,0,42,20),(2048,25,2,0,0,38,20),(2049,25,2,0,0,19,20),(2050,25,2,0,0,39,20),(2051,25,2,0,0,5,20),(2052,25,2,0,0,12,20),(2053,25,2,0,0,16,20),(2054,25,2,0,0,34,20),(2055,25,2,0,0,8,29),(2056,25,2,0,0,9,29),(2057,25,2,0,0,12,29),(2058,25,2,0,0,16,29),(2059,25,2,0,0,18,29),(2060,25,2,0,0,19,29),(2061,25,2,0,0,11,29),(2062,25,2,0,0,10,29),(2063,25,2,0,0,8,26),(2064,25,2,0,0,9,26),(2065,25,2,0,0,19,26),(2066,25,2,0,0,1,98),(2067,25,2,0,0,2,98),(2068,25,2,0,0,3,98),(2069,25,2,0,0,4,98),(2070,25,2,0,0,5,98),(2071,25,2,0,0,6,98),(2072,25,2,0,0,7,98),(2073,25,2,0,0,21,98),(2074,25,2,0,0,22,98),(2075,25,2,0,0,23,98),(2076,25,2,0,0,24,98),(2077,25,2,0,0,25,98),(2078,25,2,0,0,13,89),(2079,25,2,0,0,14,89),(2080,25,2,0,0,13,89),(2081,25,2,0,0,5,89),(2082,25,2,0,0,15,89),(2083,25,2,0,0,17,89),(2084,25,2,0,0,20,89),(2085,25,2,0,0,12,89),(2086,25,2,0,0,33,89),(2087,25,2,0,0,16,89),(2088,25,2,0,0,1,95),(2089,25,2,0,0,43,95),(2090,25,2,0,0,11,95),(2091,25,2,0,0,1,31),(2092,25,2,0,0,2,31),(2093,25,2,0,0,3,31),(2094,25,2,0,0,4,31),(2095,25,2,0,0,5,31),(2096,25,2,0,0,6,31),(2097,25,2,0,0,7,31),(2098,25,2,0,0,21,31),(2099,25,2,0,0,22,31),(2100,25,2,0,0,23,31),(2101,25,2,0,0,24,31),(2102,25,2,0,0,25,31),(2103,25,2,0,0,1,1),(2104,25,2,0,0,2,1),(2105,25,2,0,0,3,1),(2106,25,2,0,0,4,1),(2107,25,2,0,0,5,1),(2108,25,2,0,0,6,1),(2109,25,2,0,0,7,1),(2110,25,2,0,0,21,1),(2111,25,2,0,0,22,1),(2112,25,2,0,0,23,1),(2113,25,2,0,0,24,1),(2114,25,2,0,0,25,1),(2115,25,2,0,0,1,24),(2116,25,2,0,0,2,24),(2117,25,2,0,0,3,24),(2118,25,2,0,0,4,24),(2119,25,2,0,0,5,24),(2120,25,2,0,0,6,24),(2121,25,2,0,0,7,24),(2122,25,2,0,0,21,24),(2123,25,2,0,0,22,24),(2124,25,2,0,0,23,24),(2125,25,2,0,0,24,24),(2126,25,2,0,0,25,24),(2127,25,2,0,0,8,94),(2128,25,2,0,0,9,94),(2129,25,2,0,0,10,94),(2130,25,2,0,0,11,94),(2131,25,2,0,0,35,74),(2132,25,2,0,0,36,74),(2133,25,2,0,0,37,74),(2134,25,2,0,0,29,74),(2135,25,2,0,0,38,74),(2136,25,2,0,0,19,74),(2137,25,2,0,0,10,74),(2138,25,2,0,0,11,74),(2139,25,2,0,0,39,74),(2140,25,2,0,0,5,74),(2141,25,2,0,0,17,74),(2142,25,2,0,0,35,70),(2143,25,2,0,0,36,70),(2144,25,2,0,0,37,70),(2145,25,2,0,0,29,70),(2146,25,2,0,0,38,70),(2147,25,2,0,0,19,70),(2148,25,2,0,0,10,70),(2149,25,2,0,0,11,70),(2150,25,2,0,0,39,70),(2151,25,2,0,0,5,70),(2152,25,2,0,0,17,70),(2153,25,2,0,0,35,63),(2154,25,2,0,0,36,63),(2155,25,2,0,0,37,63),(2156,25,2,0,0,29,63),(2157,25,2,0,0,38,63),(2158,25,2,0,0,19,63),(2159,25,2,0,0,10,63),(2160,25,2,0,0,11,63),(2161,25,2,0,0,39,63),(2162,25,2,0,0,5,63),(2163,25,2,0,0,17,63),(2164,25,2,0,0,23,60),(2165,25,2,0,0,21,60),(2166,25,2,0,0,22,58),(2167,25,2,0,0,4,58),(2168,25,2,0,0,25,59),(2169,25,2,0,0,6,59),(2170,25,2,0,0,8,27),(2171,25,2,0,0,9,27),(2172,25,2,0,0,10,27),(2173,25,2,0,0,11,27),(2174,25,2,0,0,1,79),(2175,25,2,0,0,13,79),(2176,25,2,0,0,26,79),(2177,25,2,0,0,8,79),(2178,25,2,0,0,27,79),(2179,25,2,0,0,28,79),(2180,25,2,0,0,29,79),(2181,25,2,0,0,30,79),(2182,25,2,0,0,31,79),(2183,25,2,0,0,32,79),(2184,25,2,0,0,10,79),(2185,25,2,0,0,11,79),(2186,25,2,0,0,15,79),(2187,25,2,0,0,5,79),(2188,25,2,0,0,17,79),(2189,25,2,0,0,20,79),(2190,25,2,0,0,12,79),(2191,25,2,0,0,33,79),(2192,25,2,0,0,16,79),(2193,25,2,0,0,34,79),(2194,25,2,0,0,1,81),(2195,25,2,0,0,13,81),(2196,25,2,0,0,26,81),(2197,25,2,0,0,8,81),(2198,25,2,0,0,27,81),(2199,25,2,0,0,28,81),(2200,25,2,0,0,29,81),(2201,25,2,0,0,30,81),(2202,25,2,0,0,31,81),(2203,25,2,0,0,32,81),(2204,25,2,0,0,10,81),(2205,25,2,0,0,11,81),(2206,25,2,0,0,15,81),(2207,25,2,0,0,5,81),(2208,25,2,0,0,17,81),(2209,25,2,0,0,20,81),(2210,25,2,0,0,12,81),(2211,25,2,0,0,33,81),(2212,25,2,0,0,16,81),(2213,25,2,0,0,34,81),(2214,25,2,0,0,1,80),(2215,25,2,0,0,13,80),(2216,25,2,0,0,26,80),(2217,25,2,0,0,8,80),(2218,25,2,0,0,27,80),(2219,25,2,0,0,28,80),(2220,25,2,0,0,29,80),(2221,25,2,0,0,30,80),(2222,25,2,0,0,31,80),(2223,25,2,0,0,32,80),(2224,25,2,0,0,10,80),(2225,25,2,0,0,11,80),(2226,25,2,0,0,15,80),(2227,25,2,0,0,5,80),(2228,25,2,0,0,17,80),(2229,25,2,0,0,20,80),(2230,25,2,0,0,12,80),(2231,25,2,0,0,33,80),(2232,25,2,0,0,16,80),(2233,25,2,0,0,34,80),(2234,25,2,0,0,1,45),(2235,25,2,0,0,2,45),(2236,25,2,0,0,3,45),(2237,25,2,0,0,4,45),(2238,25,2,0,0,5,45),(2239,25,2,0,0,6,45),(2240,25,2,0,0,7,45),(2241,25,2,0,0,21,45),(2242,25,2,0,0,22,45),(2243,25,2,0,0,23,45),(2244,25,2,0,0,24,45),(2245,25,2,0,0,25,45),(2246,25,2,0,0,39,44),(2247,25,2,0,0,39,43),(2248,25,2,0,0,39,42),(2249,25,2,0,0,1,97),(2250,25,2,0,0,2,97),(2251,25,2,0,0,3,97),(2252,25,2,0,0,4,97),(2253,25,2,0,0,5,97),(2254,25,2,0,0,6,97),(2255,25,2,0,0,7,97),(2256,25,2,0,0,21,97),(2257,25,2,0,0,22,97),(2258,25,2,0,0,23,97),(2259,25,2,0,0,24,97),(2260,25,2,0,0,25,97),(2261,26,5,4606.042629,0,12,101),(2262,26,5,1350.519361,0,33,101),(2263,28,2,0.220867,0,1,24),(2264,28,2,0.792619,0,2,24),(2265,28,2,8.18155,0,3,24),(2266,28,2,178.510128,0,4,24),(2267,28,2,54.394731,0,5,24),(2268,28,2,4.234161,0,6,24),(2269,29,5,0.000226,0,13,34),(2270,29,5,0.006419,0,14,34),(2271,29,5,0.025436,0,13,34),(2272,29,5,23.068165,0,5,34),(2273,29,5,10.022848,0,15,34),(2274,29,5,5.795201,0,17,34),(2275,30,6,0,0,1,98),(2276,30,6,0,0,2,98),(2277,30,6,0,0,3,98),(2278,30,6,0,0,4,98),(2279,30,6,0,0,5,98),(2280,30,6,0,0,6,98),(2281,30,6,0,0,7,98),(2282,30,6,0,0,21,98),(2283,30,6,0,0,22,98),(2284,30,6,0,0,23,98),(2285,30,6,0,0,24,98),(2286,30,6,0,0,25,98),(2287,30,6,0.024424,0,35,70),(2288,30,6,3.495472,0,36,70),(2289,30,6,282.532932,0,37,70),(2290,29,5,597.843613,0,20,34),(2291,23,5,6903.076229,0,16,90),(2292,23,5,0.000222,0,13,100),(2293,23,5,0.005811,0,14,100),(2294,23,5,0.022801,0,13,100),(2295,23,5,20.395326,0,5,100),(2296,23,5,6.622601,0,15,100),(2297,23,5,5.216621,0,17,100),(2298,23,5,351.534482,0,20,100),(2299,28,2,1457.616037,0,7,24),(2300,28,2,1.684954,0,21,24),(2301,28,2,2.599758,0,22,24),(2302,28,2,1.926684,0,23,24),(2303,28,2,5.368979,0,24,24),(2304,28,2,0.119735,0,25,24),(2305,28,2,0,0,28,20),(2306,28,2,0.478622,0,41,20),(2307,28,2,2.964983,0,42,20),(2308,28,2,0,0,38,20),(2309,28,2,736.155632,0,19,20),(2310,28,2,8.615536,0,39,20),(2311,28,2,0,0,5,20),(2312,30,6,0,0,29,70),(2313,28,2,1417.704266,0,12,20),(2314,30,6,469.482608,0,38,70),(2315,26,5,7148.503334,0,16,101),(2316,26,5,0.000224,0,13,104),(2317,26,5,0.005991,0,14,104),(2318,26,5,0.023602,0,13,104),(2319,26,5,21.169982,0,5,104),(2320,26,5,7.454415,0,15,104),(2321,26,5,5.448731,0,17,104),(2322,26,5,405.414826,0,20,104),(2323,29,5,4900.085076,0,12,34),(2324,28,2,1895.622091,0,16,20),(2325,28,2,0,0,34,20),(2326,28,2,0.002118,0,1,95),(2327,28,2,0.002225,0,43,95),(2328,28,2,0.015261,0,11,95),(2329,28,2,0.002263,0,1,23),(2330,28,2,0.011552,0,2,23),(2331,28,2,0.742126,0,3,23),(2332,28,2,9.927272,0,4,23),(2333,28,2,9.746492,0,5,23),(2334,28,2,0.007714,0,6,23),(2335,23,5,4832.690086,0,12,100),(2336,30,6,0,0,19,70),(2337,30,6,5.06996,0,10,70),(2338,30,6,38.055066,0,11,70),(2339,30,6,15.176002,0,39,70),(2340,29,5,1693.096123,0,33,34),(2341,23,5,1129.594104,0,33,100),(2342,30,6,2008.019418,0,5,70),(2343,30,6,0,0,17,70),(2344,30,6,0.023864,0,35,63),(2345,30,6,1.134222,0,36,63),(2346,30,6,255.437912,0,37,63),(2347,28,2,2603.055746,0,7,23),(2348,28,2,0.005653,0,21,23),(2349,28,2,0.022347,0,22,23),(2350,28,2,0.005738,0,23,23),(2351,28,2,0.034634,0,24,23),(2352,28,2,0.002415,0,25,23),(2353,28,2,0.016826,0,8,27),(2354,28,2,0.527324,0,9,27),(2355,28,2,0.750679,0,10,27),(2356,28,2,0.897,0,11,27),(2357,28,2,0.084355,0,1,1),(2358,28,2,0.219348,0,2,1),(2359,28,2,3.703099,0,3,1),(2360,28,2,7.611658,0,4,1),(2361,26,5,4818.297433,0,12,104),(2362,28,2,21.546615,0,5,1),(2363,28,2,0.406708,0,6,1),(2364,28,2,138.885925,0,7,1),(2365,28,2,0.237049,0,21,1),(2366,28,2,0.212978,0,22,1),(2367,28,2,0.237385,0,23,1),(2368,28,2,0.616869,0,24,1),(2369,28,2,0.087039,0,25,1),(2370,28,2,0.014035,0,1,82),(2371,28,2,0.120087,0,2,82),(2372,28,2,0.461668,0,3,82),(2373,28,2,24.653177,0,4,82),(2374,28,2,5.321966,0,5,82),(2375,28,2,0.329836,0,6,82),(2376,28,2,61.516486,0,7,82),(2377,28,2,0.039163,0,21,82),(2378,28,2,0.987506,0,22,82),(2379,28,2,0.162454,0,23,82),(2380,28,2,5.18246,0,24,82),(2381,28,2,0.002536,0,25,82),(2382,28,2,0.002507,0,13,89),(2383,28,2,0.017772,0,14,89),(2384,28,2,0.078839,0,13,89),(2385,28,2,49.674061,0,5,89),(2386,28,2,54.309815,0,15,89),(2387,28,2,51.353488,0,17,89),(2388,26,5,1220.629192,0,33,104),(2389,28,2,1079.775679,0,20,89),(2390,30,6,0,0,29,63),(2391,30,6,275.121249,0,38,63),(2392,29,5,7108.841896,0,16,34),(2393,29,5,0.000223,0,13,104),(2394,29,5,0.005967,0,14,104),(2395,29,5,0.023329,0,13,104),(2396,29,5,20.825646,0,5,104),(2397,29,5,7.100319,0,15,104),(2398,23,5,7026.808142,0,16,100),(2399,23,5,0.000224,0,13,34),(2400,29,5,5.30803,0,17,104),(2401,23,5,0.006416,0,14,34),(2402,23,5,0.024876,0,13,34),(2403,23,5,23.510762,0,5,34),(2404,23,5,10.032729,0,15,34),(2405,23,5,5.846495,0,17,34),(2406,28,2,0,0,12,89),(2407,29,5,398.000177,0,20,104),(2408,23,5,605.079344,0,20,34),(2409,30,6,0,0,19,63),(2410,30,6,5.151476,0,10,63),(2411,30,6,22.828252,0,11,63),(2412,30,6,15.182523,0,39,63),(2413,30,6,2377.77088,0,5,63),(2414,30,6,0,0,17,63),(2415,30,6,0.024565,0,35,74),(2416,30,6,3.243706,0,36,74),(2417,26,5,7107.066732,0,16,104),(2418,26,5,0.000224,0,13,90),(2419,26,5,0.006115,0,14,90),(2420,26,5,0.024279,0,13,90),(2421,26,5,21.891382,0,5,90),(2422,26,5,8.344682,0,15,90),(2423,26,5,5.448401,0,17,90),(2424,30,6,274.375835,0,37,74),(2425,26,5,461.366456,0,20,90),(2426,28,2,4282.353134,0,33,89),(2427,29,5,4863.258355,0,12,104),(2428,23,5,4907.305528,0,12,34),(2429,29,5,1247.99556,0,33,104),(2430,30,6,0,0,29,74),(2431,30,6,467.522505,0,38,74),(2432,23,5,1678.880449,0,33,34),(2433,28,2,0,0,16,89),(2434,28,2,0.002766,0,8,94),(2435,28,2,0.004493,0,9,94),(2436,28,2,1.553034,0,10,94),(2437,28,2,0.113182,0,11,94),(2438,28,2,0,0,27,92),(2439,28,2,0,0,27,92),(2440,28,2,0,0,1,92),(2441,28,2,0,0,13,92),(2442,28,2,0,0,44,92),(2443,28,2,0,0,40,92),(2444,28,2,0,0,42,92),(2445,28,2,0,0,5,92),(2446,28,2,0,0,19,92),(2447,28,2,0,0,17,92),(2448,28,2,0.080839,0,1,31),(2449,28,2,0.15624,0,2,31),(2450,28,2,1.266331,0,3,31),(2451,28,2,10.078238,0,4,31),(2452,28,2,3.623079,0,5,31),(2453,28,2,0.481286,0,6,31),(2454,28,2,19.423225,0,7,31),(2455,28,2,0.190029,0,21,31),(2456,28,2,0.176177,0,22,31),(2457,28,2,0.277157,0,23,31),(2458,28,2,0.498659,0,24,31),(2459,28,2,0.081656,0,25,31),(2460,28,2,0.005379,0,22,58),(2461,28,2,1.988959,0,4,58),(2462,28,2,0.001463,0,25,59),(2463,28,2,0.002733,0,6,59),(2464,28,2,0.002245,0,23,60),(2465,28,2,0.002258,0,21,60),(2466,28,2,0.001529,0,1,79),(2467,28,2,0.001854,0,13,79),(2468,28,2,0.001781,0,26,79),(2469,28,2,0.001982,0,8,79),(2470,28,2,0.002628,0,27,79),(2471,28,2,0.005132,0,28,79),(2472,28,2,0,0,29,79),(2473,28,2,0.032173,0,30,79),(2474,28,2,0.045191,0,31,79),(2475,28,2,1.165643,0,32,79),(2476,28,2,0.647756,0,10,79),(2477,28,2,3.429513,0,11,79),(2478,28,2,0.517971,0,15,79),(2479,28,2,17.838087,0,5,79),(2480,28,2,13.268642,0,17,79),(2481,28,2,1.196589,0,20,79),(2482,28,2,260.736888,0,12,79),(2483,28,2,25.955829,0,33,79),(2484,28,2,90.33942,0,16,79),(2485,28,2,29.355381,0,34,79),(2486,28,2,0.001561,0,1,81),(2487,28,2,0.001851,0,13,81),(2488,28,2,0.001774,0,26,81),(2489,28,2,0.001987,0,8,81),(2490,28,2,0.002577,0,27,81),(2491,28,2,0.004682,0,28,81),(2492,28,2,0,0,29,81),(2493,28,2,0.02733,0,30,81),(2494,28,2,0.040146,0,31,81),(2495,28,2,0.925569,0,32,81),(2496,28,2,0.499593,0,10,81),(2497,28,2,2.789341,0,11,81),(2498,28,2,0.432781,0,15,81),(2499,28,2,13.971598,0,5,81),(2500,28,2,11.108642,0,17,81),(2501,28,2,1.079465,0,20,81),(2502,26,5,4844.881587,0,12,90),(2503,28,2,203.426792,0,12,81),(2504,28,2,21.302635,0,33,81),(2505,28,2,71.27706,0,16,81),(2506,28,2,23.766355,0,34,81),(2507,28,2,0.00158,0,1,80),(2508,28,2,0.001913,0,13,80),(2509,28,2,0.001812,0,26,80),(2510,28,2,0.002004,0,8,80),(2511,28,2,0.002722,0,27,80),(2512,28,2,0.004673,0,28,80),(2513,28,2,0,0,29,80),(2514,28,2,0.027689,0,30,80),(2515,28,2,0.040953,0,31,80),(2516,28,2,0.925787,0,32,80),(2517,28,2,0.498013,0,10,80),(2518,28,2,2.786666,0,11,80),(2519,28,2,0.434232,0,15,80),(2520,28,2,13.968187,0,5,80),(2521,28,2,11.11658,0,17,80),(2522,28,2,1.098563,0,20,80),(2523,28,2,203.29297,0,12,80),(2524,28,2,21.314918,0,33,80),(2525,28,2,71.25738,0,16,80),(2526,28,2,23.766537,0,34,80),(2527,28,2,46.029148,0,12,51),(2528,28,2,0.7449,0,15,51),(2529,28,2,23.749401,0,17,46),(2530,28,2,0.052333,0,13,46),(2531,28,2,0.010235,0,38,49),(2532,28,2,0.001592,0,13,53),(2533,28,2,0.001519,0,1,53),(2534,28,2,0,0,20,47),(2535,28,2,0.011683,0,40,50),(2536,30,6,0,0,19,74),(2537,30,6,3.402343,0,10,74),(2538,28,2,6.601483,0,5,48),(2539,28,2,0.01014,0,14,52),(2540,28,2,0.015792,0,35,63),(2541,28,2,0.418977,0,36,63),(2542,28,2,4.604146,0,37,63),(2543,28,2,0,0,29,63),(2544,30,6,37.140198,0,11,74),(2545,30,6,12.155657,0,39,74),(2546,26,5,1345.508809,0,33,90),(2547,28,2,102.035038,0,38,63),(2548,28,2,0,0,19,63),(2549,28,2,0.12909,0,10,63),(2550,28,2,8.258965,0,11,63),(2551,28,2,0.291868,0,39,63),(2552,28,2,477.596946,0,5,63),(2553,28,2,0,0,17,63),(2554,28,2,0.006441,0,35,74),(2555,28,2,0.749416,0,36,74),(2556,28,2,1.184545,0,37,74),(2557,28,2,0,0,29,74),(2558,28,2,100.871739,0,38,74),(2559,28,2,0,0,19,74),(2560,28,2,0.180626,0,10,74),(2561,28,2,14.082904,0,11,74),(2562,28,2,0.268669,0,39,74),(2563,28,2,475.686882,0,5,74),(2564,28,2,0,0,17,74),(2565,28,2,0.006754,0,35,70),(2566,28,2,0.753825,0,36,70),(2567,28,2,1.232058,0,37,70),(2568,28,2,0,0,29,70),(2569,28,2,100.954542,0,38,70),(2570,28,2,0,0,19,70),(2571,28,2,0.147664,0,10,70),(2572,28,2,14.108585,0,11,70),(2573,28,2,0.304317,0,39,70),(2574,28,2,475.724178,0,5,70),(2575,28,2,0,0,17,70),(2576,28,2,0.031615,0,1,45),(2577,28,2,0.016392,0,2,45),(2578,28,2,0.741831,0,3,45),(2579,30,6,1999.225521,0,5,74),(2580,30,6,0,0,17,74),(2581,30,6,0.023192,0,35,68),(2582,30,6,3.565737,0,36,68),(2583,28,2,5.477617,0,4,45),(2584,28,2,3.42316,0,5,45),(2585,28,2,0.040925,0,6,45),(2586,30,6,207.886012,0,37,68),(2587,28,2,35.872795,0,7,45),(2588,28,2,0.009729,0,21,45),(2589,28,2,0.01093,0,22,45),(2590,28,2,0.018125,0,23,45),(2591,28,2,0.063842,0,24,45),(2592,28,2,0.001475,0,25,45),(2593,28,2,0.04499,0,8,26),(2594,28,2,0.014116,0,9,26),(2595,28,2,216.760407,0,19,26),(2596,28,2,0.016355,0,1,62),(2597,28,2,0.012465,0,2,62),(2598,28,2,0.854316,0,3,62),(2599,28,2,12.587946,0,4,62),(2600,28,2,11.747766,0,5,62),(2601,28,2,0.006737,0,6,62),(2602,29,5,7051.809244,0,16,104),(2603,29,5,0.000234,0,13,85),(2604,29,5,0.006589,0,14,85),(2605,29,5,0.026447,0,13,85),(2606,29,5,23.953231,0,5,85),(2607,29,5,11.40949,0,15,85),(2608,29,5,5.996026,0,17,85),(2609,29,5,698.276584,0,20,85),(2610,23,5,7121.445172,0,16,34),(2611,23,5,0.000246,0,13,85),(2612,23,5,0.006598,0,14,85),(2613,23,5,0.026524,0,13,85),(2614,23,5,24.037097,0,5,85),(2615,23,5,11.866677,0,15,85),(2616,23,5,6.065892,0,17,85),(2617,23,5,705.728998,0,20,85),(2618,30,6,0,0,29,68),(2619,30,6,402.939609,0,38,68),(2620,28,2,2786.134273,0,7,62),(2621,28,2,0.00529,0,21,62),(2622,28,2,0.031553,0,22,62),(2623,28,2,0.005342,0,23,62),(2624,28,2,0.048239,0,24,62),(2625,28,2,0.001842,0,25,62),(2626,28,2,0.040449,0,1,98),(2627,28,2,0.016092,0,2,98),(2628,28,2,0.863154,0,3,98),(2629,28,2,181.035945,0,4,98),(2630,26,5,7137.638123,0,16,90),(2631,26,5,0.000228,0,13,85),(2632,26,5,0.006621,0,14,85),(2633,26,5,0.0269,0,13,85),(2634,26,5,24.49184,0,5,85),(2635,26,5,12.250437,0,15,85),(2636,28,2,21.579774,0,5,98),(2637,28,2,0.122809,0,6,98),(2638,26,5,6.116776,0,17,85),(2639,26,5,715.508967,0,20,85),(2640,28,2,458.076463,0,7,98),(2641,28,2,0.029658,0,21,98),(2642,28,2,0.056089,0,22,98),(2643,28,2,0.028952,0,23,98),(2644,28,2,0.354455,0,24,98),(2645,28,2,0.002649,0,25,98),(2646,28,2,0,0,1,97),(2647,28,2,0,0,2,97),(2648,28,2,0,0,3,97),(2649,28,2,0,0,4,97),(2650,28,2,0,0,5,97),(2651,28,2,0,0,6,97),(2652,30,6,0,0,19,68),(2653,30,6,4.88133,0,10,68),(2654,28,2,0,0,7,97),(2655,28,2,0,0,21,97),(2656,28,2,0,0,22,97),(2657,28,2,0,0,23,97),(2658,28,2,0,0,24,97),(2659,28,2,0,0,25,97),(2660,28,2,0.033197,0,8,29),(2661,28,2,0.081037,0,9,29),(2662,30,6,28.042224,0,11,68),(2663,30,6,14.127709,0,39,68),(2664,28,2,69.142201,0,12,29),(2665,28,2,25.227148,0,16,29),(2666,28,2,0.085683,0,18,29),(2667,28,2,0.548784,0,19,29),(2668,28,2,0.999945,0,11,29),(2669,28,2,0.249584,0,10,29),(2670,28,2,0,0,39,42),(2671,28,2,0,0,39,44),(2672,28,2,0,0,39,43),(2673,29,5,4939.488635,0,12,85),(2674,23,5,4919.415196,0,12,85),(2675,30,6,1780.773649,0,5,68),(2676,30,6,0,0,17,68),(2677,30,6,0.011556,0,1,79),(2678,30,6,0.000694,0,13,79),(2679,30,6,0.000707,0,26,79),(2680,30,6,0.000733,0,8,79),(2681,30,6,0,0,27,79),(2682,30,6,0.001448,0,28,79),(2683,30,6,0.00352,0,29,79),(2684,30,6,0.008426,0,30,79),(2685,30,6,0.015752,0,31,79),(2686,30,6,0.094591,0,32,79),(2687,30,6,0,0,10,79),(2688,30,6,0.351954,0,11,79),(2689,30,6,0.130844,0,15,79),(2690,30,6,1.071143,0,5,79),(2691,30,6,2.37719,0,17,79),(2692,30,6,0.420558,0,20,79),(2693,30,6,9.932901,0,12,79),(2694,30,6,2.9665,0,33,79),(2695,30,6,3.763722,0,16,79),(2696,30,6,3.116413,0,34,79),(2697,30,6,0.000658,0,1,81),(2698,30,6,0.000727,0,13,81),(2699,30,6,0.000763,0,26,81),(2700,30,6,0.000756,0,8,81),(2701,30,6,0.001621,0,27,81),(2702,30,6,0.00125,0,28,81),(2703,30,6,0.002726,0,29,81),(2704,30,6,0.005631,0,30,81),(2705,30,6,0.010996,0,31,81),(2706,30,6,0.074191,0,32,81),(2707,30,6,0.784944,0,10,81),(2708,30,6,0.300077,0,11,81),(2709,30,6,0.08816,0,15,81),(2710,30,6,0.801693,0,5,81),(2711,30,6,1.520769,0,17,81),(2712,30,6,0.306955,0,20,81),(2713,30,6,6.045164,0,12,81),(2714,30,6,1.981842,0,33,81),(2715,30,6,2.369953,0,16,81),(2716,30,6,2.075658,0,34,81),(2717,30,6,0.000688,0,1,80),(2718,30,6,0.000746,0,13,80),(2719,30,6,0.000771,0,26,80),(2720,30,6,0.000853,0,8,80),(2721,30,6,0.001645,0,27,80),(2722,30,6,0.001256,0,28,80),(2723,30,6,0.002745,0,29,80),(2724,30,6,0.005597,0,30,80),(2725,30,6,0.010956,0,31,80),(2726,30,6,0.074503,0,32,80),(2727,30,6,0.791355,0,10,80),(2728,30,6,0.299889,0,11,80),(2729,30,6,0.089023,0,15,80),(2730,30,6,0.797399,0,5,80),(2731,30,6,1.508733,0,17,80),(2732,30,6,0.307296,0,20,80),(2733,30,6,6.000595,0,12,80),(2734,30,6,1.959699,0,33,80),(2735,30,6,2.363366,0,16,80),(2736,30,6,2.057577,0,34,80),(2737,30,6,0,0,1,24),(2738,30,6,0,0,42,24),(2739,30,6,0,0,11,24),(2740,30,6,0,0,10,24),(2741,30,6,0,0,8,29),(2742,30,6,0,0,9,29),(2743,30,6,0,0,12,29),(2744,29,5,1885.007956,0,33,85),(2745,30,6,0,0,16,29),(2746,30,6,0,0,18,29),(2747,30,6,0,0,19,29),(2748,30,6,0,0,11,29),(2749,30,6,0,0,10,29),(2750,30,6,0,0,8,94),(2751,30,6,0,0,9,94),(2752,30,6,0,0,10,94),(2753,30,6,0,0,11,94),(2754,30,6,0.020678,0,13,89),(2755,30,6,0,0,14,89),(2756,30,6,7.911042,0,13,89),(2757,30,6,77.499325,0,5,89),(2758,30,6,0,0,15,89),(2759,23,5,1867.289457,0,33,85),(2760,26,5,4877.671692,0,12,85),(2761,30,6,0,0,17,89),(2762,30,6,0,0,20,89),(2763,26,5,1834.977016,0,33,85),(2764,29,5,7126.275793,0,16,85),(2765,29,5,0.000224,0,13,101),(2766,29,5,0.006242,0,14,101),(2767,29,5,0.024503,0,13,101),(2768,29,5,22.293177,0,5,101),(2769,29,5,8.857169,0,15,101),(2770,29,5,5.622152,0,17,101),(2771,29,5,515.806279,0,20,101),(2772,23,5,7130.727733,0,16,85),(2773,23,5,0.000225,0,13,101),(2774,23,5,0.006254,0,14,101),(2775,23,5,0.024995,0,13,101),(2776,23,5,22.562741,0,5,101),(2777,23,5,9.106139,0,15,101),(2778,23,5,5.6849,0,17,101),(2779,23,5,521.496356,0,20,101),(2780,26,5,7179.36496,0,16,85),(2781,26,5,0.000228,0,13,34),(2782,26,5,0.00643,0,14,34),(2783,26,5,0.025869,0,13,34),(2784,26,5,25.131708,0,5,34),(2785,26,5,10.575803,0,15,34),(2786,26,5,5.910696,0,17,34),(2787,30,6,7813.12984,0,12,89),(2788,30,6,0,0,33,89),(2789,30,6,0,0,16,89),(2790,30,6,0.002984,0,27,92),(2791,30,6,0.002469,0,27,92),(2792,30,6,0.002682,0,1,92),(2793,30,6,0.00227,0,13,92),(2794,30,6,0.006411,0,44,92),(2795,30,6,0,0,40,92),(2796,30,6,0,0,42,92),(2797,30,6,0,0,5,92),(2798,30,6,0,0,19,92),(2799,30,6,0,0,17,92),(2800,30,6,0,0,20,47),(2801,30,6,0.014384,0,38,49),(2802,30,6,0.010943,0,14,52),(2803,30,6,0.001222,0,13,53),(2804,30,6,0.001729,0,1,53),(2805,30,6,0.011342,0,40,50),(2806,30,6,16.047289,0,12,51),(2807,30,6,1.144172,0,15,51),(2808,30,6,16.609421,0,17,46),(2809,30,6,0.063985,0,13,46),(2810,30,6,1.064881,0,5,48),(2811,30,6,0,0,22,58),(2812,26,5,610.912912,0,20,34),(2813,29,5,4902.219776,0,12,101),(2814,23,5,4893.431621,0,12,101),(2815,29,5,1531.903438,0,33,101),(2816,30,6,0,0,4,58),(2817,30,6,0,0,25,59),(2818,30,6,0,0,6,59),(2819,30,6,0,0,23,60),(2820,30,6,0,0,21,60),(2821,30,6,0.016072,0,2,62),(2822,30,6,1.006595,0,3,62),(2823,30,6,3.687875,0,4,62),(2824,30,6,18.785013,0,5,62),(2825,30,6,0.003845,0,6,62),(2826,23,5,1515.74195,0,33,101),(2827,26,5,4870.781534,0,12,34),(2828,30,6,0,0,7,62),(2829,30,6,0.002024,0,21,62),(2830,30,6,0.007958,0,22,62),(2831,30,6,0.001922,0,23,62),(2832,30,6,0.012591,0,24,62),(2833,30,6,0.000377,0,25,62),(2834,30,6,0.007159,0,1,95),(2835,30,6,0.001058,0,43,95),(2836,30,6,0.166377,0,11,95),(2837,30,6,0,0,8,26),(2838,30,6,0,0,9,26),(2839,30,6,0,0,19,26),(2840,26,5,1648.568036,0,33,34),(2841,29,5,7096.135259,0,16,101),(2842,29,5,0.000223,0,13,90),(2843,29,5,0.006093,0,14,90),(2844,29,5,0.024075,0,13,90),(2845,29,5,21.528014,0,5,90),(2846,29,5,7.907214,0,15,90),(2847,29,5,5.46327,0,17,90),(2848,29,5,448.840078,0,20,90),(2849,23,5,7099.426256,0,16,101),(2850,26,5,6953.376578,0,16,34),(2851,26,5,0.00022,0,13,100),(2852,26,5,0.005811,0,14,100),(2853,26,5,0.022499,0,13,100),(2854,26,5,19.092215,0,5,100),(2855,26,5,5.957709,0,15,100),(2856,26,5,4.989177,0,17,100),(2857,26,5,335.192392,0,20,100),(2858,29,5,4611.9462,0,12,90),(2859,29,5,1262.664135,0,33,90),(2860,26,5,4554.84084,0,12,100),(2861,26,5,1001.883822,0,33,100),(2862,29,5,6692.567142,0,16,90),(2863,29,5,0.000221,0,13,100),(2864,29,5,0.0058,0,14,100),(2865,29,5,0.022313,0,13,100),(2866,29,5,18.724461,0,5,100),(2867,29,5,5.705194,0,15,100),(2868,29,5,4.856403,0,17,100),(2869,29,5,331.873877,0,20,100),(2870,26,5,6666.930138,0,16,100),(2871,29,5,4466.282186,0,12,100),(2872,29,5,821.246855,0,33,100),(2873,29,5,6203.53804,0,16,100),(2874,31,8,0,0,32,41),(2875,31,8,0,0,1,41),(2876,31,8,0,0,42,41),(2877,31,8,0,0,31,41),(2878,31,8,0,0,43,41),(2879,31,8,0,0,10,41),(2880,31,8,20.717816,0,39,42),(2881,31,8,15.692853,0,39,43),(2882,31,8,20.700291,0,39,44),(2883,31,8,0.007853,0,27,91),(2884,31,8,0.014073,0,1,79),(2885,31,8,0.005807,0,13,79),(2886,31,8,0.009156,0,26,79),(2887,31,8,0.009178,0,8,79),(2888,31,8,20.081175,0,39,21),(2889,31,8,25.704747,0,39,22),(2890,31,8,0.003578,0,27,57),(2891,31,8,16.036309,0,42,8),(2892,31,8,23.904732,0,42,2),(2893,31,8,5.206174,0,42,6),(2894,31,8,4.210844,0,42,4),(2895,31,8,17.002307,0,42,10),(2896,31,8,0,0,42,9),(2897,31,8,17.12371,0,42,5),(2898,31,8,4.796681,0,42,3),(2899,31,8,29.736583,0,42,7),(2900,31,8,0.010424,0,13,33),(2901,31,8,0.040497,0,14,33),(2902,31,8,0.183509,0,13,33),(2903,31,8,40.883257,0,5,33),(2904,31,8,119.199232,0,15,33),(2905,31,8,181.347743,0,17,33),(2906,31,8,0,0,20,33),(2907,31,8,4791.144452,0,12,33),(2908,31,8,5975.6331,0,33,33),(2909,31,8,8313.897145,0,16,33),(2910,31,8,0,0,13,99),(2911,31,8,0,0,14,99),(2912,31,8,0,0,13,99),(2913,31,8,0,0,5,99),(2914,31,8,0,0,15,99),(2915,31,8,0,0,17,99),(2916,31,8,0,0,20,99),(2917,31,8,0,0,12,99),(2918,31,8,0,0,33,99),(2919,31,8,0,0,16,99),(2920,31,8,0.005748,0,13,102),(2921,31,8,0.014389,0,14,102),(2922,31,8,0.045541,0,13,102),(2923,31,8,18.422054,0,5,102),(2924,31,8,13.183446,0,15,102),(2925,31,8,15.021953,0,17,102),(2926,31,8,1242.078432,0,20,102),(2927,31,8,3626.16033,0,12,102),(2928,31,8,1338.67577,0,33,102),(2929,31,8,5249.147091,0,16,102),(2930,31,8,0.007012,0,13,85),(2931,31,8,0.015558,0,14,85),(2932,31,8,0.045404,0,13,85),(2933,31,8,18.410061,0,5,85),(2934,31,8,13.220751,0,15,85),(2935,31,8,15.021304,0,17,85),(2936,31,8,1242.106764,0,20,85),(2937,31,8,3622.352339,0,12,85),(2938,31,8,1325.772148,0,33,85),(2939,31,8,5251.164906,0,16,85),(2940,31,8,0.00473,0,13,101),(2941,31,8,0.013744,0,14,101),(2942,31,8,0.0431,0,13,101),(2943,31,8,15.742739,0,5,101),(2944,31,8,11.149036,0,15,101),(2945,31,8,14.318918,0,17,101),(2946,31,8,955.345077,0,20,101),(2947,31,8,3303.890018,0,12,101),(2948,31,8,1140.292291,0,33,101),(2949,31,8,5065.679534,0,16,101),(2950,31,8,0.001233,0,13,103),(2951,31,8,0.015668,0,14,103),(2952,31,8,0.04866,0,13,103),(2953,31,8,24.025105,0,5,103),(2954,31,8,9.022407,0,15,103),(2955,31,8,16.003649,0,17,103),(2956,31,8,281.29169,0,20,103),(2957,31,8,4745.375578,0,12,103),(2958,31,8,747.231309,0,33,103),(2959,31,8,7058.380115,0,16,103),(2960,31,8,0.008461,0,13,35),(2961,31,8,0.01691,0,14,35),(2962,31,8,0.043218,0,13,35),(2963,31,8,18.987071,0,5,35),(2964,31,8,14.103569,0,15,35),(2965,31,8,16.169236,0,17,35),(2966,31,8,1328.252288,0,20,35),(2967,31,8,3705.982463,0,12,35),(2968,31,8,1401.546079,0,33,35),(2969,31,8,5270.709676,0,16,35),(2970,31,8,0.006307,0,13,34),(2971,31,8,0.014711,0,14,34),(2972,31,8,0.040966,0,13,34),(2973,31,8,16.984893,0,5,34),(2974,31,8,12.172269,0,15,34),(2975,31,8,14.712963,0,17,34),(2976,31,8,1117.483381,0,20,34),(2977,31,8,3462.683229,0,12,34),(2978,31,8,1229.239573,0,33,34),(2979,31,8,5160.262103,0,16,34),(2980,31,8,0.005592,0,13,100),(2981,31,8,0.014735,0,14,100),(2982,31,8,0.036806,0,13,100),(2983,31,8,12.725808,0,5,100),(2984,31,8,8.971458,0,15,100),(2985,31,8,13.435794,0,17,100),(2986,31,8,566.252258,0,20,100),(2987,31,8,2865.738819,0,12,100),(2988,31,8,935.733381,0,33,100),(2989,31,8,4751.574898,0,16,100),(2990,31,8,0.004522,0,13,104),(2991,31,8,0.01344,0,14,104),(2992,31,8,0.043155,0,13,104),(2993,31,8,13.633614,0,5,104),(2994,31,8,9.604399,0,15,104),(2995,31,8,13.697141,0,17,104),(2996,31,8,665.628597,0,20,104),(2997,31,8,3004.920215,0,12,104),(2998,31,8,996.182395,0,33,104),(2999,31,8,4861.250589,0,16,104),(3000,31,8,0.002659,0,13,32),(3001,31,8,0.063784,0,14,32),(3002,31,8,0.335347,0,13,32),(3003,31,8,46.354178,0,5,32),(3004,31,8,187.137602,0,15,32),(3005,31,8,327.019575,0,17,32),(3006,31,8,0,0,20,32),(3007,31,8,5820.04085,0,12,32),(3008,31,8,0,0,33,32),(3009,31,8,8806.47661,0,16,32),(3010,31,8,0.004555,0,13,90),(3011,31,8,0.014381,0,14,90),(3012,31,8,0.043209,0,13,90),(3013,31,8,14.618657,0,5,90),(3014,31,8,10.378549,0,15,90),(3015,31,8,14.00476,0,17,90),(3016,31,8,798.621386,0,20,90),(3017,31,8,3150.831731,0,12,90),(3018,31,8,1063.183744,0,33,90),(3019,31,8,4964.627798,0,16,90),(3020,31,8,4.423315,0,5,48),(3021,31,8,61.348169,0,12,51),(3022,31,8,1.922785,0,15,51),(3023,31,8,1544.899716,0,20,47),(3024,31,8,31.531933,0,17,46),(3025,31,8,0.053148,0,13,46),(3026,31,8,0.011683,0,38,49),(3027,31,8,0.005522,0,40,50),(3028,31,8,0.006481,0,14,52),(3029,31,8,0.000103,0,13,53),(3030,31,8,0.00008,0,1,53),(3031,31,8,0.005558,0,27,61),(3032,31,8,0.002143,0,1,77),(3033,31,8,0.026813,0,44,77),(3034,31,8,20.208788,0,38,77),(3035,31,8,43.929329,0,15,77),(3036,31,8,142.910118,0,5,77),(3037,31,8,0,0,16,77),(3038,31,8,0,0,1,78),(3039,31,8,0,0,44,78),(3040,31,8,0,0,38,78),(3041,31,8,4.612309,0,28,17),(3042,31,8,0.277142,0,41,17),(3043,31,8,135.513773,0,42,17),(3044,31,8,0.532891,0,38,17),(3045,31,8,16.702212,0,19,17),(3046,31,8,4.409959,0,39,17),(3047,31,8,1592.831371,0,5,17),(3048,31,8,0,0,12,17),(3049,31,8,0,0,16,17),(3050,31,8,604.039397,0,34,17),(3051,31,8,11.459677,0,28,18),(3052,31,8,0.853005,0,41,18),(3053,31,8,411.462548,0,42,18),(3054,31,8,301.166279,0,38,18),(3055,31,8,82.831418,0,19,18),(3056,31,8,35.955139,0,39,18),(3057,31,8,0,0,5,18),(3058,31,8,0,0,12,18),(3059,31,8,0,0,16,18),(3060,31,8,0,0,34,18),(3061,31,8,0.094004,0,28,19),(3062,31,8,0.04798,0,41,19),(3063,31,8,1.093847,0,42,19),(3064,31,8,0.321301,0,38,19),(3065,31,8,8.457629,0,19,19),(3066,31,8,5.83418,0,39,19),(3067,31,8,48.758964,0,5,19),(3068,31,8,65.955943,0,12,19),(3069,31,8,51.718574,0,16,19),(3070,31,8,282.823339,0,34,19),(3071,31,8,0.000643,0,13,55),(3072,31,8,0.001424,0,28,55),(3073,31,8,0.002963,0,14,55),(3074,31,8,0.001844,0,44,55),(3075,31,8,0.064529,0,11,55),(3076,31,8,0.050918,0,10,55),(3077,31,8,1.049582,0,15,55),(3078,31,8,0.49819,0,5,55),(3079,31,8,5.204162,0,17,55),(3080,31,8,56.421777,0,33,55),(3081,31,8,0.000519,0,13,56),(3082,31,8,0.000506,0,28,56),(3083,31,8,0.000491,0,14,56),(3084,31,8,0.000493,0,44,56),(3085,31,8,0.001092,0,11,56),(3086,31,8,0.001098,0,10,56),(3087,31,8,0.000586,0,15,56),(3088,31,8,0.003216,0,5,56),(3089,31,8,0.01436,0,17,56),(3090,31,8,0.019677,0,33,56),(3091,31,8,0,0,13,54),(3092,31,8,0,0,28,54),(3093,31,8,0,0,14,54),(3094,31,8,0,0,44,54),(3095,31,8,0,0,11,54),(3096,31,8,0,0,10,54),(3097,31,8,0,0,15,54),(3098,31,8,0,0,5,54),(3099,31,8,0,0,17,54),(3100,31,8,0,0,33,54),(3101,31,8,0.000262,0,8,28),(3102,31,8,0.483837,0,9,28),(3103,31,8,9.119592,0,10,28),(3104,31,8,2.198332,0,11,28),(3105,31,8,0.000471,0,8,27),(3106,31,8,0.557353,0,9,27),(3107,31,8,9.299098,0,10,27),(3108,31,8,13.535498,0,11,27),(3109,31,8,0.013485,0,35,67),(3110,31,8,0.006608,0,36,67),(3111,31,8,0.017379,0,37,67),(3112,31,8,0.017549,0,29,67),(3113,31,8,0.30438,0,38,67),(3114,31,8,7.291209,0,19,67),(3115,31,8,0,0,10,67),(3116,31,8,21.602448,0,11,67),(3117,31,8,1462.474552,0,39,67),(3118,31,8,102.956459,0,5,67),(3119,31,8,44.30448,0,17,67),(3120,31,8,0.004348,0,35,72),(3121,31,8,0.005954,0,36,72),(3122,31,8,0.01512,0,37,72),(3123,31,8,0.012907,0,29,72),(3124,31,8,0.133476,0,38,72),(3125,31,8,4.00687,0,19,72),(3126,31,8,0,0,10,72),(3127,31,8,9.114264,0,11,72),(3128,31,8,7271.891498,0,39,72),(3129,31,8,68.539758,0,5,72),(3130,31,8,226.883938,0,17,72),(3131,31,8,0.0199,0,35,70),(3132,31,8,2.998956,0,36,70),(3133,31,8,255.739509,0,37,70),(3134,31,8,76.777202,0,29,70),(3135,31,8,436.513619,0,38,70),(3136,31,8,0,0,19,70),(3137,31,8,0.109399,0,10,70),(3138,31,8,30.05567,0,11,70),(3139,31,8,0.303504,0,39,70),(3140,31,8,1673.068467,0,5,70),(3141,31,8,0,0,17,70),(3142,31,8,0.035676,0,35,71),(3143,31,8,3.008145,0,36,71),(3144,31,8,255.822681,0,37,71),(3145,31,8,76.865847,0,29,71),(3146,31,8,446.710281,0,38,71),(3147,31,8,0,0,19,71),(3148,31,8,0.824024,0,10,71),(3149,31,8,49.351311,0,11,71),(3150,31,8,3.214191,0,39,71),(3151,31,8,1806.289195,0,5,71),(3152,31,8,0,0,17,71),(3153,31,8,0.04128,0,35,73),(3154,31,8,3.639197,0,36,73),(3155,31,8,294.179044,0,37,73),(3156,31,8,89.459871,0,29,73),(3157,31,8,505.916012,0,38,73),(3158,31,8,0,0,19,73),(3159,31,8,0.078701,0,10,73),(3160,31,8,29.788637,0,11,73),(3161,31,8,0.253563,0,39,73),(3162,31,8,1902.587452,0,5,73),(3163,31,8,0,0,17,73),(3164,31,8,0.027562,0,35,65),(3165,31,8,0.010404,0,36,65),(3166,31,8,0.008514,0,37,65),(3167,31,8,0.008421,0,29,65),(3168,31,8,0.064281,0,38,65),(3169,31,8,1.501521,0,19,65),(3170,31,8,0,0,10,65),(3171,31,8,5.124987,0,11,65),(3172,31,8,899.909837,0,39,65),(3173,31,8,37.774393,0,5,65),(3174,31,8,10.71571,0,17,65),(3175,31,8,0.007345,0,35,64),(3176,31,8,0.001732,0,36,64),(3177,31,8,0.010138,0,37,64),(3178,31,8,0.009278,0,29,64),(3179,31,8,0.230087,0,38,64),(3180,31,8,4.529662,0,19,64),(3181,31,8,0,0,10,64),(3182,31,8,17.190816,0,11,64),(3183,31,8,2919.841367,0,39,64),(3184,31,8,60.679928,0,5,64),(3185,31,8,27.243222,0,17,64),(3186,31,8,0.013363,0,35,66),(3187,31,8,0.009597,0,36,66),(3188,31,8,0.009478,0,37,66),(3189,31,8,0.009419,0,29,66),(3190,31,8,0.05963,0,38,66),(3191,31,8,2.112986,0,19,66),(3192,31,8,0,0,10,66),(3193,31,8,4.777132,0,11,66),(3194,31,8,922.169777,0,39,66),(3195,31,8,36.554932,0,5,66),(3196,31,8,14.708713,0,17,66),(3197,31,8,0.00474,0,35,69),(3198,31,8,0.007335,0,36,69),(3199,31,8,0.012587,0,37,69),(3200,31,8,0.0134,0,29,69),(3201,31,8,0.132501,0,38,69),(3202,31,8,3.312198,0,19,69),(3203,31,8,0,0,10,69),(3204,31,8,9.511072,0,11,69),(3205,31,8,946.817347,0,39,69),(3206,31,8,69.598817,0,5,69),(3207,31,8,24.69284,0,17,69),(3208,31,8,0.02338,0,35,63),(3209,31,8,2.61617,0,36,63),(3210,31,8,255.567183,0,37,63),(3211,31,8,68.404201,0,29,63),(3212,31,8,437.214649,0,38,63),(3213,31,8,0,0,19,63),(3214,31,8,0.125274,0,10,63),(3215,31,8,26.751275,0,11,63),(3216,31,8,0.289886,0,39,63),(3217,31,8,2559.834656,0,5,63),(3218,31,8,0,0,17,63),(3219,31,8,0.021491,0,35,74),(3220,31,8,3.000727,0,36,74),(3221,31,8,255.490581,0,37,74),(3222,31,8,76.728756,0,29,74),(3223,31,8,436.575806,0,38,74),(3224,31,8,0,0,19,74),(3225,31,8,0.114421,0,10,74),(3226,31,8,30.027658,0,11,74),(3227,31,8,0.300019,0,39,74),(3228,31,8,1672.300608,0,5,74),(3229,31,8,0,0,17,74),(3230,31,8,0.038949,0,35,68),(3231,31,8,3.666183,0,36,68),(3232,31,8,259.432408,0,37,68),(3233,31,8,87.910571,0,29,68),(3234,31,8,466.479414,0,38,68),(3235,31,8,0,0,19,68),(3236,31,8,0.105148,0,10,68),(3237,31,8,29.721236,0,11,68),(3238,31,8,0.24171,0,39,68),(3239,31,8,1706.892154,0,5,68),(3240,31,8,0,0,17,68),(3241,31,8,0,0,13,39),(3242,31,8,0,0,14,39),(3243,31,8,0,0,13,39),(3244,31,8,0,0,5,39),(3245,31,8,0,0,15,39),(3246,31,8,0,0,17,39),(3247,31,8,0,0,20,39),(3248,31,8,0,0,12,39),(3249,31,8,0,0,33,39),(3250,31,8,0,0,16,39),(3251,31,8,0.036102,0,13,40),(3252,31,8,0.035467,0,14,40),(3253,31,8,0.094757,0,13,40),(3254,31,8,1.065429,0,5,40),(3255,31,8,6.928684,0,15,40),(3256,31,8,403.713218,0,17,40),(3257,31,8,1349.274842,0,20,40),(3258,31,8,64.595613,0,12,40),(3259,31,8,203.659168,0,33,40),(3260,31,8,49.880446,0,16,40),(3261,31,8,0.010317,0,13,36),(3262,31,8,0.022706,0,14,36),(3263,31,8,0.112225,0,13,36),(3264,31,8,0.961194,0,5,36),(3265,31,8,7.380764,0,15,36),(3266,31,8,465.167223,0,17,36),(3267,31,8,1366.131908,0,20,36),(3268,31,8,63.750385,0,12,36),(3269,31,8,455.033127,0,33,36),(3270,31,8,59.962588,0,16,36),(3271,31,8,0.006538,0,13,37),(3272,31,8,0.032068,0,14,37),(3273,31,8,0.105338,0,13,37),(3274,31,8,0.961987,0,5,37),(3275,31,8,7.401603,0,15,37),(3276,31,8,465.364485,0,17,37),(3277,31,8,1365.512644,0,20,37),(3278,31,8,63.833882,0,12,37),(3279,31,8,455.100279,0,33,37),(3280,31,8,60.081785,0,16,37),(3281,31,8,0,0,13,38),(3282,31,8,0,0,14,38),(3283,31,8,0,0,13,38),(3284,31,8,0,0,5,38),(3285,31,8,0,0,15,38),(3286,31,8,0,0,17,38),(3287,31,8,0,0,20,38),(3288,31,8,0,0,12,38),(3289,31,8,0,0,33,38),(3290,31,8,0,0,16,38),(3291,31,8,0.097646,0,1,13),(3292,31,8,0.684596,0,8,13),(3293,31,8,0.342454,0,13,13),(3294,31,8,4.800564,0,28,13),(3295,31,8,790.99735,0,31,13),(3296,31,8,8374.19312,0,11,13),(3297,31,8,0,0,10,13),(3298,31,8,0,0,11,13),(3299,31,8,0,0,15,13),(3300,31,8,0,0,5,13),(3301,31,8,0,0,17,13),(3302,31,8,0,0,20,13),(3303,31,8,0,0,12,13),(3304,31,8,0,0,33,13),(3305,31,8,0,0,16,13),(3306,31,8,0,0,34,13),(3307,31,8,0.169525,0,1,12),(3308,31,8,2.497011,0,8,12),(3309,31,8,0.534963,0,13,12),(3310,31,8,6.790737,0,28,12),(3311,31,8,0,0,31,12),(3312,31,8,0,0,11,12),(3313,31,8,0,0,10,12),(3314,31,8,0,0,11,12),(3315,31,8,0,0,15,12),(3316,31,8,0,0,5,12),(3317,31,8,0,0,17,12),(3318,31,8,0,0,20,12),(3319,31,8,0,0,12,12),(3320,31,8,0,0,33,12),(3321,31,8,0,0,16,12),(3322,31,8,0,0,34,12),(3323,31,8,0.15349,0,1,16),(3324,31,8,6.108617,0,8,16),(3325,31,8,0.555172,0,13,16),(3326,31,8,14.488538,0,28,16),(3327,31,8,0,0,31,16),(3328,31,8,0,0,11,16),(3329,31,8,0,0,10,16),(3330,31,8,0,0,11,16),(3331,31,8,0,0,15,16),(3332,31,8,0,0,5,16),(3333,31,8,0,0,17,16),(3334,31,8,0,0,20,16),(3335,31,8,0,0,12,16),(3336,31,8,0,0,33,16),(3337,31,8,0,0,16,16),(3338,31,8,0,0,34,16),(3339,31,8,0.152753,0,1,11),(3340,31,8,6.10151,0,8,11),(3341,31,8,0.551937,0,13,11),(3342,31,8,14.475914,0,28,11),(3343,31,8,0,0,31,11),(3344,31,8,0,0,11,11),(3345,31,8,0,0,10,11),(3346,31,8,0,0,11,11),(3347,31,8,0,0,15,11),(3348,31,8,0,0,5,11),(3349,31,8,0,0,17,11),(3350,31,8,0,0,20,11),(3351,31,8,0,0,12,11),(3352,31,8,0,0,33,11),(3353,31,8,0,0,16,11),(3354,31,8,0,0,34,11),(3355,31,8,0.100163,0,1,15),(3356,31,8,0.681889,0,8,15),(3357,31,8,0.34652,0,13,15),(3358,31,8,4.817093,0,28,15),(3359,31,8,789.355234,0,31,15),(3360,31,8,8123.630775,0,11,15),(3361,31,8,0,0,10,15),(3362,31,8,0,0,11,15),(3363,31,8,0,0,15,15),(3364,31,8,0,0,5,15),(3365,31,8,0,0,17,15),(3366,31,8,0,0,20,15),(3367,31,8,0,0,12,15),(3368,31,8,0,0,33,15),(3369,31,8,0,0,16,15),(3370,31,8,0,0,34,15),(3371,31,8,0.16119,0,1,14),(3372,31,8,2.51843,0,8,14),(3373,31,8,0.530748,0,13,14),(3374,31,8,6.810792,0,28,14),(3375,31,8,0,0,31,14),(3376,31,8,0,0,11,14),(3377,31,8,0,0,13,86),(3378,31,8,0,0,14,86),(3379,31,8,0,0,13,86),(3380,31,8,0,0,5,86),(3381,31,8,0,0,15,86),(3382,31,8,0,0,17,86),(3383,31,8,0,0,20,86),(3384,31,8,0,0,12,86),(3385,31,8,0,0,33,86),(3386,31,8,0,0,16,86),(3387,31,8,0.000948,0,13,88),(3388,31,8,0.011007,0,14,88),(3389,31,8,0.023306,0,13,88),(3390,31,8,24.692499,0,5,88),(3391,31,8,9.663378,0,15,88),(3392,31,8,12.110268,0,17,88),(3393,31,8,5773.086365,0,20,88),(3394,31,8,3835.493001,0,12,88),(3395,31,8,56.649733,0,33,88),(3396,31,8,3519.074913,0,16,88),(3397,31,8,0,0,13,87),(3398,31,8,0,0,14,87),(3399,31,8,0,0,13,87),(3400,31,8,0,0,5,87),(3401,31,8,0,0,15,87),(3402,31,8,0,0,17,87),(3403,31,8,0,0,20,87),(3404,31,8,0,0,12,87),(3405,31,8,0,0,33,87),(3406,31,8,0,0,16,87),(3407,31,8,0.005553,0,1,83),(3408,31,8,0.138643,0,14,83),(3409,31,8,5.920143,0,11,83),(3410,31,8,0.003352,0,1,84),(3411,31,8,0.199036,0,14,84),(3412,31,8,8.434377,0,11,84),(3413,31,8,0.011285,0,1,95),(3414,31,8,0.013139,0,43,95),(3415,31,8,1.202272,0,11,95),(3416,31,8,0.000411,0,1,96),(3417,31,8,0.004555,0,43,96),(3418,31,8,1.20079,0,11,96),(3419,31,8,1.843295,0,27,76),(3420,31,8,0.17026,0,27,75),(3421,31,8,0.17193,0,1,24),(3422,31,8,1.435062,0,2,24),(3423,31,8,14.005828,0,3,24),(3424,31,8,211.278155,0,4,24),(3425,31,8,2.115202,0,5,24),(3426,31,8,7.793308,0,6,24),(3427,31,8,2.42939,0,7,24),(3428,31,8,3.208536,0,21,24),(3429,31,8,4.504318,0,22,24),(3430,31,8,3.455249,0,23,24),(3431,31,8,8.627377,0,24,24),(3432,31,8,0.254443,0,25,24),(3433,31,8,0.012317,0,8,29),(3434,31,8,0.132459,0,9,29),(3435,31,8,0,0,12,29),(3436,31,8,0,0,16,29),(3437,31,8,8.988011,0,18,29),(3438,31,8,239.499489,0,19,29),(3439,31,8,5.916705,0,11,29),(3440,31,8,0.418863,0,10,29),(3441,31,8,0.006091,0,13,25),(3442,31,8,0.039239,0,14,25),(3443,31,8,0.123073,0,13,25),(3444,31,8,2.497063,0,5,25),(3445,31,8,14.291663,0,15,25),(3446,31,8,201.946753,0,17,25),(3447,31,8,315.053627,0,20,25),(3448,31,8,38.229696,0,12,25),(3449,31,8,300.22053,0,33,25),(3450,31,8,56.032183,0,16,25),(3451,33,6,0.000626,0,1,95),(3452,33,6,0.000792,0,43,95),(3453,33,6,0.165397,0,11,95),(3454,33,6,0,0,8,29),(3455,33,6,-2,0,9,29),(3456,33,6,-2,0,12,29),(3457,33,6,0,0,16,29),(3458,33,6,0,0,18,29),(3459,33,6,0,0,19,29),(3460,33,6,-2,0,11,29),(3461,33,6,-2,0,10,29),(3462,33,6,0.021972,0,35,74),(3463,33,6,3.257387,0,36,74),(3464,33,6,274.425449,0,37,74),(3465,33,6,-1,0,29,74),(3466,33,6,467.58882,0,38,74),(3467,33,6,-1,0,19,74),(3468,33,6,3.399761,0,10,74),(3469,33,6,37.056553,0,11,74),(3470,33,6,12.093034,0,39,74),(3471,33,6,2001.202437,0,5,74),(3472,33,6,-2,0,17,74),(3473,33,6,0.021292,0,35,63),(3474,33,6,1.133473,0,36,63),(3475,33,6,255.478524,0,37,63),(3476,33,6,-1,0,29,63),(3477,33,6,275.218424,0,38,63),(3478,33,6,-1,0,19,63),(3479,33,6,5.183626,0,10,63),(3480,33,6,22.721684,0,11,63),(3481,33,6,15.190582,0,39,63),(3482,33,6,2378.131243,0,5,63),(3483,33,6,-2,0,17,63),(3484,33,6,0.018212,0,35,68),(3485,33,6,3.565179,0,36,68),(3486,33,6,207.90353,0,37,68),(3487,33,6,-1,0,29,68),(3488,33,6,402.829652,0,38,68),(3489,33,6,-1,0,19,68),(3490,33,6,5.050147,0,10,68),(3491,33,6,28.01882,0,11,68),(3492,33,6,14.232236,0,39,68),(3493,33,6,1783.549031,0,5,68),(3494,33,6,-2,0,17,68),(3495,33,6,0.02751,0,35,70),(3496,33,6,3.471058,0,36,70),(3497,33,6,282.600478,0,37,70),(3498,33,6,-1,0,29,70),(3499,33,6,469.415534,0,38,70),(3500,33,6,-1,0,19,70),(3501,33,6,5.10572,0,10,70),(3502,33,6,38.028983,0,11,70),(3503,33,6,15.236959,0,39,70),(3504,33,6,2010.160829,0,5,70),(3505,33,6,-2,0,17,70),(3506,33,6,-2,0,1,98),(3507,33,6,-2,0,2,98),(3508,33,6,-2,0,3,98),(3509,33,6,-2,0,4,98),(3510,33,6,-2,0,5,98),(3511,33,6,-2,0,6,98),(3512,33,6,-2,0,7,98),(3513,33,6,-2,0,21,98),(3514,33,6,-2,0,22,98),(3515,33,6,-2,0,23,98),(3516,33,6,-2,0,24,98),(3517,33,6,-2,0,25,98),(3518,33,6,0,0,8,26),(3519,33,6,0,0,9,26),(3520,33,6,0,0,19,26),(3521,33,6,0.012772,0,1,79),(3522,33,6,0.000684,0,13,79),(3523,33,6,0.000723,0,26,79),(3524,33,6,0.000736,0,8,79),(3525,33,6,-2,0,27,79),(3526,33,6,0.001455,0,28,79),(3527,33,6,0.003562,0,29,79),(3528,33,6,0.008443,0,30,79),(3529,33,6,0.015675,0,31,79),(3530,33,6,0.095019,0,32,79),(3531,33,6,-2,0,10,79),(3532,33,6,0.352864,0,11,79),(3533,33,6,0.130754,0,15,79),(3534,33,6,1.072372,0,5,79),(3535,33,6,2.360194,0,17,79),(3536,33,6,0.42311,0,20,79),(3537,33,6,10.134094,0,12,79),(3538,33,6,2.968676,0,33,79),(3539,33,6,3.738125,0,16,79),(3540,33,6,3.080679,0,34,79),(3541,33,6,0.00066,0,1,81),(3542,33,6,0.000735,0,13,81),(3543,33,6,0.000741,0,26,81),(3544,33,6,0.000754,0,8,81),(3545,33,6,0.001621,0,27,81),(3546,33,6,0.001226,0,28,81),(3547,33,6,0.002808,0,29,81),(3548,33,6,0.005636,0,30,81),(3549,33,6,0.010967,0,31,81),(3550,33,6,0.073931,0,32,81),(3551,33,6,0.839239,0,10,81),(3552,33,6,0.298986,0,11,81),(3553,33,6,0.088992,0,15,81),(3554,33,6,0.798829,0,5,81),(3555,33,6,1.512157,0,17,81),(3556,33,6,0.30783,0,20,81),(3557,33,6,5.999317,0,12,81),(3558,33,6,1.964213,0,33,81),(3559,33,6,2.355127,0,16,81),(3560,33,6,2.060161,0,34,81),(3561,33,6,0.000684,0,1,80),(3562,33,6,0.00075,0,13,80),(3563,33,6,0.000755,0,26,80),(3564,33,6,0.000781,0,8,80),(3565,33,6,0.001707,0,27,80),(3566,33,6,0.001231,0,28,80),(3567,33,6,0.002736,0,29,80),(3568,33,6,0.005632,0,30,80),(3569,33,6,0.010932,0,31,80),(3570,33,6,0.073719,0,32,80),(3571,33,6,0.785605,0,10,80),(3572,33,6,0.300508,0,11,80),(3573,33,6,0.089338,0,15,80),(3574,33,6,0.797291,0,5,80),(3575,33,6,1.503006,0,17,80),(3576,33,6,0.307652,0,20,80),(3577,33,6,6.005852,0,12,80),(3578,33,6,1.953983,0,33,80),(3579,33,6,2.351513,0,16,80),(3580,33,6,2.05255,0,34,80),(3581,33,6,0.020763,0,40,50),(3582,33,6,0.010808,0,14,52),(3583,33,6,16.006616,0,17,46),(3584,33,6,0.06471,0,13,46),(3585,33,6,16.023046,0,12,51),(3586,33,6,1.110776,0,15,51),(3587,33,6,0.001747,0,13,53),(3588,33,6,0.001184,0,1,53),(3589,33,6,1.062957,0,5,48),(3590,33,6,-2,0,20,47),(3591,33,6,0.013492,0,38,49),(3592,33,6,0.002424,0,27,92),(3593,33,6,0.003023,0,27,92),(3594,33,6,0.001577,0,1,92),(3595,33,6,0.001954,0,13,92),(3596,33,6,0.006415,0,44,92),(3597,33,6,-2,0,40,92),(3598,33,6,-2,0,42,92),(3599,33,6,-2,0,5,92),(3600,33,6,-2,0,19,92),(3601,33,6,-2,0,17,92),(3602,33,6,0,0,8,94),(3603,33,6,0,0,9,94),(3604,33,6,0,0,10,94),(3605,33,6,0,0,11,94),(3606,33,6,-2,0,1,24),(3607,33,6,-2,0,42,24),(3608,33,6,-2,0,11,24),(3609,33,6,-2,0,10,24),(3610,33,6,0.009811,0,13,89),(3611,33,6,-2,0,14,89),(3612,33,6,7.918223,0,13,89),(3613,33,6,77.468553,0,5,89),(3614,33,6,-2,0,15,89),(3615,33,6,-1,0,17,89),(3616,33,6,-2,0,20,89),(3617,33,6,7808.962053,0,12,89),(3618,33,6,-2,0,33,89),(3619,33,6,-2,0,16,89),(3620,33,6,0.010751,0,2,62),(3621,33,6,1.00755,0,3,62),(3622,33,6,3.670514,0,4,62),(3623,33,6,18.806765,0,5,62),(3624,33,6,0.003846,0,6,62),(3625,33,6,-1,0,7,62),(3626,33,6,0.002002,0,21,62),(3627,33,6,0.007648,0,22,62),(3628,33,6,0.001972,0,23,62),(3629,33,6,0.012537,0,24,62),(3630,33,6,0.000374,0,25,62),(3631,33,6,0,0,22,58),(3632,33,6,-1,0,4,58),(3633,33,6,0,0,25,59),(3634,33,6,0,0,6,59),(3635,33,6,0,0,23,60),(3636,33,6,0,0,21,60),(3637,34,1,-2,0,1,24),(3638,34,1,-2,0,2,24),(3639,34,1,-2,0,3,24),(3640,34,1,-2,0,4,24),(3641,34,1,-2,0,5,24),(3642,34,1,-2,0,6,24),(3643,34,1,-2,0,7,24),(3644,34,1,-2,0,21,24),(3645,34,1,-2,0,22,24),(3646,34,1,-2,0,23,24),(3647,34,1,-2,0,24,24),(3648,34,1,-2,0,25,24),(3649,34,1,0.09961,0,1,97),(3650,34,1,-2,0,2,97),(3651,34,1,0,0,3,97),(3652,34,1,0,0,4,97),(3653,34,1,0,0,5,97),(3654,34,1,0,0,6,97),(3655,34,1,-2,0,7,97),(3656,34,1,0,0,21,97),(3657,34,1,-2,0,22,97),(3658,34,1,0,0,23,97),(3659,34,1,0,0,24,97),(3660,34,1,0,0,25,97),(3661,34,1,0.004944,0,13,89),(3662,34,1,0.514275,0,14,89),(3663,34,1,5.908991,0,13,89),(3664,34,1,61.537444,0,5,89),(3665,34,1,-2,0,15,89),(3666,35,2,0.008489,0,1,95),(3667,35,2,0.002228,0,43,95),(3668,35,2,0.015183,0,11,95),(3669,35,2,0.087871,0,1,1),(3670,35,2,0.219414,0,2,1),(3671,35,2,3.746152,0,3,1),(3672,35,2,7.601966,0,4,1),(3673,35,2,21.661341,0,5,1),(3674,35,2,0.406837,0,6,1),(3675,35,2,138.943217,0,7,1),(3676,35,2,0.237944,0,21,1),(3677,35,2,0.214238,0,22,1),(3678,35,2,0.238168,0,23,1),(3679,35,2,0.615442,0,24,1),(3680,35,2,0.086751,0,25,1),(3681,35,2,0.014595,0,1,23),(3682,35,2,0.01151,0,2,23),(3683,35,2,0.75114,0,3,23),(3684,35,2,9.907419,0,4,23),(3685,35,2,9.711347,0,5,23),(3686,35,2,0.007889,0,6,23),(3687,34,1,-1,0,17,89),(3688,35,2,2602.279732,0,7,23),(3689,35,2,0.005676,0,21,23),(3690,35,2,0.022316,0,22,23),(3691,35,2,0.005686,0,23,23),(3692,35,2,0.034706,0,24,23),(3693,35,2,0.002398,0,25,23),(3694,35,2,0.080254,0,1,31),(3695,35,2,0.156082,0,2,31),(3696,35,2,1.281015,0,3,31),(3697,35,2,10.069514,0,4,31),(3698,35,2,3.653343,0,5,31),(3699,35,2,0.484027,0,6,31),(3700,35,2,19.412842,0,7,31),(3701,35,2,0.190204,0,21,31),(3702,35,2,0.175304,0,22,31),(3703,35,2,0.277632,0,23,31),(3704,35,2,0.499118,0,24,31),(3705,35,2,0.081297,0,25,31),(3706,35,2,-2,0,28,20),(3707,35,2,0.405442,0,41,20),(3708,35,2,2.780042,0,42,20),(3709,35,2,-2,0,38,20),(3710,35,2,679.095823,0,19,20),(3711,35,2,7.978148,0,39,20),(3712,35,2,-2,0,5,20),(3713,34,1,-1,0,20,89),(3714,34,1,-2,0,12,89),(3715,35,2,3292.303975,0,12,20),(3716,34,1,-1,0,33,89),(3717,34,1,-2,0,16,89),(3718,34,1,0.027707,0,35,68),(3719,34,1,3.808598,0,36,68),(3720,34,1,265.791627,0,37,68),(3721,35,2,1668.964821,0,16,20),(3722,35,2,-2,0,34,20),(3723,35,2,0.00267,0,1,98),(3724,35,2,0.007832,0,2,98),(3725,35,2,0.856474,0,3,98),(3726,35,2,181.291117,0,4,98),(3727,35,2,21.496167,0,5,98),(3728,35,2,0.12218,0,6,98),(3729,34,1,1969.132743,0,29,68),(3730,34,1,515.807832,0,38,68),(3731,34,1,-2,0,19,68),(3732,34,1,0.312538,0,10,68),(3733,34,1,33.156389,0,11,68),(3734,34,1,0.516558,0,39,68),(3735,35,2,455.391886,0,7,98),(3736,35,2,0.029664,0,21,98),(3737,35,2,0.056139,0,22,98),(3738,35,2,0.028713,0,23,98),(3739,35,2,0.353212,0,24,98),(3740,35,2,0.00268,0,25,98),(3741,35,2,0.011936,0,25,59),(3742,35,2,0.002723,0,6,59),(3743,35,2,0.002239,0,23,60),(3744,35,2,0.002223,0,21,60),(3745,35,2,0.005418,0,22,58),(3746,35,2,1.943502,0,4,58),(3747,35,2,0.020024,0,35,74),(3748,35,2,0.716921,0,36,74),(3749,35,2,1.142609,0,37,74),(3750,35,2,-2,0,29,74),(3751,35,2,96.837391,0,38,74),(3752,35,2,-2,0,19,74),(3753,35,2,0.148107,0,10,74),(3754,35,2,13.233193,0,11,74),(3755,35,2,0.249741,0,39,74),(3756,35,2,451.404491,0,5,74),(3757,35,2,-2,0,17,74),(3758,35,2,0.006719,0,35,70),(3759,35,2,0.722307,0,36,70),(3760,35,2,1.224428,0,37,70),(3761,35,2,-2,0,29,70),(3762,35,2,96.967611,0,38,70),(3763,35,2,-2,0,19,70),(3764,35,2,0.149192,0,10,70),(3765,35,2,13.899282,0,11,70),(3766,35,2,0.28027,0,39,70),(3767,35,2,452.148227,0,5,70),(3768,35,2,-2,0,17,70),(3769,35,2,0.00998,0,35,63),(3770,35,2,0.432923,0,36,63),(3771,35,2,4.62736,0,37,63),(3772,35,2,-2,0,29,63),(3773,35,2,98.137903,0,38,63),(3774,35,2,-2,0,19,63),(3775,35,2,0.143347,0,10,63),(3776,35,2,8.763851,0,11,63),(3777,35,2,0.289747,0,39,63),(3778,34,1,1961.70054,0,5,68),(3779,34,1,-2,0,17,68),(3780,34,1,0.024171,0,35,63),(3781,34,1,2.754551,0,36,63),(3782,35,2,455.175845,0,5,63),(3783,35,2,-2,0,17,63),(3784,35,2,-2,0,20,47),(3785,35,2,0.017759,0,14,52),(3786,35,2,23.318177,0,17,46),(3787,35,2,0.053647,0,13,46),(3788,34,1,263.434657,0,37,63),(3789,35,2,46.130854,0,12,51),(3790,35,2,0.733802,0,15,51),(3791,35,2,0.010559,0,38,49),(3792,35,2,0.010946,0,13,53),(3793,35,2,0.001638,0,1,53),(3794,35,2,0.019423,0,40,50),(3795,35,2,6.578184,0,5,48),(3796,35,2,-2,0,27,92),(3797,35,2,-2,0,27,92),(3798,35,2,-2,0,1,92),(3799,35,2,-2,0,13,92),(3800,35,2,-2,0,44,92),(3801,35,2,-2,0,40,92),(3802,35,2,-2,0,42,92),(3803,35,2,-2,0,5,92),(3804,35,2,-2,0,19,92),(3805,35,2,-2,0,17,92),(3806,35,2,0.021166,0,8,29),(3807,35,2,0.079897,0,9,29),(3808,35,2,69.258851,0,12,29),(3809,35,2,25.207823,0,16,29),(3810,35,2,0.085551,0,18,29),(3811,35,2,0.542263,0,19,29),(3812,35,2,1.002785,0,11,29),(3813,35,2,0.244266,0,10,29),(3814,35,2,0.019778,0,1,45),(3815,35,2,0.016451,0,2,45),(3816,35,2,0.750018,0,3,45),(3817,35,2,5.563559,0,4,45),(3818,35,2,3.452526,0,5,45),(3819,35,2,0.041141,0,6,45),(3820,35,2,35.879797,0,7,45),(3821,35,2,0.009916,0,21,45),(3822,35,2,0.010925,0,22,45),(3823,35,2,0.01809,0,23,45),(3824,35,2,0.063826,0,24,45),(3825,35,2,0.007216,0,25,45),(3826,35,2,0.045895,0,1,82),(3827,35,2,0.120037,0,2,82),(3828,35,2,0.45881,0,3,82),(3829,35,2,24.650284,0,4,82),(3830,35,2,5.322561,0,5,82),(3831,35,2,0.329244,0,6,82),(3832,35,2,61.533051,0,7,82),(3833,35,2,0.03912,0,21,82),(3834,35,2,0.984887,0,22,82),(3835,35,2,0.162652,0,23,82),(3836,35,2,5.181752,0,24,82),(3837,35,2,0.002564,0,25,82),(3838,35,2,0.04349,0,8,27),(3839,35,2,0.532817,0,9,27),(3840,35,2,0.75467,0,10,27),(3841,35,2,0.929702,0,11,27),(3842,35,2,0.004809,0,1,79),(3843,35,2,0.001913,0,13,79),(3844,35,2,0.001834,0,26,79),(3845,35,2,0.002022,0,8,79),(3846,35,2,0.002508,0,27,79),(3847,35,2,0.004932,0,28,79),(3848,35,2,-2,0,29,79),(3849,35,2,0.030367,0,30,79),(3850,35,2,0.043008,0,31,79),(3851,35,2,1.160695,0,32,79),(3852,35,2,0.632306,0,10,79),(3853,35,2,3.417896,0,11,79),(3854,35,2,0.488937,0,15,79),(3855,35,2,17.807498,0,5,79),(3856,35,2,12.442285,0,17,79),(3857,35,2,1.155381,0,20,79),(3858,35,2,259.456935,0,12,79),(3859,35,2,25.637009,0,33,79),(3860,35,2,90.13235,0,16,79),(3861,35,2,28.753971,0,34,79),(3862,35,2,0.001646,0,1,80),(3863,35,2,0.005226,0,13,80),(3864,35,2,0.005469,0,26,80),(3865,35,2,0.002127,0,8,80),(3866,35,2,0.002536,0,27,80),(3867,35,2,0.004672,0,28,80),(3868,35,2,-2,0,29,80),(3869,35,2,0.027394,0,30,80),(3870,35,2,0.040146,0,31,80),(3871,35,2,0.922904,0,32,80),(3872,35,2,0.492942,0,10,80),(3873,35,2,2.777518,0,11,80),(3874,35,2,0.433167,0,15,80),(3875,35,2,13.955179,0,5,80),(3876,35,2,10.936044,0,17,80),(3877,35,2,1.09095,0,20,80),(3878,34,1,1964.813529,0,29,63),(3879,35,2,203.760193,0,12,80),(3880,35,2,21.298103,0,33,80),(3881,35,2,71.209321,0,16,80),(3882,34,1,451.044244,0,38,63),(3883,35,2,23.333283,0,34,80),(3884,35,2,0.001621,0,1,81),(3885,35,2,0.001918,0,13,81),(3886,35,2,0.001845,0,26,81),(3887,35,2,0.002011,0,8,81),(3888,35,2,0.00251,0,27,81),(3889,35,2,0.004615,0,28,81),(3890,35,2,-2,0,29,81),(3891,35,2,0.027087,0,30,81),(3892,35,2,0.039347,0,31,81),(3893,35,2,0.922777,0,32,81),(3894,35,2,0.490541,0,10,81),(3895,35,2,2.776456,0,11,81),(3896,35,2,0.431192,0,15,81),(3897,34,1,-2,0,19,63),(3898,34,1,0.322968,0,10,63),(3899,35,2,13.952906,0,5,81),(3900,34,1,29.098749,0,11,63),(3901,34,1,0.505738,0,39,63),(3902,35,2,10.964109,0,17,81),(3903,35,2,1.07075,0,20,81),(3904,35,2,203.751376,0,12,81),(3905,35,2,21.126554,0,33,81),(3906,35,2,71.194127,0,16,81),(3907,35,2,23.321414,0,34,81),(3908,35,2,0,0,1,97),(3909,35,2,0,0,2,97),(3910,35,2,0,0,3,97),(3911,35,2,0,0,4,97),(3912,35,2,0,0,5,97),(3913,35,2,0,0,6,97),(3914,35,2,0,0,7,97),(3915,35,2,0,0,21,97),(3916,35,2,0,0,22,97),(3917,35,2,0,0,23,97),(3918,35,2,0,0,24,97),(3919,35,2,0,0,25,97),(3920,35,2,0.064496,0,13,89),(3921,35,2,0.017785,0,14,89),(3922,35,2,0.079143,0,13,89),(3923,35,2,49.614858,0,5,89),(3924,35,2,55.501529,0,15,89),(3925,35,2,51.000921,0,17,89),(3926,34,1,1748.090398,0,5,63),(3927,34,1,-2,0,17,63),(3928,34,1,0.019848,0,35,74),(3929,34,1,3.140422,0,36,74),(3930,34,1,263.272247,0,37,74),(3931,35,2,1082.102244,0,20,89),(3932,34,1,1964.209752,0,29,74),(3933,34,1,450.282223,0,38,74),(3934,34,1,-2,0,19,74),(3935,34,1,0.310903,0,10,74),(3936,34,1,32.675935,0,11,74),(3937,34,1,0.507887,0,39,74),(3938,35,2,-1,0,12,89),(3939,34,1,1748.104151,0,5,74),(3940,34,1,-2,0,17,74),(3941,34,1,0.011261,0,8,27),(3942,34,1,1.356935,0,9,27),(3943,34,1,0.846486,0,10,27),(3944,34,1,88.456431,0,11,27),(3945,34,1,0.004781,0,1,23),(3946,34,1,-2,0,2,23),(3947,34,1,0.147857,0,3,23),(3948,34,1,-2,0,4,23),(3949,34,1,2.052819,0,5,23),(3950,34,1,0.002458,0,6,23),(3951,34,1,-2,0,7,23),(3952,34,1,0.011961,0,21,23),(3953,34,1,-2,0,22,23),(3954,34,1,0.001758,0,23,23),(3955,34,1,0.007696,0,24,23),(3956,34,1,0.0063,0,25,23),(3957,34,1,-2,0,1,30),(3958,34,1,0,0,2,30),(3959,34,1,0,0,3,30),(3960,34,1,0,0,4,30),(3961,34,1,0,0,5,30),(3962,34,1,0,0,6,30),(3963,34,1,0,0,7,30),(3964,34,1,0,0,21,30),(3965,34,1,0,0,22,30),(3966,34,1,0,0,23,30),(3967,34,1,0,0,24,30),(3968,34,1,0,0,25,30),(3969,34,1,0.039618,0,8,29),(3970,34,1,0.134472,0,9,29),(3971,34,1,69.149557,0,12,29),(3972,34,1,25.213642,0,16,29),(3973,34,1,0.086479,0,18,29),(3974,34,1,0.531167,0,19,29),(3975,34,1,-2,0,11,29),(3976,34,1,-2,0,10,29),(3977,34,1,0.03145,0,1,82),(3978,34,1,0.020437,0,2,82),(3979,34,1,0.565218,0,3,82),(3980,34,1,7.437716,0,4,82),(3981,34,1,10.880485,0,5,82),(3982,34,1,0.224361,0,6,82),(3983,34,1,2.535007,0,7,82),(3984,34,1,0.041507,0,21,82),(3985,34,1,0.177398,0,22,82),(3986,34,1,0.141213,0,23,82),(3987,34,1,0.650572,0,24,82),(3988,34,1,0.00339,0,25,82),(3989,34,1,0.013467,0,1,98),(3990,34,1,0.032978,0,2,98),(3991,34,1,0.645708,0,3,98),(3992,34,1,146.789368,0,4,98),(3993,34,1,13.650884,0,5,98),(3994,34,1,3.302734,0,6,98),(3995,35,2,4321.754327,0,33,89),(3996,34,1,330.325711,0,7,98),(3997,34,1,0.500669,0,21,98),(3998,34,1,0.375897,0,22,98),(3999,34,1,0.503042,0,23,98),(4000,34,1,1.567048,0,24,98),(4001,34,1,0.00309,0,25,98),(4002,34,1,119.826366,0,12,51),(4003,34,1,3.590037,0,15,51),(4004,34,1,0.007408,0,14,52),(4005,34,1,32.603888,0,17,46),(4006,34,1,0.083934,0,13,46),(4007,34,1,4.005751,0,5,48),(4008,34,1,0.025727,0,38,49),(4009,34,1,0.04468,0,40,50),(4010,34,1,1455.596117,0,20,47),(4011,34,1,0.000207,0,13,53),(4012,34,1,0.000155,0,1,53),(4013,34,1,0.000952,0,1,79),(4014,34,1,0.001305,0,13,79),(4015,34,1,0.001283,0,26,79),(4016,34,1,0.001481,0,8,79),(4017,34,1,-2,0,27,79),(4018,34,1,0.004781,0,28,79),(4019,34,1,-2,0,29,79),(4020,34,1,0.036052,0,30,79),(4021,34,1,0.05364,0,31,79),(4022,34,1,1.228573,0,32,79),(4023,34,1,-2,0,10,79),(4024,34,1,3.536227,0,11,79),(4025,34,1,0.654528,0,15,79),(4026,34,1,18.810255,0,5,79),(4027,34,1,13.929046,0,17,79),(4028,34,1,1.444069,0,20,79),(4029,34,1,267.352301,0,12,79),(4030,34,1,27.42309,0,33,79),(4031,34,1,102.273031,0,16,79),(4032,34,1,31.769179,0,34,79),(4033,34,1,0.001055,0,1,80),(4034,34,1,0.001507,0,13,80),(4035,34,1,0.001442,0,26,80),(4036,34,1,0.001614,0,8,80),(4037,34,1,0.002382,0,27,80),(4038,34,1,0.004672,0,28,80),(4039,34,1,-2,0,29,80),(4040,34,1,0.03128,0,30,80),(4041,34,1,0.04883,0,31,80),(4042,34,1,0.997599,0,32,80),(4043,34,1,0.480152,0,10,80),(4044,34,1,2.903937,0,11,80),(4045,34,1,0.556497,0,15,80),(4046,34,1,14.945471,0,5,80),(4047,34,1,11.783835,0,17,80),(4048,34,1,1.331614,0,20,80),(4049,35,2,-1,0,16,89),(4050,35,2,0.238411,0,1,24),(4051,35,2,0.810928,0,2,24),(4052,35,2,8.201528,0,3,24),(4053,34,1,210.755532,0,12,80),(4054,34,1,22.608244,0,33,80),(4055,35,2,178.088375,0,4,24),(4056,34,1,83.151171,0,16,80),(4057,35,2,54.165483,0,5,24),(4058,35,2,4.034652,0,6,24),(4059,34,1,26.184175,0,34,80),(4060,34,1,0.000957,0,1,81),(4061,34,1,0.001295,0,13,81),(4062,34,1,0.001277,0,26,81),(4063,34,1,0.001439,0,8,81),(4064,34,1,0.001965,0,27,81),(4065,34,1,0.004148,0,28,81),(4066,34,1,-2,0,29,81),(4067,34,1,0.031011,0,30,81),(4068,34,1,0.04859,0,31,81),(4069,34,1,0.990809,0,32,81),(4070,34,1,0.461828,0,10,81),(4071,34,1,2.898746,0,11,81),(4072,34,1,0.55642,0,15,81),(4073,34,1,14.926753,0,5,81),(4074,34,1,11.784166,0,17,81),(4075,34,1,1.330995,0,20,81),(4076,34,1,210.712135,0,12,81),(4077,34,1,22.603587,0,33,81),(4078,34,1,83.148289,0,16,81),(4079,34,1,26.188571,0,34,81),(4080,35,2,1456.040782,0,7,24),(4081,35,2,1.57335,0,21,24),(4082,35,2,2.526156,0,22,24),(4083,35,2,1.791282,0,23,24),(4084,35,2,5.235518,0,24,24),(4085,35,2,0.112682,0,25,24),(4086,35,2,0.001236,0,8,94),(4087,35,2,0.004912,0,9,94),(4088,35,2,1.521148,0,10,94),(4089,35,2,0.112896,0,11,94),(4090,35,2,0.037424,0,8,26),(4091,35,2,0.014104,0,9,26),(4092,35,2,217.43925,0,19,26),(4093,35,2,-2,0,39,44),(4094,35,2,-2,0,39,43),(4095,35,2,-2,0,39,42),(4096,35,2,0.031207,0,1,62),(4097,35,2,0.012532,0,2,62),(4098,35,2,0.852628,0,3,62),(4099,35,2,12.560185,0,4,62),(4100,35,2,11.726355,0,5,62),(4101,35,2,0.006912,0,6,62),(4102,35,2,2789.951015,0,7,62),(4103,35,2,0.015908,0,21,62),(4104,35,2,0.027227,0,22,62),(4105,35,2,0.005314,0,23,62),(4106,35,2,0.04009,0,24,62),(4107,35,2,0.001942,0,25,62),(4108,36,7,0.781944,0,38,49),(4109,36,7,0.423427,0,13,53),(4110,36,7,0.413123,0,1,53),(4111,36,7,33.012711,0,17,46),(4112,36,7,1.15654,0,13,46),(4113,36,7,-1,0,20,47),(4114,36,7,37.71354,0,5,48),(4115,36,7,1558.071889,0,12,51),(4116,36,7,19.433101,0,15,51),(4117,36,7,0.535338,0,14,52),(4118,36,7,1.281199,0,40,50),(4119,36,7,1.335302,0,8,29),(4120,36,7,17.418085,0,9,29),(4121,36,7,0,0,12,29),(4122,36,7,0,0,16,29),(4123,36,7,6.664582,0,18,29),(4124,36,7,-1,0,19,29),(4125,36,7,10.304935,0,11,29),(4126,36,7,3.160767,0,10,29),(4127,36,7,0.071948,0,1,95),(4128,36,7,0.056699,0,43,95),(4129,36,7,1.375194,0,11,95),(4130,36,7,-2,0,1,79),(4131,36,7,-2,0,13,79),(4132,36,7,-2,0,26,79),(4133,36,7,-2,0,8,79),(4134,36,7,-2,0,27,79),(4135,36,7,-2,0,28,79),(4136,36,7,0,0,29,79),(4137,36,7,-2,0,30,79),(4138,36,7,-2,0,31,79),(4139,36,7,-2,0,32,79),(4140,36,7,-2,0,10,79),(4141,36,7,-2,0,11,79),(4142,36,7,-2,0,15,79),(4143,36,7,-2,0,5,79),(4144,36,7,-2,0,17,79),(4145,36,7,-2,0,20,79),(4146,36,7,-2,0,12,79),(4147,36,7,-2,0,33,79),(4148,36,7,-2,0,16,79),(4149,36,7,-2,0,34,79),(4150,36,7,-2,0,1,80),(4151,36,7,-2,0,13,80),(4152,36,7,-2,0,26,80),(4153,36,7,-2,0,8,80),(4154,36,7,-2,0,27,80),(4155,36,7,-2,0,28,80),(4156,36,7,0,0,29,80),(4157,36,7,-2,0,30,80),(4158,36,7,-2,0,31,80),(4159,36,7,-2,0,32,80),(4160,36,7,-2,0,10,80),(4161,36,7,-2,0,11,80),(4162,36,7,-2,0,15,80),(4163,36,7,-2,0,5,80),(4164,36,7,-2,0,17,80),(4165,36,7,-2,0,20,80),(4166,36,7,-2,0,12,80),(4167,36,7,-2,0,33,80),(4168,36,7,-2,0,16,80),(4169,36,7,-2,0,34,80),(4170,36,7,-2,0,1,81),(4171,36,7,-2,0,13,81),(4172,36,7,-2,0,26,81),(4173,36,7,-2,0,8,81),(4174,36,7,-2,0,27,81),(4175,36,7,-2,0,28,81),(4176,36,7,0,0,29,81),(4177,36,7,-2,0,30,81),(4178,36,7,-2,0,31,81),(4179,36,7,-2,0,32,81),(4180,36,7,-2,0,10,81),(4181,36,7,-2,0,11,81),(4182,36,7,-2,0,15,81),(4183,36,7,-2,0,5,81),(4184,36,7,-2,0,17,81),(4185,36,7,-2,0,20,81),(4186,36,7,-2,0,12,81),(4187,36,7,-2,0,33,81),(4188,36,7,-2,0,16,81),(4189,36,7,-2,0,34,81),(4190,36,7,0.037035,0,13,89),(4191,36,7,0.109123,0,14,89),(4192,36,7,0.908855,0,13,89),(4193,36,7,257.817496,0,5,89),(4194,36,7,29.39175,0,15,89),(4195,36,7,42.39613,0,17,89),(4196,36,7,1685.940634,0,20,89),(4197,36,7,-2,0,12,89),(4198,36,7,-1,0,33,89),(4199,36,7,-2,0,16,89);
/*!40000 ALTER TABLE `results` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-07-03 21:48:50
